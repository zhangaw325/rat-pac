//
// File generated by rootcint at Thu Jul 20 22:05:47 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME builddIlinuxx8664gccdIRAT_Dict_jailbreak
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RAT_Dict_jailbreak.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      namespace json {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::json::Value Value;
      #else
      class Value  {
         public:
         //friend XX;
         unsigned int* refcount; //
         ::json::Type type; //
         ::json::TData data; //
      };
      #endif
      } 
      namespace RAT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::RAT::Log Log;
      #else
      class Log  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::RAT::Log::Level Level;
         #else
         enum Level  {
         };
         #endif

      };
      #endif
      } 
      namespace RAT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::RAT::HTTPDownloader HTTPDownloader;
      #else
      class HTTPDownloader  {
         public:
         //friend XX;
         void* handle; //
         bool noproxy_set; //
         ::basic_ostringstream< char, ::char_traits< char >, allocator< char >  > contents; //
      };
      #endif
      } 
      namespace RAT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::RAT::DBFieldCallback DBFieldCallback;
      #else
      class DBFieldCallback  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~DBFieldCallback() throw() {};
      };
      #endif
      } 
      namespace RAT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::RAT::DBTable DBTable;
      #else
      class DBTable  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::RAT::DBTable::FieldType FieldType;
         #else
         enum FieldType  {
         };
         #endif

         string tblname; //*< Name of table */
         string index; //*< Index of table */
         int run_begin; //*< First run in which this table is valid */
         int run_end; //*< Last run in which this table is valid */
         ::json::Value table; //
         ::stlplus::hash< ::string, ::RAT::DBTable::FieldType, ::RAT::pyhash, ::equal_to< ::string >  > arrayTypeCache; //
         ::stlplus::hash< ::string, ::RAT::DBFieldCallback*, ::RAT::pyhash, ::equal_to< ::string >  > iatbl_deferred; //
         ::stlplus::hash< ::string, ::RAT::DBFieldCallback*, ::RAT::pyhash, ::equal_to< ::string >  > datbl_deferred; //
      };
      #endif
      } 
      namespace RAT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::RAT::DB DB;
      #else
      class DB  :  public ::RAT::DBFieldCallback {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~DB() throw() {};
         list< ::RAT::DBLink* > links; //
         string server; //
         set< ::string > tableNamesOnServer; //
         set< ::RAT::DBTableKey > tablesNotOnServer; //
         ::RAT::HTTPDownloader downloader; //
         ::RAT::DBTableSet tables; //
         deque< pair< ::RAT::DBTableKey, bool >  > tablesFromServer; //
         int run; //
      };
      #endif
      } 
      namespace RAT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::RAT::DBLink DBLink;
      #else
      class DBLink  {
         public:
         //friend XX;
         ::RAT::DB* db; //
         string tblname; //
         string index; //
         int currentRun; //
      };
      #endif
      } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::simple_ptr_nocopy< ::RAT::DBLink > simple_ptr_nocopylERATcLcLDBLinkgR;
      #else
      class simple_ptr_nocopylERATcLcLDBLinkgR  {
         public:
         //friend XX;
         typedef ::RAT::DBLink value_type;
         typedef ::RAT::DBLink& reference;
         typedef ::RAT::DBLink& const_reference;
         ::RAT::DBLink* m_pointer; //
         unsigned int* m_count; //
      };
      #endif

      namespace RAT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::RAT::DBTextLoader DBTextLoader;
      #else
      class DBTextLoader  {
         public:
         //friend XX;
      };
      #endif
      } 
      namespace RAT {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::RAT::DBJsonLoader DBJsonLoader;
      #else
      class DBJsonLoader  {
         public:
         //friend XX;
      };
      #endif
      } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::string, ::string > pairlEstringcOstringgR;
      #else
      class pairlEstringcOstringgR  {
         public:
         //friend XX;
         string first; //
         string second; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void RATcLcLDScLcLMCParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMCParticle(void *p = 0);
   static void *newArray_RATcLcLDScLcLMCParticle(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMCParticle(void *p);
   static void deleteArray_RATcLcLDScLcLMCParticle(void *p);
   static void destruct_RATcLcLDScLcLMCParticle(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MCParticle*)
   {
      ::RAT::DS::MCParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MCParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MCParticle", ::RAT::DS::MCParticle::Class_Version(), "include/RAT/DS/MCParticle.hh", 21,
                  typeid(::RAT::DS::MCParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MCParticle::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::MCParticle) );
      instance.SetNew(&new_RATcLcLDScLcLMCParticle);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMCParticle);
      instance.SetDelete(&delete_RATcLcLDScLcLMCParticle);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMCParticle);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMCParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MCParticle*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MCParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MCParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLMCTrackStep_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMCTrackStep(void *p = 0);
   static void *newArray_RATcLcLDScLcLMCTrackStep(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMCTrackStep(void *p);
   static void deleteArray_RATcLcLDScLcLMCTrackStep(void *p);
   static void destruct_RATcLcLDScLcLMCTrackStep(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MCTrackStep*)
   {
      ::RAT::DS::MCTrackStep *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MCTrackStep >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MCTrackStep", ::RAT::DS::MCTrackStep::Class_Version(), "include/RAT/DS/MCTrackStep.hh", 28,
                  typeid(::RAT::DS::MCTrackStep), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MCTrackStep::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::MCTrackStep) );
      instance.SetNew(&new_RATcLcLDScLcLMCTrackStep);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMCTrackStep);
      instance.SetDelete(&delete_RATcLcLDScLcLMCTrackStep);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMCTrackStep);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMCTrackStep);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MCTrackStep*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MCTrackStep*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MCTrackStep*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLMCTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMCTrack(void *p = 0);
   static void *newArray_RATcLcLDScLcLMCTrack(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMCTrack(void *p);
   static void deleteArray_RATcLcLDScLcLMCTrack(void *p);
   static void destruct_RATcLcLDScLcLMCTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MCTrack*)
   {
      ::RAT::DS::MCTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MCTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MCTrack", ::RAT::DS::MCTrack::Class_Version(), "include/RAT/DS/MCTrack.hh", 21,
                  typeid(::RAT::DS::MCTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MCTrack::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::MCTrack) );
      instance.SetNew(&new_RATcLcLDScLcLMCTrack);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMCTrack);
      instance.SetDelete(&delete_RATcLcLDScLcLMCTrack);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMCTrack);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMCTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MCTrack*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MCTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MCTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLMCSummary_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMCSummary(void *p = 0);
   static void *newArray_RATcLcLDScLcLMCSummary(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMCSummary(void *p);
   static void deleteArray_RATcLcLDScLcLMCSummary(void *p);
   static void destruct_RATcLcLDScLcLMCSummary(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MCSummary*)
   {
      ::RAT::DS::MCSummary *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MCSummary >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MCSummary", ::RAT::DS::MCSummary::Class_Version(), "include/RAT/DS/MCSummary.hh", 24,
                  typeid(::RAT::DS::MCSummary), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MCSummary::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::MCSummary) );
      instance.SetNew(&new_RATcLcLDScLcLMCSummary);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMCSummary);
      instance.SetDelete(&delete_RATcLcLDScLcLMCSummary);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMCSummary);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMCSummary);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MCSummary*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MCSummary*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MCSummary*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLMCPhoton_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMCPhoton(void *p = 0);
   static void *newArray_RATcLcLDScLcLMCPhoton(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMCPhoton(void *p);
   static void deleteArray_RATcLcLDScLcLMCPhoton(void *p);
   static void destruct_RATcLcLDScLcLMCPhoton(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MCPhoton*)
   {
      ::RAT::DS::MCPhoton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MCPhoton >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MCPhoton", ::RAT::DS::MCPhoton::Class_Version(), "include/RAT/DS/MCPhoton.hh", 25,
                  typeid(::RAT::DS::MCPhoton), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MCPhoton::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::MCPhoton) );
      instance.SetNew(&new_RATcLcLDScLcLMCPhoton);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMCPhoton);
      instance.SetDelete(&delete_RATcLcLDScLcLMCPhoton);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMCPhoton);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMCPhoton);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MCPhoton*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MCPhoton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MCPhoton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void jsoncLcLValue_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void jsoncLcLValue_Dictionary();
   static void *new_jsoncLcLValue(void *p = 0);
   static void *newArray_jsoncLcLValue(Long_t size, void *p);
   static void delete_jsoncLcLValue(void *p);
   static void deleteArray_jsoncLcLValue(void *p);
   static void destruct_jsoncLcLValue(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::json::Value*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::json::Value) == sizeof( ::ROOTShadow::Shadow::json::Value));
      ::json::Value *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::json::Value),0);
      static ::ROOT::TGenericClassInfo 
         instance("json::Value", "include/RAT/json.hh", 67,
                  typeid(::json::Value), ::ROOT::DefineBehavior(ptr, ptr),
                  &jsoncLcLValue_ShowMembers, &jsoncLcLValue_Dictionary, isa_proxy, 4,
                  sizeof(::json::Value) );
      instance.SetNew(&new_jsoncLcLValue);
      instance.SetNewArray(&newArray_jsoncLcLValue);
      instance.SetDelete(&delete_jsoncLcLValue);
      instance.SetDeleteArray(&deleteArray_jsoncLcLValue);
      instance.SetDestructor(&destruct_jsoncLcLValue);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::json::Value*)
   {
      return GenerateInitInstanceLocal((::json::Value*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::json::Value*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void jsoncLcLValue_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::json::Value*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLLog_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RATcLcLLog_Dictionary();
   static void *new_RATcLcLLog(void *p = 0);
   static void *newArray_RATcLcLLog(Long_t size, void *p);
   static void delete_RATcLcLLog(void *p);
   static void deleteArray_RATcLcLLog(void *p);
   static void destruct_RATcLcLLog(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::Log*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::RAT::Log) == sizeof( ::ROOTShadow::Shadow::RAT::Log));
      ::RAT::Log *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::RAT::Log),0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::Log", "include/RAT/Log.hh", 91,
                  typeid(::RAT::Log), ::ROOT::DefineBehavior(ptr, ptr),
                  &RATcLcLLog_ShowMembers, &RATcLcLLog_Dictionary, isa_proxy, 4,
                  sizeof(::RAT::Log) );
      instance.SetNew(&new_RATcLcLLog);
      instance.SetNewArray(&newArray_RATcLcLLog);
      instance.SetDelete(&delete_RATcLcLLog);
      instance.SetDeleteArray(&deleteArray_RATcLcLLog);
      instance.SetDestructor(&destruct_RATcLcLLog);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::Log*)
   {
      return GenerateInitInstanceLocal((::RAT::Log*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::Log*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RATcLcLLog_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::Log*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLMCPMT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMCPMT(void *p = 0);
   static void *newArray_RATcLcLDScLcLMCPMT(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMCPMT(void *p);
   static void deleteArray_RATcLcLDScLcLMCPMT(void *p);
   static void destruct_RATcLcLDScLcLMCPMT(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MCPMT*)
   {
      ::RAT::DS::MCPMT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MCPMT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MCPMT", ::RAT::DS::MCPMT::Class_Version(), "include/RAT/DS/MCPMT.hh", 21,
                  typeid(::RAT::DS::MCPMT), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MCPMT::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::MCPMT) );
      instance.SetNew(&new_RATcLcLDScLcLMCPMT);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMCPMT);
      instance.SetDelete(&delete_RATcLcLDScLcLMCPMT);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMCPMT);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMCPMT);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MCPMT*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MCPMT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MCPMT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMC(void *p = 0);
   static void *newArray_RATcLcLDScLcLMC(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMC(void *p);
   static void deleteArray_RATcLcLDScLcLMC(void *p);
   static void destruct_RATcLcLDScLcLMC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MC*)
   {
      ::RAT::DS::MC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MC", ::RAT::DS::MC::Class_Version(), "include/RAT/DS/MC.hh", 28,
                  typeid(::RAT::DS::MC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MC::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::MC) );
      instance.SetNew(&new_RATcLcLDScLcLMC);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMC);
      instance.SetDelete(&delete_RATcLcLDScLcLMC);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMC);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MC*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLPMT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLPMT(void *p = 0);
   static void *newArray_RATcLcLDScLcLPMT(Long_t size, void *p);
   static void delete_RATcLcLDScLcLPMT(void *p);
   static void deleteArray_RATcLcLDScLcLPMT(void *p);
   static void destruct_RATcLcLDScLcLPMT(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::PMT*)
   {
      ::RAT::DS::PMT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::PMT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::PMT", ::RAT::DS::PMT::Class_Version(), "include/RAT/DS/PMT.hh", 16,
                  typeid(::RAT::DS::PMT), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::PMT::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::PMT) );
      instance.SetNew(&new_RATcLcLDScLcLPMT);
      instance.SetNewArray(&newArray_RATcLcLDScLcLPMT);
      instance.SetDelete(&delete_RATcLcLDScLcLPMT);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLPMT);
      instance.SetDestructor(&destruct_RATcLcLDScLcLPMT);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::PMT*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::PMT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::PMT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLPosFit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_RATcLcLDScLcLPosFit(void *p);
   static void deleteArray_RATcLcLDScLcLPosFit(void *p);
   static void destruct_RATcLcLDScLcLPosFit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::PosFit*)
   {
      ::RAT::DS::PosFit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::PosFit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::PosFit", ::RAT::DS::PosFit::Class_Version(), "include/RAT/DS/PosFit.hh", 21,
                  typeid(::RAT::DS::PosFit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::PosFit::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::PosFit) );
      instance.SetDelete(&delete_RATcLcLDScLcLPosFit);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLPosFit);
      instance.SetDestructor(&destruct_RATcLcLDScLcLPosFit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::PosFit*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::PosFit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::PosFit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLCentroid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLCentroid(void *p = 0);
   static void *newArray_RATcLcLDScLcLCentroid(Long_t size, void *p);
   static void delete_RATcLcLDScLcLCentroid(void *p);
   static void deleteArray_RATcLcLDScLcLCentroid(void *p);
   static void destruct_RATcLcLDScLcLCentroid(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::Centroid*)
   {
      ::RAT::DS::Centroid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::Centroid >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::Centroid", ::RAT::DS::Centroid::Class_Version(), "include/RAT/DS/Centroid.hh", 14,
                  typeid(::RAT::DS::Centroid), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::Centroid::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::Centroid) );
      instance.SetNew(&new_RATcLcLDScLcLCentroid);
      instance.SetNewArray(&newArray_RATcLcLDScLcLCentroid);
      instance.SetDelete(&delete_RATcLcLDScLcLCentroid);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLCentroid);
      instance.SetDestructor(&destruct_RATcLcLDScLcLCentroid);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::Centroid*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::Centroid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::Centroid*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLPathFit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLPathFit(void *p = 0);
   static void *newArray_RATcLcLDScLcLPathFit(Long_t size, void *p);
   static void delete_RATcLcLDScLcLPathFit(void *p);
   static void deleteArray_RATcLcLDScLcLPathFit(void *p);
   static void destruct_RATcLcLDScLcLPathFit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::PathFit*)
   {
      ::RAT::DS::PathFit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::PathFit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::PathFit", ::RAT::DS::PathFit::Class_Version(), "include/RAT/DS/PathFit.hh", 14,
                  typeid(::RAT::DS::PathFit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::PathFit::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::PathFit) );
      instance.SetNew(&new_RATcLcLDScLcLPathFit);
      instance.SetNewArray(&newArray_RATcLcLDScLcLPathFit);
      instance.SetDelete(&delete_RATcLcLDScLcLPathFit);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLPathFit);
      instance.SetDestructor(&destruct_RATcLcLDScLcLPathFit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::PathFit*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::PathFit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::PathFit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLEV_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLEV(void *p = 0);
   static void *newArray_RATcLcLDScLcLEV(Long_t size, void *p);
   static void delete_RATcLcLDScLcLEV(void *p);
   static void deleteArray_RATcLcLDScLcLEV(void *p);
   static void destruct_RATcLcLDScLcLEV(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::EV*)
   {
      ::RAT::DS::EV *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::EV >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::EV", ::RAT::DS::EV::Class_Version(), "include/RAT/DS/EV.hh", 29,
                  typeid(::RAT::DS::EV), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::EV::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::EV) );
      instance.SetNew(&new_RATcLcLDScLcLEV);
      instance.SetNewArray(&newArray_RATcLcLDScLcLEV);
      instance.SetDelete(&delete_RATcLcLDScLcLEV);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLEV);
      instance.SetDestructor(&destruct_RATcLcLDScLcLEV);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::EV*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::EV*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::EV*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLCalib_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLCalib(void *p = 0);
   static void *newArray_RATcLcLDScLcLCalib(Long_t size, void *p);
   static void delete_RATcLcLDScLcLCalib(void *p);
   static void deleteArray_RATcLcLDScLcLCalib(void *p);
   static void destruct_RATcLcLDScLcLCalib(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::Calib*)
   {
      ::RAT::DS::Calib *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::Calib >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::Calib", ::RAT::DS::Calib::Class_Version(), "include/RAT/DS/Calib.hh", 29,
                  typeid(::RAT::DS::Calib), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::Calib::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::Calib) );
      instance.SetNew(&new_RATcLcLDScLcLCalib);
      instance.SetNewArray(&newArray_RATcLcLDScLcLCalib);
      instance.SetDelete(&delete_RATcLcLDScLcLCalib);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLCalib);
      instance.SetDestructor(&destruct_RATcLcLDScLcLCalib);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::Calib*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::Calib*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::Calib*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLRoot_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLRoot(void *p = 0);
   static void *newArray_RATcLcLDScLcLRoot(Long_t size, void *p);
   static void delete_RATcLcLDScLcLRoot(void *p);
   static void deleteArray_RATcLcLDScLcLRoot(void *p);
   static void destruct_RATcLcLDScLcLRoot(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::Root*)
   {
      ::RAT::DS::Root *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::Root >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::Root", ::RAT::DS::Root::Class_Version(), "include/RAT/DS/Root.hh", 38,
                  typeid(::RAT::DS::Root), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::Root::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::Root) );
      instance.SetNew(&new_RATcLcLDScLcLRoot);
      instance.SetNewArray(&newArray_RATcLcLDScLcLRoot);
      instance.SetDelete(&delete_RATcLcLDScLcLRoot);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLRoot);
      instance.SetDestructor(&destruct_RATcLcLDScLcLRoot);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::Root*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::Root*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::Root*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLPMTInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLPMTInfo(void *p = 0);
   static void *newArray_RATcLcLDScLcLPMTInfo(Long_t size, void *p);
   static void delete_RATcLcLDScLcLPMTInfo(void *p);
   static void deleteArray_RATcLcLDScLcLPMTInfo(void *p);
   static void destruct_RATcLcLDScLcLPMTInfo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::PMTInfo*)
   {
      ::RAT::DS::PMTInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::PMTInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::PMTInfo", ::RAT::DS::PMTInfo::Class_Version(), "include/RAT/DS/PMTInfo.hh", 18,
                  typeid(::RAT::DS::PMTInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::PMTInfo::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::PMTInfo) );
      instance.SetNew(&new_RATcLcLDScLcLPMTInfo);
      instance.SetNewArray(&newArray_RATcLcLDScLcLPMTInfo);
      instance.SetDelete(&delete_RATcLcLDScLcLPMTInfo);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLPMTInfo);
      instance.SetDestructor(&destruct_RATcLcLDScLcLPMTInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::PMTInfo*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::PMTInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::PMTInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLRun_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLRun(void *p = 0);
   static void *newArray_RATcLcLDScLcLRun(Long_t size, void *p);
   static void delete_RATcLcLDScLcLRun(void *p);
   static void deleteArray_RATcLcLDScLcLRun(void *p);
   static void destruct_RATcLcLDScLcLRun(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::Run*)
   {
      ::RAT::DS::Run *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::Run >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::Run", ::RAT::DS::Run::Class_Version(), "include/RAT/DS/Run.hh", 19,
                  typeid(::RAT::DS::Run), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::Run::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::Run) );
      instance.SetNew(&new_RATcLcLDScLcLRun);
      instance.SetNewArray(&newArray_RATcLcLDScLcLRun);
      instance.SetDelete(&delete_RATcLcLDScLcLRun);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLRun);
      instance.SetDestructor(&destruct_RATcLcLDScLcLRun);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::Run*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::Run*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::Run*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLRunStore_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLRunStore(void *p = 0);
   static void *newArray_RATcLcLDScLcLRunStore(Long_t size, void *p);
   static void delete_RATcLcLDScLcLRunStore(void *p);
   static void deleteArray_RATcLcLDScLcLRunStore(void *p);
   static void destruct_RATcLcLDScLcLRunStore(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::RunStore*)
   {
      ::RAT::DS::RunStore *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::RunStore >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::RunStore", ::RAT::DS::RunStore::Class_Version(), "include/RAT/DS/RunStore.hh", 78,
                  typeid(::RAT::DS::RunStore), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::RunStore::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DS::RunStore) );
      instance.SetNew(&new_RATcLcLDScLcLRunStore);
      instance.SetNewArray(&newArray_RATcLcLDScLcLRunStore);
      instance.SetDelete(&delete_RATcLcLDScLcLRunStore);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLRunStore);
      instance.SetDestructor(&destruct_RATcLcLDScLcLRunStore);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::RunStore*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::RunStore*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::RunStore*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDSReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_RATcLcLDSReader(void *p);
   static void deleteArray_RATcLcLDSReader(void *p);
   static void destruct_RATcLcLDSReader(void *p);
   static void streamer_RATcLcLDSReader(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DSReader*)
   {
      ::RAT::DSReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DSReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DSReader", ::RAT::DSReader::Class_Version(), "include/RAT/DSReader.hh", 13,
                  typeid(::RAT::DSReader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DSReader::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DSReader) );
      instance.SetDelete(&delete_RATcLcLDSReader);
      instance.SetDeleteArray(&deleteArray_RATcLcLDSReader);
      instance.SetDestructor(&destruct_RATcLcLDSReader);
      instance.SetStreamerFunc(&streamer_RATcLcLDSReader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DSReader*)
   {
      return GenerateInitInstanceLocal((::RAT::DSReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DSReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDSWriter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_RATcLcLDSWriter(void *p);
   static void deleteArray_RATcLcLDSWriter(void *p);
   static void destruct_RATcLcLDSWriter(void *p);
   static void streamer_RATcLcLDSWriter(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DSWriter*)
   {
      ::RAT::DSWriter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DSWriter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DSWriter", ::RAT::DSWriter::Class_Version(), "include/RAT/DSWriter.hh", 14,
                  typeid(::RAT::DSWriter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DSWriter::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DSWriter) );
      instance.SetDelete(&delete_RATcLcLDSWriter);
      instance.SetDeleteArray(&deleteArray_RATcLcLDSWriter);
      instance.SetDestructor(&destruct_RATcLcLDSWriter);
      instance.SetStreamerFunc(&streamer_RATcLcLDSWriter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DSWriter*)
   {
      return GenerateInitInstanceLocal((::RAT::DSWriter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DSWriter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLTrackNode_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLTrackNode(void *p = 0);
   static void *newArray_RATcLcLTrackNode(Long_t size, void *p);
   static void delete_RATcLcLTrackNode(void *p);
   static void deleteArray_RATcLcLTrackNode(void *p);
   static void destruct_RATcLcLTrackNode(void *p);
   static void streamer_RATcLcLTrackNode(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::TrackNode*)
   {
      ::RAT::TrackNode *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::TrackNode >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::TrackNode", ::RAT::TrackNode::Class_Version(), "include/RAT/TrackNode.hh", 10,
                  typeid(::RAT::TrackNode), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::TrackNode::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::TrackNode) );
      instance.SetNew(&new_RATcLcLTrackNode);
      instance.SetNewArray(&newArray_RATcLcLTrackNode);
      instance.SetDelete(&delete_RATcLcLTrackNode);
      instance.SetDeleteArray(&deleteArray_RATcLcLTrackNode);
      instance.SetDestructor(&destruct_RATcLcLTrackNode);
      instance.SetStreamerFunc(&streamer_RATcLcLTrackNode);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::TrackNode*)
   {
      return GenerateInitInstanceLocal((::RAT::TrackNode*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::TrackNode*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLTrackCursor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RATcLcLTrackCursor_Dictionary();
   static void delete_RATcLcLTrackCursor(void *p);
   static void deleteArray_RATcLcLTrackCursor(void *p);
   static void destruct_RATcLcLTrackCursor(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::TrackCursor*)
   {
      ::RAT::TrackCursor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::RAT::TrackCursor),0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::TrackCursor", "include/RAT/TrackCursor.hh", 16,
                  typeid(::RAT::TrackCursor), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &RATcLcLTrackCursor_Dictionary, isa_proxy, 0,
                  sizeof(::RAT::TrackCursor) );
      instance.SetDelete(&delete_RATcLcLTrackCursor);
      instance.SetDeleteArray(&deleteArray_RATcLcLTrackCursor);
      instance.SetDestructor(&destruct_RATcLcLTrackCursor);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::TrackCursor*)
   {
      return GenerateInitInstanceLocal((::RAT::TrackCursor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::TrackCursor*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RATcLcLTrackCursor_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::TrackCursor*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLTrackNav_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RATcLcLTrackNav_Dictionary();
   static void delete_RATcLcLTrackNav(void *p);
   static void deleteArray_RATcLcLTrackNav(void *p);
   static void destruct_RATcLcLTrackNav(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::TrackNav*)
   {
      ::RAT::TrackNav *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::RAT::TrackNav),0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::TrackNav", "include/RAT/TrackNav.hh", 11,
                  typeid(::RAT::TrackNav), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &RATcLcLTrackNav_Dictionary, isa_proxy, 0,
                  sizeof(::RAT::TrackNav) );
      instance.SetDelete(&delete_RATcLcLTrackNav);
      instance.SetDeleteArray(&deleteArray_RATcLcLTrackNav);
      instance.SetDestructor(&destruct_RATcLcLTrackNav);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::TrackNav*)
   {
      return GenerateInitInstanceLocal((::RAT::TrackNav*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::TrackNav*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RATcLcLTrackNav_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::TrackNav*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLHTTPDownloader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RATcLcLHTTPDownloader_Dictionary();
   static void *new_RATcLcLHTTPDownloader(void *p = 0);
   static void *newArray_RATcLcLHTTPDownloader(Long_t size, void *p);
   static void delete_RATcLcLHTTPDownloader(void *p);
   static void deleteArray_RATcLcLHTTPDownloader(void *p);
   static void destruct_RATcLcLHTTPDownloader(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::HTTPDownloader*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::RAT::HTTPDownloader) == sizeof( ::ROOTShadow::Shadow::RAT::HTTPDownloader));
      ::RAT::HTTPDownloader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::RAT::HTTPDownloader),0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::HTTPDownloader", "include/RAT/HTTPDownloader.hh", 20,
                  typeid(::RAT::HTTPDownloader), ::ROOT::DefineBehavior(ptr, ptr),
                  &RATcLcLHTTPDownloader_ShowMembers, &RATcLcLHTTPDownloader_Dictionary, isa_proxy, 4,
                  sizeof(::RAT::HTTPDownloader) );
      instance.SetNew(&new_RATcLcLHTTPDownloader);
      instance.SetNewArray(&newArray_RATcLcLHTTPDownloader);
      instance.SetDelete(&delete_RATcLcLHTTPDownloader);
      instance.SetDeleteArray(&deleteArray_RATcLcLHTTPDownloader);
      instance.SetDestructor(&destruct_RATcLcLHTTPDownloader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::HTTPDownloader*)
   {
      return GenerateInitInstanceLocal((::RAT::HTTPDownloader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::HTTPDownloader*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RATcLcLHTTPDownloader_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::HTTPDownloader*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDBFieldCallback_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RATcLcLDBFieldCallback_Dictionary();
   static void delete_RATcLcLDBFieldCallback(void *p);
   static void deleteArray_RATcLcLDBFieldCallback(void *p);
   static void destruct_RATcLcLDBFieldCallback(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DBFieldCallback*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::RAT::DBFieldCallback) == sizeof( ::ROOTShadow::Shadow::RAT::DBFieldCallback));
      ::RAT::DBFieldCallback *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::RAT::DBFieldCallback),0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DBFieldCallback", "include/RAT/DBFieldCallback.hh", 8,
                  typeid(::RAT::DBFieldCallback), ::ROOT::DefineBehavior(ptr, ptr),
                  &RATcLcLDBFieldCallback_ShowMembers, &RATcLcLDBFieldCallback_Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DBFieldCallback) );
      instance.SetDelete(&delete_RATcLcLDBFieldCallback);
      instance.SetDeleteArray(&deleteArray_RATcLcLDBFieldCallback);
      instance.SetDestructor(&destruct_RATcLcLDBFieldCallback);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DBFieldCallback*)
   {
      return GenerateInitInstanceLocal((::RAT::DBFieldCallback*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DBFieldCallback*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RATcLcLDBFieldCallback_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DBFieldCallback*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDBTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RATcLcLDBTable_Dictionary();
   static void *new_RATcLcLDBTable(void *p = 0);
   static void *newArray_RATcLcLDBTable(Long_t size, void *p);
   static void delete_RATcLcLDBTable(void *p);
   static void deleteArray_RATcLcLDBTable(void *p);
   static void destruct_RATcLcLDBTable(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DBTable*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::RAT::DBTable) == sizeof( ::ROOTShadow::Shadow::RAT::DBTable));
      ::RAT::DBTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::RAT::DBTable),0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DBTable", "include/RAT/DBTable.hh", 22,
                  typeid(::RAT::DBTable), ::ROOT::DefineBehavior(ptr, ptr),
                  &RATcLcLDBTable_ShowMembers, &RATcLcLDBTable_Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DBTable) );
      instance.SetNew(&new_RATcLcLDBTable);
      instance.SetNewArray(&newArray_RATcLcLDBTable);
      instance.SetDelete(&delete_RATcLcLDBTable);
      instance.SetDeleteArray(&deleteArray_RATcLcLDBTable);
      instance.SetDestructor(&destruct_RATcLcLDBTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DBTable*)
   {
      return GenerateInitInstanceLocal((::RAT::DBTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DBTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RATcLcLDBTable_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DBTable*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDB_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RATcLcLDB_Dictionary();
   static void *new_RATcLcLDB(void *p = 0);
   static void *newArray_RATcLcLDB(Long_t size, void *p);
   static void delete_RATcLcLDB(void *p);
   static void deleteArray_RATcLcLDB(void *p);
   static void destruct_RATcLcLDB(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DB*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::RAT::DB) == sizeof( ::ROOTShadow::Shadow::RAT::DB));
      ::RAT::DB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::RAT::DB),0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DB", "include/RAT/DB.hh", 128,
                  typeid(::RAT::DB), ::ROOT::DefineBehavior(ptr, ptr),
                  &RATcLcLDB_ShowMembers, &RATcLcLDB_Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DB) );
      instance.SetNew(&new_RATcLcLDB);
      instance.SetNewArray(&newArray_RATcLcLDB);
      instance.SetDelete(&delete_RATcLcLDB);
      instance.SetDeleteArray(&deleteArray_RATcLcLDB);
      instance.SetDestructor(&destruct_RATcLcLDB);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DB*)
   {
      return GenerateInitInstanceLocal((::RAT::DB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DB*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RATcLcLDB_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DB*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDBLink_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RATcLcLDBLink_Dictionary();
   static void delete_RATcLcLDBLink(void *p);
   static void deleteArray_RATcLcLDBLink(void *p);
   static void destruct_RATcLcLDBLink(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DBLink*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::RAT::DBLink) == sizeof( ::ROOTShadow::Shadow::RAT::DBLink));
      ::RAT::DBLink *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::RAT::DBLink),0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DBLink", "include/RAT/DBLink.hh", 51,
                  typeid(::RAT::DBLink), ::ROOT::DefineBehavior(ptr, ptr),
                  &RATcLcLDBLink_ShowMembers, &RATcLcLDBLink_Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DBLink) );
      instance.SetDelete(&delete_RATcLcLDBLink);
      instance.SetDeleteArray(&deleteArray_RATcLcLDBLink);
      instance.SetDestructor(&destruct_RATcLcLDBLink);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DBLink*)
   {
      return GenerateInitInstanceLocal((::RAT::DBLink*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DBLink*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RATcLcLDBLink_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DBLink*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void simple_ptr_nocopylERATcLcLDBLinkgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void simple_ptr_nocopylERATcLcLDBLinkgR_Dictionary();
   static void *new_simple_ptr_nocopylERATcLcLDBLinkgR(void *p = 0);
   static void *newArray_simple_ptr_nocopylERATcLcLDBLinkgR(Long_t size, void *p);
   static void delete_simple_ptr_nocopylERATcLcLDBLinkgR(void *p);
   static void deleteArray_simple_ptr_nocopylERATcLcLDBLinkgR(void *p);
   static void destruct_simple_ptr_nocopylERATcLcLDBLinkgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::simple_ptr_nocopy<RAT::DBLink>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::simple_ptr_nocopy<RAT::DBLink>) == sizeof( ::ROOTShadow::Shadow::simple_ptr_nocopylERATcLcLDBLinkgR));
      ::simple_ptr_nocopy<RAT::DBLink> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::simple_ptr_nocopy<RAT::DBLink>),0);
      static ::ROOT::TGenericClassInfo 
         instance("simple_ptr_nocopy<RAT::DBLink>", "include/RAT/smart_ptr.hpp", 354,
                  typeid(::simple_ptr_nocopy<RAT::DBLink>), ::ROOT::DefineBehavior(ptr, ptr),
                  &simple_ptr_nocopylERATcLcLDBLinkgR_ShowMembers, &simple_ptr_nocopylERATcLcLDBLinkgR_Dictionary, isa_proxy, 4,
                  sizeof(::simple_ptr_nocopy<RAT::DBLink>) );
      instance.SetNew(&new_simple_ptr_nocopylERATcLcLDBLinkgR);
      instance.SetNewArray(&newArray_simple_ptr_nocopylERATcLcLDBLinkgR);
      instance.SetDelete(&delete_simple_ptr_nocopylERATcLcLDBLinkgR);
      instance.SetDeleteArray(&deleteArray_simple_ptr_nocopylERATcLcLDBLinkgR);
      instance.SetDestructor(&destruct_simple_ptr_nocopylERATcLcLDBLinkgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::simple_ptr_nocopy<RAT::DBLink>*)
   {
      return GenerateInitInstanceLocal((::simple_ptr_nocopy<RAT::DBLink>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::simple_ptr_nocopy<RAT::DBLink>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void simple_ptr_nocopylERATcLcLDBLinkgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::simple_ptr_nocopy<RAT::DBLink>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDBTextLoader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RATcLcLDBTextLoader_Dictionary();
   static void *new_RATcLcLDBTextLoader(void *p = 0);
   static void *newArray_RATcLcLDBTextLoader(Long_t size, void *p);
   static void delete_RATcLcLDBTextLoader(void *p);
   static void deleteArray_RATcLcLDBTextLoader(void *p);
   static void destruct_RATcLcLDBTextLoader(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DBTextLoader*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::RAT::DBTextLoader) == sizeof( ::ROOTShadow::Shadow::RAT::DBTextLoader));
      ::RAT::DBTextLoader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::RAT::DBTextLoader),0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DBTextLoader", "include/RAT/DBTextLoader.hh", 106,
                  typeid(::RAT::DBTextLoader), ::ROOT::DefineBehavior(ptr, ptr),
                  &RATcLcLDBTextLoader_ShowMembers, &RATcLcLDBTextLoader_Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DBTextLoader) );
      instance.SetNew(&new_RATcLcLDBTextLoader);
      instance.SetNewArray(&newArray_RATcLcLDBTextLoader);
      instance.SetDelete(&delete_RATcLcLDBTextLoader);
      instance.SetDeleteArray(&deleteArray_RATcLcLDBTextLoader);
      instance.SetDestructor(&destruct_RATcLcLDBTextLoader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DBTextLoader*)
   {
      return GenerateInitInstanceLocal((::RAT::DBTextLoader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DBTextLoader*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RATcLcLDBTextLoader_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DBTextLoader*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDBJsonLoader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RATcLcLDBJsonLoader_Dictionary();
   static void *new_RATcLcLDBJsonLoader(void *p = 0);
   static void *newArray_RATcLcLDBJsonLoader(Long_t size, void *p);
   static void delete_RATcLcLDBJsonLoader(void *p);
   static void deleteArray_RATcLcLDBJsonLoader(void *p);
   static void destruct_RATcLcLDBJsonLoader(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DBJsonLoader*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::RAT::DBJsonLoader) == sizeof( ::ROOTShadow::Shadow::RAT::DBJsonLoader));
      ::RAT::DBJsonLoader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::RAT::DBJsonLoader),0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DBJsonLoader", "include/RAT/DBJsonLoader.hh", 16,
                  typeid(::RAT::DBJsonLoader), ::ROOT::DefineBehavior(ptr, ptr),
                  &RATcLcLDBJsonLoader_ShowMembers, &RATcLcLDBJsonLoader_Dictionary, isa_proxy, 4,
                  sizeof(::RAT::DBJsonLoader) );
      instance.SetNew(&new_RATcLcLDBJsonLoader);
      instance.SetNewArray(&newArray_RATcLcLDBJsonLoader);
      instance.SetDelete(&delete_RATcLcLDBJsonLoader);
      instance.SetDeleteArray(&deleteArray_RATcLcLDBJsonLoader);
      instance.SetDestructor(&destruct_RATcLcLDBJsonLoader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DBJsonLoader*)
   {
      return GenerateInitInstanceLocal((::RAT::DBJsonLoader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DBJsonLoader*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RATcLcLDBJsonLoader_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DBJsonLoader*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLObjInt_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLObjInt(void *p = 0);
   static void *newArray_RATcLcLObjInt(Long_t size, void *p);
   static void delete_RATcLcLObjInt(void *p);
   static void deleteArray_RATcLcLObjInt(void *p);
   static void destruct_RATcLcLObjInt(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::ObjInt*)
   {
      ::RAT::ObjInt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::ObjInt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::ObjInt", ::RAT::ObjInt::Class_Version(), "include/RAT/ObjInt.hh", 9,
                  typeid(::RAT::ObjInt), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::ObjInt::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::ObjInt) );
      instance.SetNew(&new_RATcLcLObjInt);
      instance.SetNewArray(&newArray_RATcLcLObjInt);
      instance.SetDelete(&delete_RATcLcLObjInt);
      instance.SetDeleteArray(&deleteArray_RATcLcLObjInt);
      instance.SetDestructor(&destruct_RATcLcLObjInt);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::ObjInt*)
   {
      return GenerateInitInstanceLocal((::RAT::ObjInt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::ObjInt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLObjDbl_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLObjDbl(void *p = 0);
   static void *newArray_RATcLcLObjDbl(Long_t size, void *p);
   static void delete_RATcLcLObjDbl(void *p);
   static void deleteArray_RATcLcLObjDbl(void *p);
   static void destruct_RATcLcLObjDbl(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::ObjDbl*)
   {
      ::RAT::ObjDbl *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::ObjDbl >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::ObjDbl", ::RAT::ObjDbl::Class_Version(), "include/RAT/ObjDbl.hh", 9,
                  typeid(::RAT::ObjDbl), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::ObjDbl::Dictionary, isa_proxy, 4,
                  sizeof(::RAT::ObjDbl) );
      instance.SetNew(&new_RATcLcLObjDbl);
      instance.SetNewArray(&newArray_RATcLcLObjDbl);
      instance.SetDelete(&delete_RATcLcLObjDbl);
      instance.SetDeleteArray(&deleteArray_RATcLcLObjDbl);
      instance.SetDestructor(&destruct_RATcLcLObjDbl);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::ObjDbl*)
   {
      return GenerateInitInstanceLocal((::RAT::ObjDbl*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::ObjDbl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void pairlEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEstringcOstringgR_Dictionary();
   static void *new_pairlEstringcOstringgR(void *p = 0);
   static void *newArray_pairlEstringcOstringgR(Long_t size, void *p);
   static void delete_pairlEstringcOstringgR(void *p);
   static void deleteArray_pairlEstringcOstringgR(void *p);
   static void destruct_pairlEstringcOstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const pair<string,string>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(pair<string,string>) == sizeof( ::ROOTShadow::Shadow::pairlEstringcOstringgR));
      pair<string,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<string,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<string,string>", "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/utility", 17,
                  typeid(pair<string,string>), ::ROOT::DefineBehavior(ptr, ptr),
                  &pairlEstringcOstringgR_ShowMembers, &pairlEstringcOstringgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<string,string>) );
      instance.SetNew(&new_pairlEstringcOstringgR);
      instance.SetNewArray(&newArray_pairlEstringcOstringgR);
      instance.SetDelete(&delete_pairlEstringcOstringgR);
      instance.SetDeleteArray(&deleteArray_pairlEstringcOstringgR);
      instance.SetDestructor(&destruct_pairlEstringcOstringgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const pair<string,string>*)
   {
      return GenerateInitInstanceLocal((pair<string,string>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<string,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEstringcOstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const pair<string,string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MCParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCParticle::Class_Name()
{
   return "RAT::DS::MCParticle";
}

//______________________________________________________________________________
const char *MCParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCParticle*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MCTrackStep::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCTrackStep::Class_Name()
{
   return "RAT::DS::MCTrackStep";
}

//______________________________________________________________________________
const char *MCTrackStep::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrackStep*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCTrackStep::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrackStep*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCTrackStep::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrackStep*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCTrackStep::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrackStep*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MCTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCTrack::Class_Name()
{
   return "RAT::DS::MCTrack";
}

//______________________________________________________________________________
const char *MCTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrack*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MCSummary::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCSummary::Class_Name()
{
   return "RAT::DS::MCSummary";
}

//______________________________________________________________________________
const char *MCSummary::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCSummary*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCSummary::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCSummary*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCSummary::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCSummary*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCSummary::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCSummary*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MCPhoton::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCPhoton::Class_Name()
{
   return "RAT::DS::MCPhoton";
}

//______________________________________________________________________________
const char *MCPhoton::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPhoton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCPhoton::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPhoton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCPhoton::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPhoton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCPhoton::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPhoton*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MCPMT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCPMT::Class_Name()
{
   return "RAT::DS::MCPMT";
}

//______________________________________________________________________________
const char *MCPMT::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPMT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCPMT::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPMT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCPMT::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPMT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCPMT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPMT*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MC::Class_Name()
{
   return "RAT::DS::MC";
}

//______________________________________________________________________________
const char *MC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MC*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr PMT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PMT::Class_Name()
{
   return "RAT::DS::PMT";
}

//______________________________________________________________________________
const char *PMT::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMT::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMT::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMT*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr PosFit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PosFit::Class_Name()
{
   return "RAT::DS::PosFit";
}

//______________________________________________________________________________
const char *PosFit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PosFit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PosFit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PosFit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PosFit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PosFit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PosFit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PosFit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr Centroid::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Centroid::Class_Name()
{
   return "RAT::DS::Centroid";
}

//______________________________________________________________________________
const char *Centroid::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Centroid*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Centroid::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Centroid*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Centroid::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Centroid*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Centroid::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Centroid*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr PathFit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PathFit::Class_Name()
{
   return "RAT::DS::PathFit";
}

//______________________________________________________________________________
const char *PathFit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PathFit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PathFit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PathFit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PathFit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PathFit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PathFit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PathFit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr EV::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EV::Class_Name()
{
   return "RAT::DS::EV";
}

//______________________________________________________________________________
const char *EV::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::EV*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EV::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::EV*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EV::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::EV*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EV::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::EV*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr Calib::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Calib::Class_Name()
{
   return "RAT::DS::Calib";
}

//______________________________________________________________________________
const char *Calib::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Calib*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Calib::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Calib*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Calib::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Calib*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Calib::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Calib*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr Root::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Root::Class_Name()
{
   return "RAT::DS::Root";
}

//______________________________________________________________________________
const char *Root::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Root*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Root::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Root*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Root::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Root*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Root::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Root*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr PMTInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PMTInfo::Class_Name()
{
   return "RAT::DS::PMTInfo";
}

//______________________________________________________________________________
const char *PMTInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMTInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMTInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMTInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMTInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMTInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMTInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMTInfo*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr Run::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Run::Class_Name()
{
   return "RAT::DS::Run";
}

//______________________________________________________________________________
const char *Run::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Run*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Run::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Run*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Run::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Run*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Run::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Run*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr RunStore::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RunStore::Class_Name()
{
   return "RAT::DS::RunStore";
}

//______________________________________________________________________________
const char *RunStore::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::RunStore*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RunStore::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::RunStore*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RunStore::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::RunStore*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RunStore::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::RunStore*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
//______________________________________________________________________________
atomic_TClass_ptr DSReader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DSReader::Class_Name()
{
   return "RAT::DSReader";
}

//______________________________________________________________________________
const char *DSReader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DSReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DSReader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DSReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DSReader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DSReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DSReader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DSReader*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT
      namespace RAT {
//______________________________________________________________________________
atomic_TClass_ptr DSWriter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DSWriter::Class_Name()
{
   return "RAT::DSWriter";
}

//______________________________________________________________________________
const char *DSWriter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DSWriter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DSWriter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DSWriter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DSWriter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DSWriter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DSWriter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DSWriter*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT
      namespace RAT {
//______________________________________________________________________________
atomic_TClass_ptr TrackNode::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TrackNode::Class_Name()
{
   return "RAT::TrackNode";
}

//______________________________________________________________________________
const char *TrackNode::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::TrackNode*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrackNode::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::TrackNode*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrackNode::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::TrackNode*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrackNode::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::TrackNode*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT
      namespace RAT {
//______________________________________________________________________________
atomic_TClass_ptr ObjInt::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ObjInt::Class_Name()
{
   return "RAT::ObjInt";
}

//______________________________________________________________________________
const char *ObjInt::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::ObjInt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ObjInt::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::ObjInt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ObjInt::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::ObjInt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ObjInt::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::ObjInt*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT
      namespace RAT {
//______________________________________________________________________________
atomic_TClass_ptr ObjDbl::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ObjDbl::Class_Name()
{
   return "RAT::ObjDbl";
}

//______________________________________________________________________________
const char *ObjDbl::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::ObjDbl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ObjDbl::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::ObjDbl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ObjDbl::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::ObjDbl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ObjDbl::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::ObjDbl*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void Root::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::Root.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::Root::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::Root::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void Root::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::Root.
      TClass *R__cl = ::RAT::DS::Root::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runID", &runID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ratVersion", (void*)&ratVersion);
      R__insp.InspectMember("string", (void*)&ratVersion, "ratVersion.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "procResult", (void*)&procResult);
      R__insp.InspectMember("vector<std::pair<std::string,int> >", (void*)&procResult, "procResult.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc", (void*)&mc);
      R__insp.InspectMember("vector<MC>", (void*)&mc, "mc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calib", (void*)&calib);
      R__insp.InspectMember("vector<Calib>", (void*)&calib, "calib.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ev", (void*)&ev);
      R__insp.InspectMember("vector<EV>", (void*)&ev, "ev.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "user", (void*)&user);
      R__insp.InspectMember("vector<double>", (void*)&user, "user.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLRoot(void *p) {
      return  p ? new(p) ::RAT::DS::Root : new ::RAT::DS::Root;
   }
   static void *newArray_RATcLcLDScLcLRoot(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::Root[nElements] : new ::RAT::DS::Root[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLRoot(void *p) {
      delete ((::RAT::DS::Root*)p);
   }
   static void deleteArray_RATcLcLDScLcLRoot(void *p) {
      delete [] ((::RAT::DS::Root*)p);
   }
   static void destruct_RATcLcLDScLcLRoot(void *p) {
      typedef ::RAT::DS::Root current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::Root

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void PMTInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::PMTInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::PMTInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::PMTInfo::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void PMTInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::PMTInfo.
      TClass *R__cl = ::RAT::DS::PMTInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", (void*)&pos);
      R__insp.InspectMember("vector<TVector3>", (void*)&pos, "pos.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir", (void*)&dir);
      R__insp.InspectMember("vector<TVector3>", (void*)&dir, "dir.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", (void*)&type);
      R__insp.InspectMember("vector<int>", (void*)&type, "type.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "modeltype", (void*)&modeltype);
      R__insp.InspectMember("vector<int>", (void*)&modeltype, "modeltype.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "models", (void*)&models);
      R__insp.InspectMember("vector<std::string>", (void*)&models, "models.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLPMTInfo(void *p) {
      return  p ? new(p) ::RAT::DS::PMTInfo : new ::RAT::DS::PMTInfo;
   }
   static void *newArray_RATcLcLDScLcLPMTInfo(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::PMTInfo[nElements] : new ::RAT::DS::PMTInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLPMTInfo(void *p) {
      delete ((::RAT::DS::PMTInfo*)p);
   }
   static void deleteArray_RATcLcLDScLcLPMTInfo(void *p) {
      delete [] ((::RAT::DS::PMTInfo*)p);
   }
   static void destruct_RATcLcLDScLcLPMTInfo(void *p) {
      typedef ::RAT::DS::PMTInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::PMTInfo

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MC::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::MC::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::MC::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MC.
      TClass *R__cl = ::RAT::DS::MC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numPE", &numPE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numDarkHits", &numDarkHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "utc", &utc);
      R__insp.InspectMember(utc, "utc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "summary", (void*)&summary);
      R__insp.InspectMember("vector<MCSummary>", (void*)&summary, "summary.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particle", (void*)&particle);
      R__insp.InspectMember("vector<MCParticle>", (void*)&particle, "particle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parent", (void*)&parent);
      R__insp.InspectMember("vector<MCParticle>", (void*)&parent, "parent.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "track", (void*)&track);
      R__insp.InspectMember("vector<MCTrack>", (void*)&track, "track.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt", (void*)&pmt);
      R__insp.InspectMember("vector<MCPMT>", (void*)&pmt, "pmt.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMC(void *p) {
      return  p ? new(p) ::RAT::DS::MC : new ::RAT::DS::MC;
   }
   static void *newArray_RATcLcLDScLcLMC(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MC[nElements] : new ::RAT::DS::MC[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMC(void *p) {
      delete ((::RAT::DS::MC*)p);
   }
   static void deleteArray_RATcLcLDScLcLMC(void *p) {
      delete [] ((::RAT::DS::MC*)p);
   }
   static void destruct_RATcLcLDScLcLMC(void *p) {
      typedef ::RAT::DS::MC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::MC

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MCParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MCParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::MCParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::MCParticle::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MCParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MCParticle.
      TClass *R__cl = ::RAT::DS::MCParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdgcode", &pdgcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t", &t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ke", &ke);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", &pos);
      R__insp.InspectMember(pos, "pos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mom", &mom);
      R__insp.InspectMember(mom, "mom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pol", &pol);
      R__insp.InspectMember(pol, "pol.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleName", (void*)&particleName);
      R__insp.InspectMember("string", (void*)&particleName, "particleName.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMCParticle(void *p) {
      return  p ? new(p) ::RAT::DS::MCParticle : new ::RAT::DS::MCParticle;
   }
   static void *newArray_RATcLcLDScLcLMCParticle(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MCParticle[nElements] : new ::RAT::DS::MCParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMCParticle(void *p) {
      delete ((::RAT::DS::MCParticle*)p);
   }
   static void deleteArray_RATcLcLDScLcLMCParticle(void *p) {
      delete [] ((::RAT::DS::MCParticle*)p);
   }
   static void destruct_RATcLcLDScLcLMCParticle(void *p) {
      typedef ::RAT::DS::MCParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::MCParticle

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MCTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MCTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::MCTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::MCTrack::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MCTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MCTrack.
      TClass *R__cl = ::RAT::DS::MCTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parentID", &parentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdgcode", &pdgcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "length", &length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleName", (void*)&particleName);
      R__insp.InspectMember("string", (void*)&particleName, "particleName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "step", (void*)&step);
      R__insp.InspectMember("vector<MCTrackStep>", (void*)&step, "step.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMCTrack(void *p) {
      return  p ? new(p) ::RAT::DS::MCTrack : new ::RAT::DS::MCTrack;
   }
   static void *newArray_RATcLcLDScLcLMCTrack(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MCTrack[nElements] : new ::RAT::DS::MCTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMCTrack(void *p) {
      delete ((::RAT::DS::MCTrack*)p);
   }
   static void deleteArray_RATcLcLDScLcLMCTrack(void *p) {
      delete [] ((::RAT::DS::MCTrack*)p);
   }
   static void destruct_RATcLcLDScLcLMCTrack(void *p) {
      typedef ::RAT::DS::MCTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::MCTrack

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MCTrackStep::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MCTrackStep.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::MCTrackStep::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::MCTrackStep::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MCTrackStep::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MCTrackStep.
      TClass *R__cl = ::RAT::DS::MCTrackStep::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "length", &length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "globalTime", &globalTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "localTime", &localTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "properTime", &properTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ke", &ke);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "endpoint", &endpoint);
      R__insp.InspectMember(endpoint, "endpoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mom", &mom);
      R__insp.InspectMember(mom, "mom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process", (void*)&process);
      R__insp.InspectMember("string", (void*)&process, "process.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volume", (void*)&volume);
      R__insp.InspectMember("string", (void*)&volume, "volume.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMCTrackStep(void *p) {
      return  p ? new(p) ::RAT::DS::MCTrackStep : new ::RAT::DS::MCTrackStep;
   }
   static void *newArray_RATcLcLDScLcLMCTrackStep(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MCTrackStep[nElements] : new ::RAT::DS::MCTrackStep[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMCTrackStep(void *p) {
      delete ((::RAT::DS::MCTrackStep*)p);
   }
   static void deleteArray_RATcLcLDScLcLMCTrackStep(void *p) {
      delete [] ((::RAT::DS::MCTrackStep*)p);
   }
   static void destruct_RATcLcLDScLcLMCTrackStep(void *p) {
      typedef ::RAT::DS::MCTrackStep current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::MCTrackStep

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MCPMT::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MCPMT.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::MCPMT::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::MCPMT::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MCPMT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MCPMT.
      TClass *R__cl = ::RAT::DS::MCPMT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photon", (void*)&photon);
      R__insp.InspectMember("vector<MCPhoton>", (void*)&photon, "photon.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMCPMT(void *p) {
      return  p ? new(p) ::RAT::DS::MCPMT : new ::RAT::DS::MCPMT;
   }
   static void *newArray_RATcLcLDScLcLMCPMT(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MCPMT[nElements] : new ::RAT::DS::MCPMT[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMCPMT(void *p) {
      delete ((::RAT::DS::MCPMT*)p);
   }
   static void deleteArray_RATcLcLDScLcLMCPMT(void *p) {
      delete [] ((::RAT::DS::MCPMT*)p);
   }
   static void destruct_RATcLcLDScLcLMCPMT(void *p) {
      typedef ::RAT::DS::MCPMT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::MCPMT

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MCPhoton::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MCPhoton.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::MCPhoton::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::MCPhoton::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MCPhoton::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MCPhoton.
      TClass *R__cl = ::RAT::DS::MCPhoton::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitTime", &hitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frontEndTime", &frontEndTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lambda", &lambda);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", &pos);
      R__insp.InspectMember(pos, "pos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mom", &mom);
      R__insp.InspectMember(mom, "mom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pol", &pol);
      R__insp.InspectMember(pol, "pol.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDarkHit", &isDarkHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackID", &trackID);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMCPhoton(void *p) {
      return  p ? new(p) ::RAT::DS::MCPhoton : new ::RAT::DS::MCPhoton;
   }
   static void *newArray_RATcLcLDScLcLMCPhoton(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MCPhoton[nElements] : new ::RAT::DS::MCPhoton[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMCPhoton(void *p) {
      delete ((::RAT::DS::MCPhoton*)p);
   }
   static void deleteArray_RATcLcLDScLcLMCPhoton(void *p) {
      delete [] ((::RAT::DS::MCPhoton*)p);
   }
   static void destruct_RATcLcLDScLcLMCPhoton(void *p) {
      typedef ::RAT::DS::MCPhoton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::MCPhoton

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MCSummary::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MCSummary.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::MCSummary::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::MCSummary::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MCSummary::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MCSummary.
      TClass *R__cl = ::RAT::DS::MCSummary::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numScintPhoton", &numScintPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numReemitPhoton", &numReemitPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalScintEdep", &totalScintEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalScintEdepQuenched", &totalScintEdepQuenched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "initialScintTime", &initialScintTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyCentroid", &energyCentroid);
      R__insp.InspectMember(energyCentroid, "energyCentroid.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyRMS", &energyRMS);
      R__insp.InspectMember(energyRMS, "energyRMS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "opticalCentroid", &opticalCentroid);
      R__insp.InspectMember(opticalCentroid, "opticalCentroid.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "opticalRMS", &opticalRMS);
      R__insp.InspectMember(opticalRMS, "opticalRMS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalScintCentroid", &totalScintCentroid);
      R__insp.InspectMember(totalScintCentroid, "totalScintCentroid.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyLoss", (void*)&energyLoss);
      R__insp.InspectMember("RAT::DS::StringDoubleMap", (void*)&energyLoss, "energyLoss.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMCSummary(void *p) {
      return  p ? new(p) ::RAT::DS::MCSummary : new ::RAT::DS::MCSummary;
   }
   static void *newArray_RATcLcLDScLcLMCSummary(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MCSummary[nElements] : new ::RAT::DS::MCSummary[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMCSummary(void *p) {
      delete ((::RAT::DS::MCSummary*)p);
   }
   static void deleteArray_RATcLcLDScLcLMCSummary(void *p) {
      delete [] ((::RAT::DS::MCSummary*)p);
   }
   static void destruct_RATcLcLDScLcLMCSummary(void *p) {
      typedef ::RAT::DS::MCSummary current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::MCSummary

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void Calib::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::Calib.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::Calib::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::Calib::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void Calib::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::Calib.
      TClass *R__cl = ::RAT::DS::Calib::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mode", &mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intensity", &intensity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", (void*)&name);
      R__insp.InspectMember("string", (void*)&name, "name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "utc", &utc);
      R__insp.InspectMember(utc, "utc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", &pos);
      R__insp.InspectMember(pos, "pos.");
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLCalib(void *p) {
      return  p ? new(p) ::RAT::DS::Calib : new ::RAT::DS::Calib;
   }
   static void *newArray_RATcLcLDScLcLCalib(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::Calib[nElements] : new ::RAT::DS::Calib[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLCalib(void *p) {
      delete ((::RAT::DS::Calib*)p);
   }
   static void deleteArray_RATcLcLDScLcLCalib(void *p) {
      delete [] ((::RAT::DS::Calib*)p);
   }
   static void destruct_RATcLcLDScLcLCalib(void *p) {
      typedef ::RAT::DS::Calib current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::Calib

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void EV::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::EV.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::EV::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::EV::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void EV::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::EV.
      TClass *R__cl = ::RAT::DS::EV::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qTotal", &qTotal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calibratedTriggerTime", &calibratedTriggerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltat", &deltat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "utc", &utc);
      R__insp.InspectMember(utc, "utc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt", (void*)&pmt);
      R__insp.InspectMember("vector<PMT>", (void*)&pmt, "pmt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "centroid", (void*)&centroid);
      R__insp.InspectMember("vector<Centroid>", (void*)&centroid, "centroid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pathfit", (void*)&pathfit);
      R__insp.InspectMember("vector<PathFit>", (void*)&pathfit, "pathfit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerflag", (void*)&triggerflag);
      R__insp.InspectMember("vector<int>", (void*)&triggerflag, "triggerflag.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerEdep", (void*)&triggerEdep);
      R__insp.InspectMember("vector<double>", (void*)&triggerEdep, "triggerEdep.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerHitTime", (void*)&triggerHitTime);
      R__insp.InspectMember("vector<double>", (void*)&triggerHitTime, "triggerHitTime.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLEV(void *p) {
      return  p ? new(p) ::RAT::DS::EV : new ::RAT::DS::EV;
   }
   static void *newArray_RATcLcLDScLcLEV(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::EV[nElements] : new ::RAT::DS::EV[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLEV(void *p) {
      delete ((::RAT::DS::EV*)p);
   }
   static void deleteArray_RATcLcLDScLcLEV(void *p) {
      delete [] ((::RAT::DS::EV*)p);
   }
   static void destruct_RATcLcLDScLcLEV(void *p) {
      typedef ::RAT::DS::EV current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::EV

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void PMT::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::PMT.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::PMT::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::PMT::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void PMT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::PMT.
      TClass *R__cl = ::RAT::DS::PMT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLPMT(void *p) {
      return  p ? new(p) ::RAT::DS::PMT : new ::RAT::DS::PMT;
   }
   static void *newArray_RATcLcLDScLcLPMT(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::PMT[nElements] : new ::RAT::DS::PMT[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLPMT(void *p) {
      delete ((::RAT::DS::PMT*)p);
   }
   static void deleteArray_RATcLcLDScLcLPMT(void *p) {
      delete [] ((::RAT::DS::PMT*)p);
   }
   static void destruct_RATcLcLDScLcLPMT(void *p) {
      typedef ::RAT::DS::PMT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::PMT

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void PosFit::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::PosFit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::PosFit::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::PosFit::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void PosFit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::PosFit.
      TClass *R__cl = ::RAT::DS::PosFit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "posname", (void*)&posname);
      R__insp.InspectMember("string", (void*)&posname, "posname.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", &pos);
      R__insp.InspectMember(pos, "pos.");
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLPosFit(void *p) {
      delete ((::RAT::DS::PosFit*)p);
   }
   static void deleteArray_RATcLcLDScLcLPosFit(void *p) {
      delete [] ((::RAT::DS::PosFit*)p);
   }
   static void destruct_RATcLcLDScLcLPosFit(void *p) {
      typedef ::RAT::DS::PosFit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::PosFit

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void Centroid::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::Centroid.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::Centroid::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::Centroid::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void Centroid::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::Centroid.
      TClass *R__cl = ::RAT::DS::Centroid::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "power", &power);
      TObject::ShowMembers(R__insp);
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::PosFit baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLCentroid(void *p) {
      return  p ? new(p) ::RAT::DS::Centroid : new ::RAT::DS::Centroid;
   }
   static void *newArray_RATcLcLDScLcLCentroid(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::Centroid[nElements] : new ::RAT::DS::Centroid[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLCentroid(void *p) {
      delete ((::RAT::DS::Centroid*)p);
   }
   static void deleteArray_RATcLcLDScLcLCentroid(void *p) {
      delete [] ((::RAT::DS::Centroid*)p);
   }
   static void destruct_RATcLcLDScLcLCentroid(void *p) {
      typedef ::RAT::DS::Centroid current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::Centroid

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void PathFit::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::PathFit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::PathFit::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::PathFit::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void PathFit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::PathFit.
      TClass *R__cl = ::RAT::DS::PathFit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time0", &time0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos0", &pos0);
      R__insp.InspectMember(pos0, "pos0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir", &dir);
      R__insp.InspectMember(dir, "dir.");
      TObject::ShowMembers(R__insp);
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::PosFit baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLPathFit(void *p) {
      return  p ? new(p) ::RAT::DS::PathFit : new ::RAT::DS::PathFit;
   }
   static void *newArray_RATcLcLDScLcLPathFit(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::PathFit[nElements] : new ::RAT::DS::PathFit[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLPathFit(void *p) {
      delete ((::RAT::DS::PathFit*)p);
   }
   static void deleteArray_RATcLcLDScLcLPathFit(void *p) {
      delete [] ((::RAT::DS::PathFit*)p);
   }
   static void destruct_RATcLcLDScLcLPathFit(void *p) {
      typedef ::RAT::DS::PathFit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::PathFit

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void RunStore::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::RunStore.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::RunStore::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::RunStore::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void RunStore::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::RunStore.
      TClass *R__cl = ::RAT::DS::RunStore::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReadTree", &fReadTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReadRun", &fReadRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWriteTree", &fWriteTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWriteRun", &fWriteRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCache", (void*)&fCache);
      R__insp.InspectMember("map<int,RunRecord*>", (void*)&fCache, "fCache.", false);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLRunStore(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::DS::RunStore : new ::RAT::DS::RunStore;
   }
   static void *newArray_RATcLcLDScLcLRunStore(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::DS::RunStore[nElements] : new ::RAT::DS::RunStore[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLRunStore(void *p) {
      delete ((::RAT::DS::RunStore*)p);
   }
   static void deleteArray_RATcLcLDScLcLRunStore(void *p) {
      delete [] ((::RAT::DS::RunStore*)p);
   }
   static void destruct_RATcLcLDScLcLRunStore(void *p) {
      typedef ::RAT::DS::RunStore current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::RunStore

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void Run::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::Run.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::DS::Run::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::DS::Run::Class(),this);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void Run::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::Run.
      TClass *R__cl = ::RAT::DS::Run::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startTime", &startTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmtinfo", (void*)&pmtinfo);
      R__insp.InspectMember("vector<PMTInfo>", (void*)&pmtinfo, "pmtinfo.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLRun(void *p) {
      return  p ? new(p) ::RAT::DS::Run : new ::RAT::DS::Run;
   }
   static void *newArray_RATcLcLDScLcLRun(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::Run[nElements] : new ::RAT::DS::Run[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLRun(void *p) {
      delete ((::RAT::DS::Run*)p);
   }
   static void deleteArray_RATcLcLDScLcLRun(void *p) {
      delete [] ((::RAT::DS::Run*)p);
   }
   static void destruct_RATcLcLDScLcLRun(void *p) {
      typedef ::RAT::DS::Run current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DS::Run

      namespace RAT {
//______________________________________________________________________________
void DSReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DSReader.

   TObject::Streamer(R__b);
}

} // namespace RAT
//______________________________________________________________________________
      namespace RAT {
void DSReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DSReader.
      TClass *R__cl = ::RAT::DSReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T", &T);
      R__insp.InspectMember(T, "T.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ds", &ds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "next", &next);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "total", &total);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RATcLcLDSReader(void *p) {
      delete ((::RAT::DSReader*)p);
   }
   static void deleteArray_RATcLcLDSReader(void *p) {
      delete [] ((::RAT::DSReader*)p);
   }
   static void destruct_RATcLcLDSReader(void *p) {
      typedef ::RAT::DSReader current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDSReader(TBuffer &buf, void *obj) {
      ((::RAT::DSReader*)obj)->::RAT::DSReader::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DSReader

      namespace RAT {
//______________________________________________________________________________
void DSWriter::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DSWriter.

   TObject::Streamer(R__b);
}

} // namespace RAT
//______________________________________________________________________________
      namespace RAT {
void DSWriter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DSWriter.
      TClass *R__cl = ::RAT::DSWriter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFilename", (void*)&fFilename);
      R__insp.InspectMember("string", (void*)&fFilename, "fFilename.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunTree", &fRunTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranchDS", &fBranchDS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranchRun", &fBranchRun);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RATcLcLDSWriter(void *p) {
      delete ((::RAT::DSWriter*)p);
   }
   static void deleteArray_RATcLcLDSWriter(void *p) {
      delete [] ((::RAT::DSWriter*)p);
   }
   static void destruct_RATcLcLDSWriter(void *p) {
      typedef ::RAT::DSWriter current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDSWriter(TBuffer &buf, void *obj) {
      ((::RAT::DSWriter*)obj)->::RAT::DSWriter::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DSWriter

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RATcLcLTrackNav(void *p) {
      delete ((::RAT::TrackNav*)p);
   }
   static void deleteArray_RATcLcLTrackNav(void *p) {
      delete [] ((::RAT::TrackNav*)p);
   }
   static void destruct_RATcLcLTrackNav(void *p) {
      typedef ::RAT::TrackNav current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::TrackNav

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RATcLcLTrackCursor(void *p) {
      delete ((::RAT::TrackCursor*)p);
   }
   static void deleteArray_RATcLcLTrackCursor(void *p) {
      delete [] ((::RAT::TrackCursor*)p);
   }
   static void destruct_RATcLcLTrackCursor(void *p) {
      typedef ::RAT::TrackCursor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::TrackCursor

      namespace RAT {
//______________________________________________________________________________
void TrackNode::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::TrackNode.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::TrackNode thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::MCTrackStep baseClass0;
      baseClass0::Streamer(R__b);
      {
         vector<TrackNode*> &R__stl =  child;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(RAT::TrackNode));
         if (R__tcl1==0) {
            Error("child streamer","Missing the TClass object for RAT::TrackNode!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::TrackNode* R__t;
            R__t = (RAT::TrackNode*)R__b.ReadObjectAny(R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      R__b >> trackStart;
      R__b >> trackID;
      R__b >> stepID;
      R__b >> pdgcode;
      { TString R__str; R__str.Streamer(R__b); particleName = R__str.Data(); }
      R__b >> prev;
      R__b >> next;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::MCTrackStep baseClass0;
      baseClass0::Streamer(R__b);
      {
         vector<TrackNode*> &R__stl =  child;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TrackNode*>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << trackStart;
      R__b << trackID;
      R__b << stepID;
      R__b << pdgcode;
      { TString R__str = particleName.c_str(); R__str.Streamer(R__b);}
      R__b << prev;
      R__b << next;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT
//______________________________________________________________________________
      namespace RAT {
void TrackNode::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::TrackNode.
      TClass *R__cl = ::RAT::TrackNode::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "child", (void*)&child);
      R__insp.InspectMember("vector<TrackNode*>", (void*)&child, "child.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackStart", &trackStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackID", &trackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepID", &stepID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdgcode", &pdgcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleName", (void*)&particleName);
      R__insp.InspectMember("string", (void*)&particleName, "particleName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*prev", &prev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*next", &next);
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::MCTrackStep baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace RAT
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLTrackNode(void *p) {
      return  p ? new(p) ::RAT::TrackNode : new ::RAT::TrackNode;
   }
   static void *newArray_RATcLcLTrackNode(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::TrackNode[nElements] : new ::RAT::TrackNode[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLTrackNode(void *p) {
      delete ((::RAT::TrackNode*)p);
   }
   static void deleteArray_RATcLcLTrackNode(void *p) {
      delete [] ((::RAT::TrackNode*)p);
   }
   static void destruct_RATcLcLTrackNode(void *p) {
      typedef ::RAT::TrackNode current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLTrackNode(TBuffer &buf, void *obj) {
      ((::RAT::TrackNode*)obj)->::RAT::TrackNode::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::TrackNode

//______________________________________________________________________________
namespace ROOTDict {
   void RATcLcLDB_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class RAT::DB.
      typedef ::ROOTShadow::Shadow::RAT::DB ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DB*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "links", (void*)&sobj->links);
      R__insp.InspectMember("list<RAT::DBLink*>", (void*)&sobj->links, "links.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "server", (void*)&sobj->server);
      R__insp.InspectMember("string", (void*)&sobj->server, "server.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tableNamesOnServer", (void*)&sobj->tableNamesOnServer);
      R__insp.InspectMember("set<std::string>", (void*)&sobj->tableNamesOnServer, "tableNamesOnServer.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tablesNotOnServer", (void*)&sobj->tablesNotOnServer);
      R__insp.InspectMember("set<RAT::DBTableKey>", (void*)&sobj->tablesNotOnServer, "tablesNotOnServer.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "downloader", (void*)&sobj->downloader);
      R__insp.InspectMember("RAT::HTTPDownloader", (void*)&sobj->downloader, "downloader.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tables", (void*)&sobj->tables);
      R__insp.InspectMember("RAT::DBTableSet", (void*)&sobj->tables, "tables.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tablesFromServer", (void*)&sobj->tablesFromServer);
      R__insp.InspectMember("deque<std::pair<RAT::DBTableKey,bool> >", (void*)&sobj->tablesFromServer, "tablesFromServer.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &sobj->run);
      R__insp.GenericShowMembers("RAT::DBFieldCallback", ( ::RAT::DBFieldCallback * )( (::RAT::DB*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDB(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::DB : new ::RAT::DB;
   }
   static void *newArray_RATcLcLDB(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::DB[nElements] : new ::RAT::DB[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDB(void *p) {
      delete ((::RAT::DB*)p);
   }
   static void deleteArray_RATcLcLDB(void *p) {
      delete [] ((::RAT::DB*)p);
   }
   static void destruct_RATcLcLDB(void *p) {
      typedef ::RAT::DB current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DB

//______________________________________________________________________________
namespace ROOTDict {
   void RATcLcLDBLink_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class RAT::DBLink.
      typedef ::ROOTShadow::Shadow::RAT::DBLink ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DBLink*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*db", &sobj->db);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tblname", (void*)&sobj->tblname);
      R__insp.InspectMember("string", (void*)&sobj->tblname, "tblname.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index", (void*)&sobj->index);
      R__insp.InspectMember("string", (void*)&sobj->index, "index.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "currentRun", &sobj->currentRun);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RATcLcLDBLink(void *p) {
      delete ((::RAT::DBLink*)p);
   }
   static void deleteArray_RATcLcLDBLink(void *p) {
      delete [] ((::RAT::DBLink*)p);
   }
   static void destruct_RATcLcLDBLink(void *p) {
      typedef ::RAT::DBLink current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DBLink

//______________________________________________________________________________
namespace ROOTDict {
   void simple_ptr_nocopylERATcLcLDBLinkgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class simple_ptr_nocopy<RAT::DBLink>.
      typedef ::ROOTShadow::Shadow::simple_ptr_nocopylERATcLcLDBLinkgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::simple_ptr_nocopy<RAT::DBLink>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_pointer", &sobj->m_pointer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_count", &sobj->m_count);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_simple_ptr_nocopylERATcLcLDBLinkgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::simple_ptr_nocopy<RAT::DBLink> : new ::simple_ptr_nocopy<RAT::DBLink>;
   }
   static void *newArray_simple_ptr_nocopylERATcLcLDBLinkgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::simple_ptr_nocopy<RAT::DBLink>[nElements] : new ::simple_ptr_nocopy<RAT::DBLink>[nElements];
   }
   // Wrapper around operator delete
   static void delete_simple_ptr_nocopylERATcLcLDBLinkgR(void *p) {
      delete ((::simple_ptr_nocopy<RAT::DBLink>*)p);
   }
   static void deleteArray_simple_ptr_nocopylERATcLcLDBLinkgR(void *p) {
      delete [] ((::simple_ptr_nocopy<RAT::DBLink>*)p);
   }
   static void destruct_simple_ptr_nocopylERATcLcLDBLinkgR(void *p) {
      typedef ::simple_ptr_nocopy<RAT::DBLink> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::simple_ptr_nocopy<RAT::DBLink>

//______________________________________________________________________________
namespace ROOTDict {
   void RATcLcLDBTable_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class RAT::DBTable.
      typedef ::ROOTShadow::Shadow::RAT::DBTable ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DBTable*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tblname", (void*)&sobj->tblname);
      R__insp.InspectMember("string", (void*)&sobj->tblname, "tblname.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index", (void*)&sobj->index);
      R__insp.InspectMember("string", (void*)&sobj->index, "index.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_begin", &sobj->run_begin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_end", &sobj->run_end);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "table", (void*)&sobj->table);
      R__insp.InspectMember("json::Value", (void*)&sobj->table, "table.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arrayTypeCache", (void*)&sobj->arrayTypeCache);
      R__insp.InspectMember("stlplus::hash<string,RAT::DBTable::FieldType,RAT::pyhash,equal_to<string> >", (void*)&sobj->arrayTypeCache, "arrayTypeCache.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iatbl_deferred", (void*)&sobj->iatbl_deferred);
      R__insp.InspectMember("stlplus::hash<string,RAT::DBFieldCallback*,RAT::pyhash,equal_to<string> >", (void*)&sobj->iatbl_deferred, "iatbl_deferred.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "datbl_deferred", (void*)&sobj->datbl_deferred);
      R__insp.InspectMember("stlplus::hash<string,RAT::DBFieldCallback*,RAT::pyhash,equal_to<string> >", (void*)&sobj->datbl_deferred, "datbl_deferred.", false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDBTable(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::DBTable : new ::RAT::DBTable;
   }
   static void *newArray_RATcLcLDBTable(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::DBTable[nElements] : new ::RAT::DBTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDBTable(void *p) {
      delete ((::RAT::DBTable*)p);
   }
   static void deleteArray_RATcLcLDBTable(void *p) {
      delete [] ((::RAT::DBTable*)p);
   }
   static void destruct_RATcLcLDBTable(void *p) {
      typedef ::RAT::DBTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DBTable

//______________________________________________________________________________
namespace ROOTDict {
   void RATcLcLDBTextLoader_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class RAT::DBTextLoader.
      typedef ::ROOTShadow::Shadow::RAT::DBTextLoader ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DBTextLoader*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDBTextLoader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::DBTextLoader : new ::RAT::DBTextLoader;
   }
   static void *newArray_RATcLcLDBTextLoader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::DBTextLoader[nElements] : new ::RAT::DBTextLoader[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDBTextLoader(void *p) {
      delete ((::RAT::DBTextLoader*)p);
   }
   static void deleteArray_RATcLcLDBTextLoader(void *p) {
      delete [] ((::RAT::DBTextLoader*)p);
   }
   static void destruct_RATcLcLDBTextLoader(void *p) {
      typedef ::RAT::DBTextLoader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DBTextLoader

//______________________________________________________________________________
namespace ROOTDict {
   void RATcLcLDBJsonLoader_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class RAT::DBJsonLoader.
      typedef ::ROOTShadow::Shadow::RAT::DBJsonLoader ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DBJsonLoader*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDBJsonLoader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::DBJsonLoader : new ::RAT::DBJsonLoader;
   }
   static void *newArray_RATcLcLDBJsonLoader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::DBJsonLoader[nElements] : new ::RAT::DBJsonLoader[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDBJsonLoader(void *p) {
      delete ((::RAT::DBJsonLoader*)p);
   }
   static void deleteArray_RATcLcLDBJsonLoader(void *p) {
      delete [] ((::RAT::DBJsonLoader*)p);
   }
   static void destruct_RATcLcLDBJsonLoader(void *p) {
      typedef ::RAT::DBJsonLoader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DBJsonLoader

//______________________________________________________________________________
namespace ROOTDict {
   void jsoncLcLValue_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class json::Value.
      typedef ::ROOTShadow::Shadow::json::Value ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::json::Value*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*refcount", &sobj->refcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &sobj->type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data", (void*)&sobj->data);
      R__insp.InspectMember("json::TData", (void*)&sobj->data, "data.", false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_jsoncLcLValue(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::json::Value : new ::json::Value;
   }
   static void *newArray_jsoncLcLValue(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::json::Value[nElements] : new ::json::Value[nElements];
   }
   // Wrapper around operator delete
   static void delete_jsoncLcLValue(void *p) {
      delete ((::json::Value*)p);
   }
   static void deleteArray_jsoncLcLValue(void *p) {
      delete [] ((::json::Value*)p);
   }
   static void destruct_jsoncLcLValue(void *p) {
      typedef ::json::Value current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::json::Value

      namespace RAT {
//______________________________________________________________________________
void ObjInt::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::ObjInt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::ObjInt::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::ObjInt::Class(),this);
   }
}

} // namespace RAT
//______________________________________________________________________________
      namespace RAT {
void ObjInt::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::ObjInt.
      TClass *R__cl = ::RAT::ObjInt::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVal", &fVal);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLObjInt(void *p) {
      return  p ? new(p) ::RAT::ObjInt : new ::RAT::ObjInt;
   }
   static void *newArray_RATcLcLObjInt(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::ObjInt[nElements] : new ::RAT::ObjInt[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLObjInt(void *p) {
      delete ((::RAT::ObjInt*)p);
   }
   static void deleteArray_RATcLcLObjInt(void *p) {
      delete [] ((::RAT::ObjInt*)p);
   }
   static void destruct_RATcLcLObjInt(void *p) {
      typedef ::RAT::ObjInt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::ObjInt

      namespace RAT {
//______________________________________________________________________________
void ObjDbl::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::ObjDbl.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RAT::ObjDbl::Class(),this);
   } else {
      R__b.WriteClassBuffer(RAT::ObjDbl::Class(),this);
   }
}

} // namespace RAT
//______________________________________________________________________________
      namespace RAT {
void ObjDbl::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::ObjDbl.
      TClass *R__cl = ::RAT::ObjDbl::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVal", &fVal);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLObjDbl(void *p) {
      return  p ? new(p) ::RAT::ObjDbl : new ::RAT::ObjDbl;
   }
   static void *newArray_RATcLcLObjDbl(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::ObjDbl[nElements] : new ::RAT::ObjDbl[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLObjDbl(void *p) {
      delete ((::RAT::ObjDbl*)p);
   }
   static void deleteArray_RATcLcLObjDbl(void *p) {
      delete [] ((::RAT::ObjDbl*)p);
   }
   static void destruct_RATcLcLObjDbl(void *p) {
      typedef ::RAT::ObjDbl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::ObjDbl

//______________________________________________________________________________
namespace ROOTDict {
   void RATcLcLLog_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class RAT::Log.
      typedef ::ROOTShadow::Shadow::RAT::Log ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::Log*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLLog(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::Log : new ::RAT::Log;
   }
   static void *newArray_RATcLcLLog(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::Log[nElements] : new ::RAT::Log[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLLog(void *p) {
      delete ((::RAT::Log*)p);
   }
   static void deleteArray_RATcLcLLog(void *p) {
      delete [] ((::RAT::Log*)p);
   }
   static void destruct_RATcLcLLog(void *p) {
      typedef ::RAT::Log current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::Log

//______________________________________________________________________________
namespace ROOTDict {
   void RATcLcLHTTPDownloader_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class RAT::HTTPDownloader.
      typedef ::ROOTShadow::Shadow::RAT::HTTPDownloader ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::HTTPDownloader*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*handle", &sobj->handle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "noproxy_set", &sobj->noproxy_set);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&sobj->contents);
      R__insp.InspectMember("ostringstream", (void*)&sobj->contents, "contents.", false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLHTTPDownloader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::HTTPDownloader : new ::RAT::HTTPDownloader;
   }
   static void *newArray_RATcLcLHTTPDownloader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::HTTPDownloader[nElements] : new ::RAT::HTTPDownloader[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLHTTPDownloader(void *p) {
      delete ((::RAT::HTTPDownloader*)p);
   }
   static void deleteArray_RATcLcLHTTPDownloader(void *p) {
      delete [] ((::RAT::HTTPDownloader*)p);
   }
   static void destruct_RATcLcLHTTPDownloader(void *p) {
      typedef ::RAT::HTTPDownloader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::HTTPDownloader

//______________________________________________________________________________
namespace ROOTDict {
   void RATcLcLDBFieldCallback_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class RAT::DBFieldCallback.
      typedef ::ROOTShadow::Shadow::RAT::DBFieldCallback ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DBFieldCallback*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RATcLcLDBFieldCallback(void *p) {
      delete ((::RAT::DBFieldCallback*)p);
   }
   static void deleteArray_RATcLcLDBFieldCallback(void *p) {
      delete [] ((::RAT::DBFieldCallback*)p);
   }
   static void destruct_RATcLcLDBFieldCallback(void *p) {
      typedef ::RAT::DBFieldCallback current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::DBFieldCallback

//______________________________________________________________________________
namespace ROOTDict {
   void pairlEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<string,string>.
      typedef ::ROOTShadow::Shadow::pairlEstringcOstringgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const pair<string,string>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", (void*)&sobj->first);
      R__insp.InspectMember("string", (void*)&sobj->first, "first.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", (void*)&sobj->second);
      R__insp.InspectMember("string", (void*)&sobj->second, "second.", false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_pairlEstringcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,string> : new pair<string,string>;
   }
   static void *newArray_pairlEstringcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,string>[nElements] : new pair<string,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEstringcOstringgR(void *p) {
      delete ((pair<string,string>*)p);
   }
   static void deleteArray_pairlEstringcOstringgR(void *p) {
      delete [] ((pair<string,string>*)p);
   }
   static void destruct_pairlEstringcOstringgR(void *p) {
      typedef pair<string,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class pair<string,string>

namespace ROOTDict {
   void dequelEpairlERATcLcLDBTableKeycOboolgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dequelEpairlERATcLcLDBTableKeycOboolgRsPgR_Dictionary();
   static void *new_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR(void *p = 0);
   static void *newArray_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR(Long_t size, void *p);
   static void delete_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR(void *p);
   static void deleteArray_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR(void *p);
   static void destruct_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const deque<pair<RAT::DBTableKey,bool> >*)
   {
      deque<pair<RAT::DBTableKey,bool> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(deque<pair<RAT::DBTableKey,bool> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("deque<pair<RAT::DBTableKey,bool> >", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/deque", 42,
                  typeid(deque<pair<RAT::DBTableKey,bool> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dequelEpairlERATcLcLDBTableKeycOboolgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(deque<pair<RAT::DBTableKey,bool> >) );
      instance.SetNew(&new_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR);
      instance.SetNewArray(&newArray_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR);
      instance.SetDelete(&delete_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR);
      instance.SetDeleteArray(&deleteArray_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR);
      instance.SetDestructor(&destruct_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< deque<pair<RAT::DBTableKey,bool> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const deque<pair<RAT::DBTableKey,bool> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dequelEpairlERATcLcLDBTableKeycOboolgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const deque<pair<RAT::DBTableKey,bool> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<pair<RAT::DBTableKey,bool> > : new deque<pair<RAT::DBTableKey,bool> >;
   }
   static void *newArray_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<pair<RAT::DBTableKey,bool> >[nElements] : new deque<pair<RAT::DBTableKey,bool> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR(void *p) {
      delete ((deque<pair<RAT::DBTableKey,bool> >*)p);
   }
   static void deleteArray_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR(void *p) {
      delete [] ((deque<pair<RAT::DBTableKey,bool> >*)p);
   }
   static void destruct_dequelEpairlERATcLcLDBTableKeycOboolgRsPgR(void *p) {
      typedef deque<pair<RAT::DBTableKey,bool> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class deque<pair<RAT::DBTableKey,bool> >

namespace ROOTDict {
   void listlERATcLcLDBLinkmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void listlERATcLcLDBLinkmUgR_Dictionary();
   static void *new_listlERATcLcLDBLinkmUgR(void *p = 0);
   static void *newArray_listlERATcLcLDBLinkmUgR(Long_t size, void *p);
   static void delete_listlERATcLcLDBLinkmUgR(void *p);
   static void deleteArray_listlERATcLcLDBLinkmUgR(void *p);
   static void destruct_listlERATcLcLDBLinkmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const list<RAT::DBLink*>*)
   {
      list<RAT::DBLink*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<RAT::DBLink*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<RAT::DBLink*>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/list", 44,
                  typeid(list<RAT::DBLink*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &listlERATcLcLDBLinkmUgR_Dictionary, isa_proxy, 0,
                  sizeof(list<RAT::DBLink*>) );
      instance.SetNew(&new_listlERATcLcLDBLinkmUgR);
      instance.SetNewArray(&newArray_listlERATcLcLDBLinkmUgR);
      instance.SetDelete(&delete_listlERATcLcLDBLinkmUgR);
      instance.SetDeleteArray(&deleteArray_listlERATcLcLDBLinkmUgR);
      instance.SetDestructor(&destruct_listlERATcLcLDBLinkmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< list<RAT::DBLink*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<RAT::DBLink*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlERATcLcLDBLinkmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const list<RAT::DBLink*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_listlERATcLcLDBLinkmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<RAT::DBLink*> : new list<RAT::DBLink*>;
   }
   static void *newArray_listlERATcLcLDBLinkmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<RAT::DBLink*>[nElements] : new list<RAT::DBLink*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlERATcLcLDBLinkmUgR(void *p) {
      delete ((list<RAT::DBLink*>*)p);
   }
   static void deleteArray_listlERATcLcLDBLinkmUgR(void *p) {
      delete [] ((list<RAT::DBLink*>*)p);
   }
   static void destruct_listlERATcLcLDBLinkmUgR(void *p) {
      typedef list<RAT::DBLink*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class list<RAT::DBLink*>

namespace ROOTDict {
   void maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR_Dictionary();
   static void *new_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR(void *p = 0);
   static void *newArray_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR(Long_t size, void *p);
   static void delete_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR(void *p);
   static void deleteArray_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR(void *p);
   static void destruct_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >*)
   {
      map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >) );
      instance.SetNew(&new_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR);
      instance.SetNewArray(&newArray_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR);
      instance.SetDelete(&delete_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR);
      instance.SetDeleteArray(&deleteArray_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR);
      instance.SetDestructor(&destruct_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> > : new map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >;
   }
   static void *newArray_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >[nElements] : new map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR(void *p) {
      delete ((map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >*)p);
   }
   static void deleteArray_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR(void *p) {
      delete [] ((map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >*)p);
   }
   static void destruct_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgR(void *p) {
      typedef map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >

namespace ROOTDict {
   void maplEintcORATcLcLDScLcLRunRecordmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcORATcLcLDScLcLRunRecordmUgR_Dictionary();
   static void *new_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p = 0);
   static void *newArray_maplEintcORATcLcLDScLcLRunRecordmUgR(Long_t size, void *p);
   static void delete_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p);
   static void deleteArray_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p);
   static void destruct_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,RAT::DS::RunRecord*>*)
   {
      map<int,RAT::DS::RunRecord*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,RAT::DS::RunRecord*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,RAT::DS::RunRecord*>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<int,RAT::DS::RunRecord*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcORATcLcLDScLcLRunRecordmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,RAT::DS::RunRecord*>) );
      instance.SetNew(&new_maplEintcORATcLcLDScLcLRunRecordmUgR);
      instance.SetNewArray(&newArray_maplEintcORATcLcLDScLcLRunRecordmUgR);
      instance.SetDelete(&delete_maplEintcORATcLcLDScLcLRunRecordmUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcORATcLcLDScLcLRunRecordmUgR);
      instance.SetDestructor(&destruct_maplEintcORATcLcLDScLcLRunRecordmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,RAT::DS::RunRecord*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,RAT::DS::RunRecord*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcORATcLcLDScLcLRunRecordmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,RAT::DS::RunRecord*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,RAT::DS::RunRecord*> : new map<int,RAT::DS::RunRecord*>;
   }
   static void *newArray_maplEintcORATcLcLDScLcLRunRecordmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,RAT::DS::RunRecord*>[nElements] : new map<int,RAT::DS::RunRecord*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p) {
      delete ((map<int,RAT::DS::RunRecord*>*)p);
   }
   static void deleteArray_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p) {
      delete [] ((map<int,RAT::DS::RunRecord*>*)p);
   }
   static void destruct_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p) {
      typedef map<int,RAT::DS::RunRecord*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,RAT::DS::RunRecord*>

namespace ROOTDict {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 4,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,int>

namespace ROOTDict {
   void maplEintcOvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOvectorlEintgRsPgR_Dictionary();
   static void *new_maplEintcOvectorlEintgRsPgR(void *p = 0);
   static void *newArray_maplEintcOvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_maplEintcOvectorlEintgRsPgR(void *p);
   static void deleteArray_maplEintcOvectorlEintgRsPgR(void *p);
   static void destruct_maplEintcOvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,vector<int> >*)
   {
      map<int,vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,vector<int> >", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<int,vector<int> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOvectorlEintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(map<int,vector<int> >) );
      instance.SetNew(&new_maplEintcOvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_maplEintcOvectorlEintgRsPgR);
      instance.SetDelete(&delete_maplEintcOvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_maplEintcOvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOvectorlEintgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,vector<int> > : new map<int,vector<int> >;
   }
   static void *newArray_maplEintcOvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,vector<int> >[nElements] : new map<int,vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOvectorlEintgRsPgR(void *p) {
      delete ((map<int,vector<int> >*)p);
   }
   static void deleteArray_maplEintcOvectorlEintgRsPgR(void *p) {
      delete [] ((map<int,vector<int> >*)p);
   }
   static void destruct_maplEintcOvectorlEintgRsPgR(void *p) {
      typedef map<int,vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,vector<int> >

namespace ROOTDict {
   void maplEstringcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOdoublegR_Dictionary();
   static void *new_maplEstringcOdoublegR(void *p = 0);
   static void *newArray_maplEstringcOdoublegR(Long_t size, void *p);
   static void delete_maplEstringcOdoublegR(void *p);
   static void deleteArray_maplEstringcOdoublegR(void *p);
   static void destruct_maplEstringcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,double>*)
   {
      map<string,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,double>", -2, "map.dll", 0,
                  typeid(map<string,double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,double>) );
      instance.SetNew(&new_maplEstringcOdoublegR);
      instance.SetNewArray(&newArray_maplEstringcOdoublegR);
      instance.SetDelete(&delete_maplEstringcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOdoublegR);
      instance.SetDestructor(&destruct_maplEstringcOdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double> : new map<string,double>;
   }
   static void *newArray_maplEstringcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double>[nElements] : new map<string,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOdoublegR(void *p) {
      delete ((map<string,double>*)p);
   }
   static void deleteArray_maplEstringcOdoublegR(void *p) {
      delete [] ((map<string,double>*)p);
   }
   static void destruct_maplEstringcOdoublegR(void *p) {
      typedef map<string,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,double>

namespace ROOTDict {
   void setlERATcLcLDBTableKeygR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void setlERATcLcLDBTableKeygR_Dictionary();
   static void *new_setlERATcLcLDBTableKeygR(void *p = 0);
   static void *newArray_setlERATcLcLDBTableKeygR(Long_t size, void *p);
   static void delete_setlERATcLcLDBTableKeygR(void *p);
   static void deleteArray_setlERATcLcLDBTableKeygR(void *p);
   static void destruct_setlERATcLcLDBTableKeygR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const set<RAT::DBTableKey>*)
   {
      set<RAT::DBTableKey> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<RAT::DBTableKey>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<RAT::DBTableKey>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/set", 49,
                  typeid(set<RAT::DBTableKey>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &setlERATcLcLDBTableKeygR_Dictionary, isa_proxy, 0,
                  sizeof(set<RAT::DBTableKey>) );
      instance.SetNew(&new_setlERATcLcLDBTableKeygR);
      instance.SetNewArray(&newArray_setlERATcLcLDBTableKeygR);
      instance.SetDelete(&delete_setlERATcLcLDBTableKeygR);
      instance.SetDeleteArray(&deleteArray_setlERATcLcLDBTableKeygR);
      instance.SetDestructor(&destruct_setlERATcLcLDBTableKeygR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Insert< set<RAT::DBTableKey> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<RAT::DBTableKey>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlERATcLcLDBTableKeygR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const set<RAT::DBTableKey>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_setlERATcLcLDBTableKeygR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<RAT::DBTableKey> : new set<RAT::DBTableKey>;
   }
   static void *newArray_setlERATcLcLDBTableKeygR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<RAT::DBTableKey>[nElements] : new set<RAT::DBTableKey>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlERATcLcLDBTableKeygR(void *p) {
      delete ((set<RAT::DBTableKey>*)p);
   }
   static void deleteArray_setlERATcLcLDBTableKeygR(void *p) {
      delete [] ((set<RAT::DBTableKey>*)p);
   }
   static void destruct_setlERATcLcLDBTableKeygR(void *p) {
      typedef set<RAT::DBTableKey> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class set<RAT::DBTableKey>

namespace ROOTDict {
   void setlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void setlEstringgR_Dictionary();
   static void *new_setlEstringgR(void *p = 0);
   static void *newArray_setlEstringgR(Long_t size, void *p);
   static void delete_setlEstringgR(void *p);
   static void deleteArray_setlEstringgR(void *p);
   static void destruct_setlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const set<string>*)
   {
      set<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<string>", -2, "set.dll", 0,
                  typeid(set<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &setlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(set<string>) );
      instance.SetNew(&new_setlEstringgR);
      instance.SetNewArray(&newArray_setlEstringgR);
      instance.SetDelete(&delete_setlEstringgR);
      instance.SetDeleteArray(&deleteArray_setlEstringgR);
      instance.SetDestructor(&destruct_setlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Insert< set<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const set<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_setlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<string> : new set<string>;
   }
   static void *newArray_setlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<string>[nElements] : new set<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEstringgR(void *p) {
      delete ((set<string>*)p);
   }
   static void deleteArray_setlEstringgR(void *p) {
      delete [] ((set<string>*)p);
   }
   static void destruct_setlEstringgR(void *p) {
      typedef set<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class set<string>

namespace ROOTDict {
   void vectorlERATcLcLDBTablemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDBTablemUgR_Dictionary();
   static void *new_vectorlERATcLcLDBTablemUgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDBTablemUgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDBTablemUgR(void *p);
   static void deleteArray_vectorlERATcLcLDBTablemUgR(void *p);
   static void destruct_vectorlERATcLcLDBTablemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DBTable*>*)
   {
      vector<RAT::DBTable*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DBTable*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DBTable*>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DBTable*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDBTablemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DBTable*>) );
      instance.SetNew(&new_vectorlERATcLcLDBTablemUgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDBTablemUgR);
      instance.SetDelete(&delete_vectorlERATcLcLDBTablemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDBTablemUgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDBTablemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DBTable*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DBTable*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDBTablemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DBTable*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDBTablemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DBTable*> : new vector<RAT::DBTable*>;
   }
   static void *newArray_vectorlERATcLcLDBTablemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DBTable*>[nElements] : new vector<RAT::DBTable*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDBTablemUgR(void *p) {
      delete ((vector<RAT::DBTable*>*)p);
   }
   static void deleteArray_vectorlERATcLcLDBTablemUgR(void *p) {
      delete [] ((vector<RAT::DBTable*>*)p);
   }
   static void destruct_vectorlERATcLcLDBTablemUgR(void *p) {
      typedef vector<RAT::DBTable*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DBTable*>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLCalibgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLCalibgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLCalibgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLCalibgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLCalibgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLCalibgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLCalibgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::Calib>*)
   {
      vector<RAT::DS::Calib> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::Calib>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::Calib>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::Calib>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLCalibgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::Calib>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLCalibgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLCalibgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLCalibgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLCalibgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLCalibgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::Calib> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::Calib>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLCalibgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::Calib>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLCalibgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::Calib> : new vector<RAT::DS::Calib>;
   }
   static void *newArray_vectorlERATcLcLDScLcLCalibgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::Calib>[nElements] : new vector<RAT::DS::Calib>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLCalibgR(void *p) {
      delete ((vector<RAT::DS::Calib>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLCalibgR(void *p) {
      delete [] ((vector<RAT::DS::Calib>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLCalibgR(void *p) {
      typedef vector<RAT::DS::Calib> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::Calib>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLCentroidgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLCentroidgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLCentroidgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLCentroidgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLCentroidgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLCentroidgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLCentroidgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::Centroid>*)
   {
      vector<RAT::DS::Centroid> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::Centroid>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::Centroid>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::Centroid>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLCentroidgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::Centroid>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLCentroidgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLCentroidgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLCentroidgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLCentroidgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLCentroidgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::Centroid> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::Centroid>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLCentroidgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::Centroid>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLCentroidgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::Centroid> : new vector<RAT::DS::Centroid>;
   }
   static void *newArray_vectorlERATcLcLDScLcLCentroidgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::Centroid>[nElements] : new vector<RAT::DS::Centroid>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLCentroidgR(void *p) {
      delete ((vector<RAT::DS::Centroid>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLCentroidgR(void *p) {
      delete [] ((vector<RAT::DS::Centroid>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLCentroidgR(void *p) {
      typedef vector<RAT::DS::Centroid> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::Centroid>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLEVmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLEVmUgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLEVmUgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLEVmUgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLEVmUgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLEVmUgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLEVmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::EV*>*)
   {
      vector<RAT::DS::EV*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::EV*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::EV*>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::EV*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLEVmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::EV*>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLEVmUgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLEVmUgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLEVmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLEVmUgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLEVmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::EV*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::EV*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLEVmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::EV*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLEVmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::EV*> : new vector<RAT::DS::EV*>;
   }
   static void *newArray_vectorlERATcLcLDScLcLEVmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::EV*>[nElements] : new vector<RAT::DS::EV*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLEVmUgR(void *p) {
      delete ((vector<RAT::DS::EV*>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLEVmUgR(void *p) {
      delete [] ((vector<RAT::DS::EV*>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLEVmUgR(void *p) {
      typedef vector<RAT::DS::EV*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::EV*>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLEVgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLEVgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLEVgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLEVgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLEVgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLEVgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLEVgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::EV>*)
   {
      vector<RAT::DS::EV> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::EV>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::EV>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::EV>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLEVgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::EV>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLEVgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLEVgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLEVgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLEVgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLEVgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::EV> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::EV>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLEVgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::EV>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLEVgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::EV> : new vector<RAT::DS::EV>;
   }
   static void *newArray_vectorlERATcLcLDScLcLEVgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::EV>[nElements] : new vector<RAT::DS::EV>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLEVgR(void *p) {
      delete ((vector<RAT::DS::EV>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLEVgR(void *p) {
      delete [] ((vector<RAT::DS::EV>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLEVgR(void *p) {
      typedef vector<RAT::DS::EV> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::EV>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MC>*)
   {
      vector<RAT::DS::MC> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MC>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MC>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MC>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MC>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MC> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MC>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MC>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MC> : new vector<RAT::DS::MC>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MC>[nElements] : new vector<RAT::DS::MC>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCgR(void *p) {
      delete ((vector<RAT::DS::MC>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCgR(void *p) {
      delete [] ((vector<RAT::DS::MC>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCgR(void *p) {
      typedef vector<RAT::DS::MC> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MC>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCPMTmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCPMTmUgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCPMTmUgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCPMTmUgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCPMTmUgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCPMTmUgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCPMTmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCPMT*>*)
   {
      vector<RAT::DS::MCPMT*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCPMT*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCPMT*>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCPMT*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCPMTmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCPMT*>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCPMTmUgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCPMTmUgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCPMTmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCPMTmUgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCPMTmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCPMT*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCPMT*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCPMTmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCPMT*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCPMTmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCPMT*> : new vector<RAT::DS::MCPMT*>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCPMTmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCPMT*>[nElements] : new vector<RAT::DS::MCPMT*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCPMTmUgR(void *p) {
      delete ((vector<RAT::DS::MCPMT*>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCPMTmUgR(void *p) {
      delete [] ((vector<RAT::DS::MCPMT*>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCPMTmUgR(void *p) {
      typedef vector<RAT::DS::MCPMT*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCPMT*>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCPMTgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCPMTgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCPMTgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCPMTgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCPMTgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCPMTgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCPMTgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCPMT>*)
   {
      vector<RAT::DS::MCPMT> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCPMT>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCPMT>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCPMT>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCPMTgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCPMT>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCPMTgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCPMTgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCPMTgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCPMTgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCPMTgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCPMT> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCPMT>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCPMTgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCPMT>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCPMTgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCPMT> : new vector<RAT::DS::MCPMT>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCPMTgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCPMT>[nElements] : new vector<RAT::DS::MCPMT>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCPMTgR(void *p) {
      delete ((vector<RAT::DS::MCPMT>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCPMTgR(void *p) {
      delete [] ((vector<RAT::DS::MCPMT>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCPMTgR(void *p) {
      typedef vector<RAT::DS::MCPMT> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCPMT>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCParticlemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCParticlemUgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCParticlemUgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCParticlemUgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCParticlemUgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCParticlemUgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCParticlemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCParticle*>*)
   {
      vector<RAT::DS::MCParticle*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCParticle*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCParticle*>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCParticle*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCParticlemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCParticle*>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCParticlemUgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCParticlemUgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCParticlemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCParticlemUgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCParticlemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCParticle*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCParticle*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCParticlemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCParticle*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCParticlemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCParticle*> : new vector<RAT::DS::MCParticle*>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCParticlemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCParticle*>[nElements] : new vector<RAT::DS::MCParticle*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCParticlemUgR(void *p) {
      delete ((vector<RAT::DS::MCParticle*>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCParticlemUgR(void *p) {
      delete [] ((vector<RAT::DS::MCParticle*>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCParticlemUgR(void *p) {
      typedef vector<RAT::DS::MCParticle*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCParticle*>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCParticlegR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCParticlegR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCParticlegR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCParticlegR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCParticlegR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCParticlegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCParticle>*)
   {
      vector<RAT::DS::MCParticle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCParticle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCParticle>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCParticle>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCParticlegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCParticle>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCParticlegR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCParticlegR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCParticlegR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCParticlegR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCParticlegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCParticle> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCParticle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCParticlegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCParticle>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCParticle> : new vector<RAT::DS::MCParticle>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCParticle>[nElements] : new vector<RAT::DS::MCParticle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCParticlegR(void *p) {
      delete ((vector<RAT::DS::MCParticle>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCParticlegR(void *p) {
      delete [] ((vector<RAT::DS::MCParticle>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCParticlegR(void *p) {
      typedef vector<RAT::DS::MCParticle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCParticle>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCPhotonmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCPhotonmUgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCPhotonmUgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCPhotonmUgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCPhotonmUgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCPhotonmUgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCPhotonmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCPhoton*>*)
   {
      vector<RAT::DS::MCPhoton*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCPhoton*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCPhoton*>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCPhoton*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCPhotonmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCPhoton*>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCPhotonmUgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCPhotonmUgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCPhotonmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCPhotonmUgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCPhotonmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCPhoton*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCPhoton*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCPhotonmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCPhoton*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCPhotonmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCPhoton*> : new vector<RAT::DS::MCPhoton*>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCPhotonmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCPhoton*>[nElements] : new vector<RAT::DS::MCPhoton*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCPhotonmUgR(void *p) {
      delete ((vector<RAT::DS::MCPhoton*>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCPhotonmUgR(void *p) {
      delete [] ((vector<RAT::DS::MCPhoton*>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCPhotonmUgR(void *p) {
      typedef vector<RAT::DS::MCPhoton*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCPhoton*>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCPhotongR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCPhotongR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCPhotongR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCPhotongR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCPhotongR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCPhotongR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCPhotongR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCPhoton>*)
   {
      vector<RAT::DS::MCPhoton> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCPhoton>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCPhoton>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCPhoton>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCPhotongR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCPhoton>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCPhotongR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCPhotongR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCPhotongR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCPhotongR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCPhotongR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCPhoton> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCPhoton>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCPhotongR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCPhoton>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCPhotongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCPhoton> : new vector<RAT::DS::MCPhoton>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCPhotongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCPhoton>[nElements] : new vector<RAT::DS::MCPhoton>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCPhotongR(void *p) {
      delete ((vector<RAT::DS::MCPhoton>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCPhotongR(void *p) {
      delete [] ((vector<RAT::DS::MCPhoton>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCPhotongR(void *p) {
      typedef vector<RAT::DS::MCPhoton> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCPhoton>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCSummarygR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCSummarygR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCSummarygR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCSummarygR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCSummarygR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCSummarygR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCSummarygR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCSummary>*)
   {
      vector<RAT::DS::MCSummary> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCSummary>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCSummary>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCSummary>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCSummarygR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCSummary>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCSummarygR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCSummarygR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCSummarygR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCSummarygR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCSummarygR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCSummary> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCSummary>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCSummarygR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCSummary>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCSummarygR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCSummary> : new vector<RAT::DS::MCSummary>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCSummarygR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCSummary>[nElements] : new vector<RAT::DS::MCSummary>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCSummarygR(void *p) {
      delete ((vector<RAT::DS::MCSummary>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCSummarygR(void *p) {
      delete [] ((vector<RAT::DS::MCSummary>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCSummarygR(void *p) {
      typedef vector<RAT::DS::MCSummary> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCSummary>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCTrackmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCTrackmUgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCTrackmUgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCTrackmUgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCTrackmUgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCTrackmUgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCTrackmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCTrack*>*)
   {
      vector<RAT::DS::MCTrack*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCTrack*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCTrack*>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCTrack*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCTrackmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCTrack*>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCTrackmUgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCTrackmUgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCTrackmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCTrackmUgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCTrackmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCTrack*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCTrack*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCTrackmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCTrack*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCTrackmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCTrack*> : new vector<RAT::DS::MCTrack*>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCTrackmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCTrack*>[nElements] : new vector<RAT::DS::MCTrack*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCTrackmUgR(void *p) {
      delete ((vector<RAT::DS::MCTrack*>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCTrackmUgR(void *p) {
      delete [] ((vector<RAT::DS::MCTrack*>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCTrackmUgR(void *p) {
      typedef vector<RAT::DS::MCTrack*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCTrack*>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCTrackgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCTrackgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCTrackgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCTrackgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCTrackgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCTrackgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCTrackgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCTrack>*)
   {
      vector<RAT::DS::MCTrack> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCTrack>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCTrack>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCTrack>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCTrackgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCTrack>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCTrackgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCTrackgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCTrackgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCTrackgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCTrackgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCTrack> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCTrack>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCTrackgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCTrack>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCTrackgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCTrack> : new vector<RAT::DS::MCTrack>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCTrackgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCTrack>[nElements] : new vector<RAT::DS::MCTrack>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCTrackgR(void *p) {
      delete ((vector<RAT::DS::MCTrack>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCTrackgR(void *p) {
      delete [] ((vector<RAT::DS::MCTrack>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCTrackgR(void *p) {
      typedef vector<RAT::DS::MCTrack> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCTrack>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCTrackStepmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCTrackStepmUgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCTrackStepmUgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCTrackStepmUgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCTrackStepmUgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCTrackStepmUgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCTrackStepmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCTrackStep*>*)
   {
      vector<RAT::DS::MCTrackStep*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCTrackStep*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCTrackStep*>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCTrackStep*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCTrackStepmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCTrackStep*>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCTrackStepmUgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCTrackStepmUgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCTrackStepmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCTrackStepmUgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCTrackStepmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCTrackStep*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCTrackStep*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCTrackStepmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCTrackStep*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCTrackStepmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCTrackStep*> : new vector<RAT::DS::MCTrackStep*>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCTrackStepmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCTrackStep*>[nElements] : new vector<RAT::DS::MCTrackStep*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCTrackStepmUgR(void *p) {
      delete ((vector<RAT::DS::MCTrackStep*>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCTrackStepmUgR(void *p) {
      delete [] ((vector<RAT::DS::MCTrackStep*>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCTrackStepmUgR(void *p) {
      typedef vector<RAT::DS::MCTrackStep*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCTrackStep*>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCTrackStepgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCTrackStepgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCTrackStepgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCTrackStepgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCTrackStepgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCTrackStepgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCTrackStepgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCTrackStep>*)
   {
      vector<RAT::DS::MCTrackStep> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCTrackStep>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCTrackStep>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCTrackStep>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCTrackStepgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCTrackStep>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCTrackStepgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCTrackStepgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCTrackStepgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCTrackStepgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCTrackStepgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCTrackStep> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCTrackStep>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCTrackStepgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCTrackStep>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCTrackStepgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCTrackStep> : new vector<RAT::DS::MCTrackStep>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCTrackStepgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCTrackStep>[nElements] : new vector<RAT::DS::MCTrackStep>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCTrackStepgR(void *p) {
      delete ((vector<RAT::DS::MCTrackStep>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCTrackStepgR(void *p) {
      delete [] ((vector<RAT::DS::MCTrackStep>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCTrackStepgR(void *p) {
      typedef vector<RAT::DS::MCTrackStep> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCTrackStep>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLPMTmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLPMTmUgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLPMTmUgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLPMTmUgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLPMTmUgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLPMTmUgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLPMTmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::PMT*>*)
   {
      vector<RAT::DS::PMT*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::PMT*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::PMT*>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::PMT*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLPMTmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::PMT*>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLPMTmUgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLPMTmUgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLPMTmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLPMTmUgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLPMTmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::PMT*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::PMT*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLPMTmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::PMT*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLPMTmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PMT*> : new vector<RAT::DS::PMT*>;
   }
   static void *newArray_vectorlERATcLcLDScLcLPMTmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PMT*>[nElements] : new vector<RAT::DS::PMT*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLPMTmUgR(void *p) {
      delete ((vector<RAT::DS::PMT*>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLPMTmUgR(void *p) {
      delete [] ((vector<RAT::DS::PMT*>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLPMTmUgR(void *p) {
      typedef vector<RAT::DS::PMT*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::PMT*>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLPMTgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLPMTgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLPMTgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLPMTgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLPMTgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLPMTgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLPMTgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::PMT>*)
   {
      vector<RAT::DS::PMT> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::PMT>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::PMT>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::PMT>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLPMTgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::PMT>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLPMTgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLPMTgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLPMTgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLPMTgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLPMTgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::PMT> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::PMT>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLPMTgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::PMT>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLPMTgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PMT> : new vector<RAT::DS::PMT>;
   }
   static void *newArray_vectorlERATcLcLDScLcLPMTgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PMT>[nElements] : new vector<RAT::DS::PMT>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLPMTgR(void *p) {
      delete ((vector<RAT::DS::PMT>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLPMTgR(void *p) {
      delete [] ((vector<RAT::DS::PMT>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLPMTgR(void *p) {
      typedef vector<RAT::DS::PMT> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::PMT>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLPMTInfogR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLPMTInfogR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLPMTInfogR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLPMTInfogR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLPMTInfogR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLPMTInfogR(void *p);
   static void destruct_vectorlERATcLcLDScLcLPMTInfogR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::PMTInfo>*)
   {
      vector<RAT::DS::PMTInfo> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::PMTInfo>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::PMTInfo>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::PMTInfo>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLPMTInfogR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::PMTInfo>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLPMTInfogR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLPMTInfogR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLPMTInfogR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLPMTInfogR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLPMTInfogR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::PMTInfo> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::PMTInfo>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLPMTInfogR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::PMTInfo>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLPMTInfogR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PMTInfo> : new vector<RAT::DS::PMTInfo>;
   }
   static void *newArray_vectorlERATcLcLDScLcLPMTInfogR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PMTInfo>[nElements] : new vector<RAT::DS::PMTInfo>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLPMTInfogR(void *p) {
      delete ((vector<RAT::DS::PMTInfo>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLPMTInfogR(void *p) {
      delete [] ((vector<RAT::DS::PMTInfo>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLPMTInfogR(void *p) {
      typedef vector<RAT::DS::PMTInfo> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::PMTInfo>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLPathFitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLPathFitgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLPathFitgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLPathFitgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLPathFitgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLPathFitgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLPathFitgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::PathFit>*)
   {
      vector<RAT::DS::PathFit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::PathFit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::PathFit>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::PathFit>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLPathFitgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::PathFit>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLPathFitgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLPathFitgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLPathFitgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLPathFitgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLPathFitgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::PathFit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::PathFit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLPathFitgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::PathFit>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLPathFitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PathFit> : new vector<RAT::DS::PathFit>;
   }
   static void *newArray_vectorlERATcLcLDScLcLPathFitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PathFit>[nElements] : new vector<RAT::DS::PathFit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLPathFitgR(void *p) {
      delete ((vector<RAT::DS::PathFit>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLPathFitgR(void *p) {
      delete [] ((vector<RAT::DS::PathFit>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLPathFitgR(void *p) {
      typedef vector<RAT::DS::PathFit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::PathFit>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLRootgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLRootgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLRootgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLRootgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLRootgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLRootgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLRootgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::Root>*)
   {
      vector<RAT::DS::Root> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::Root>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::Root>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::Root>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLRootgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::Root>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLRootgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLRootgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLRootgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLRootgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLRootgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::Root> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::Root>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLRootgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::Root>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLRootgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::Root> : new vector<RAT::DS::Root>;
   }
   static void *newArray_vectorlERATcLcLDScLcLRootgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::Root>[nElements] : new vector<RAT::DS::Root>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLRootgR(void *p) {
      delete ((vector<RAT::DS::Root>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLRootgR(void *p) {
      delete [] ((vector<RAT::DS::Root>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLRootgR(void *p) {
      typedef vector<RAT::DS::Root> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::Root>

namespace ROOTDict {
   void vectorlERATcLcLTrackNodemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLTrackNodemUgR_Dictionary();
   static void *new_vectorlERATcLcLTrackNodemUgR(void *p = 0);
   static void *newArray_vectorlERATcLcLTrackNodemUgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLTrackNodemUgR(void *p);
   static void deleteArray_vectorlERATcLcLTrackNodemUgR(void *p);
   static void destruct_vectorlERATcLcLTrackNodemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::TrackNode*>*)
   {
      vector<RAT::TrackNode*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::TrackNode*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::TrackNode*>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::TrackNode*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLTrackNodemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::TrackNode*>) );
      instance.SetNew(&new_vectorlERATcLcLTrackNodemUgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLTrackNodemUgR);
      instance.SetDelete(&delete_vectorlERATcLcLTrackNodemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLTrackNodemUgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLTrackNodemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::TrackNode*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::TrackNode*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLTrackNodemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::TrackNode*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLTrackNodemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::TrackNode*> : new vector<RAT::TrackNode*>;
   }
   static void *newArray_vectorlERATcLcLTrackNodemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::TrackNode*>[nElements] : new vector<RAT::TrackNode*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLTrackNodemUgR(void *p) {
      delete ((vector<RAT::TrackNode*>*)p);
   }
   static void deleteArray_vectorlERATcLcLTrackNodemUgR(void *p) {
      delete [] ((vector<RAT::TrackNode*>*)p);
   }
   static void destruct_vectorlERATcLcLTrackNodemUgR(void *p) {
      typedef vector<RAT::TrackNode*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::TrackNode*>

namespace ROOTDict {
   void vectorlETVector3gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETVector3gR_Dictionary();
   static void *new_vectorlETVector3gR(void *p = 0);
   static void *newArray_vectorlETVector3gR(Long_t size, void *p);
   static void delete_vectorlETVector3gR(void *p);
   static void deleteArray_vectorlETVector3gR(void *p);
   static void destruct_vectorlETVector3gR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TVector3>*)
   {
      vector<TVector3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TVector3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TVector3>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TVector3>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETVector3gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TVector3>) );
      instance.SetNew(&new_vectorlETVector3gR);
      instance.SetNewArray(&newArray_vectorlETVector3gR);
      instance.SetDelete(&delete_vectorlETVector3gR);
      instance.SetDeleteArray(&deleteArray_vectorlETVector3gR);
      instance.SetDestructor(&destruct_vectorlETVector3gR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TVector3> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TVector3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETVector3gR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TVector3>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETVector3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3> : new vector<TVector3>;
   }
   static void *newArray_vectorlETVector3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3>[nElements] : new vector<TVector3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETVector3gR(void *p) {
      delete ((vector<TVector3>*)p);
   }
   static void deleteArray_vectorlETVector3gR(void *p) {
      delete [] ((vector<TVector3>*)p);
   }
   static void destruct_vectorlETVector3gR(void *p) {
      typedef vector<TVector3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TVector3>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEpairlEstringcOintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEstringcOintgRsPgR_Dictionary();
   static void *new_vectorlEpairlEstringcOintgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEstringcOintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEstringcOintgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEstringcOintgRsPgR(void *p);
   static void destruct_vectorlEpairlEstringcOintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<string,int> >*)
   {
      vector<pair<string,int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<string,int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<string,int> >", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<pair<string,int> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEstringcOintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<string,int> >) );
      instance.SetNew(&new_vectorlEpairlEstringcOintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEstringcOintgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEstringcOintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEstringcOintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEstringcOintgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<pair<string,int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<string,int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEstringcOintgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<pair<string,int> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEpairlEstringcOintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<string,int> > : new vector<pair<string,int> >;
   }
   static void *newArray_vectorlEpairlEstringcOintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<string,int> >[nElements] : new vector<pair<string,int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEstringcOintgRsPgR(void *p) {
      delete ((vector<pair<string,int> >*)p);
   }
   static void deleteArray_vectorlEpairlEstringcOintgRsPgR(void *p) {
      delete [] ((vector<pair<string,int> >*)p);
   }
   static void destruct_vectorlEpairlEstringcOintgRsPgR(void *p) {
      typedef vector<pair<string,int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<pair<string,int> >

namespace ROOTDict {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "/home/aw325/Downloads/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<string>

/********************************************************
* build/linuxx8664gcc/RAT_Dict_jailbreak.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRAT_Dict_jailbreak();

extern "C" void G__set_cpp_environmentRAT_Dict_jailbreak() {
  G__cpp_reset_tagtableRAT_Dict_jailbreak();
}
#include <new>
extern "C" int G__cpp_dllrevRAT_Dict_jailbreak() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* RAT::DS::MCParticle */
static int G__RAT_Dict_jailbreak_225_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCParticle[n];
     } else {
       p = new((void*) gvp) RAT::DS::MCParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCParticle;
     } else {
       p = new((void*) gvp) RAT::DS::MCParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCParticle*) G__getstructoffset())->GetPDGCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetPDGCode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const RAT::DS::MCParticle*) G__getstructoffset())->GetParticleName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetParticleName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCParticle*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::MCParticle*) G__getstructoffset())->GetPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCParticle*) G__getstructoffset())->GetKE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetKE((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::MCParticle*) G__getstructoffset())->GetMomentum();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetMomentum(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::MCParticle*) G__getstructoffset())->GetPolarization();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetPolarization(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MCParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MCParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MCParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_225_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_225_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MCParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MCParticle(*(RAT::DS::MCParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MCParticle G__TRATcLcLDScLcLMCParticle;
static int G__RAT_Dict_jailbreak_225_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MCParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MCParticle*) (soff+(sizeof(RAT::DS::MCParticle)*i)))->~G__TRATcLcLDScLcLMCParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MCParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MCParticle*) (soff))->~G__TRATcLcLDScLcLMCParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_225_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCParticle* dest = (RAT::DS::MCParticle*) G__getstructoffset();
   *dest = *(RAT::DS::MCParticle*) libp->para[0].ref;
   const RAT::DS::MCParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::MCTrackStep */
static int G__RAT_Dict_jailbreak_226_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCTrackStep* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCTrackStep[n];
     } else {
       p = new((void*) gvp) RAT::DS::MCTrackStep[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCTrackStep;
     } else {
       p = new((void*) gvp) RAT::DS::MCTrackStep;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetLength((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetEndpoint();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetEndpoint(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetGlobalTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetGlobalTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetLocalTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetLocalTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetProperTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetProperTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetMomentum();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetMomentum(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetKE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetKE((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetProcess();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetProcess(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetVolume();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetVolume(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MCTrackStep::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCTrackStep::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MCTrackStep::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MCTrackStep::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCTrackStep::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCTrackStep::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCTrackStep::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_226_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCTrackStep::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_226_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MCTrackStep* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MCTrackStep(*(RAT::DS::MCTrackStep*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MCTrackStep G__TRATcLcLDScLcLMCTrackStep;
static int G__RAT_Dict_jailbreak_226_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MCTrackStep*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MCTrackStep*) (soff+(sizeof(RAT::DS::MCTrackStep)*i)))->~G__TRATcLcLDScLcLMCTrackStep();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MCTrackStep*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MCTrackStep*) (soff))->~G__TRATcLcLDScLcLMCTrackStep();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_226_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCTrackStep* dest = (RAT::DS::MCTrackStep*) G__getstructoffset();
   *dest = *(RAT::DS::MCTrackStep*) libp->para[0].ref;
   const RAT::DS::MCTrackStep& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::MCTrack */
static int G__RAT_Dict_jailbreak_227_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCTrack[n];
     } else {
       p = new((void*) gvp) RAT::DS::MCTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCTrack;
     } else {
       p = new((void*) gvp) RAT::DS::MCTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCTrack*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCTrack*) G__getstructoffset())->GetParentID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->SetParentID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCTrack*) G__getstructoffset())->GetPDGCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->SetPDGCode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const RAT::DS::MCTrack*) G__getstructoffset())->GetParticleName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->SetParticleName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MCTrack*) G__getstructoffset())->GetMCTrackStep((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCTrack*) G__getstructoffset())->GetMCTrackStepCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MCTrack*) G__getstructoffset())->AddNewMCTrackStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->PruneMCTrackStep();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MCTrack*) G__getstructoffset())->GetLastMCTrackStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->PruneIntermediateMCTrackSteps();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCTrack*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->SetLength((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MCTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MCTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MCTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_227_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_227_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MCTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MCTrack(*(RAT::DS::MCTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MCTrack G__TRATcLcLDScLcLMCTrack;
static int G__RAT_Dict_jailbreak_227_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MCTrack*) (soff+(sizeof(RAT::DS::MCTrack)*i)))->~G__TRATcLcLDScLcLMCTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MCTrack*) (soff))->~G__TRATcLcLDScLcLMCTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_227_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCTrack* dest = (RAT::DS::MCTrack*) G__getstructoffset();
   *dest = *(RAT::DS::MCTrack*) libp->para[0].ref;
   const RAT::DS::MCTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> > */
static int G__RAT_Dict_jailbreak_229_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::reference obj = ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->at((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_reference obj = ((const vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->at((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator* pobj;
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator xobj = ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator* pobj;
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator xobj = ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::reverse_iterator* pobj;
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::reverse_iterator xobj = ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::reverse_iterator* pobj;
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::reverse_iterator xobj = ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->resize((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->resize((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type) G__int(libp->para[0]), *((RAT::DS::MCTrackStep*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::reference obj = ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_reference obj = ((const vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type) G__int(libp->para[0]), *(RAT::DS::MCTrackStep*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type) G__int(libp->para[0]), *(RAT::DS::MCTrackStep*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >(*(vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >(*(vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >(*((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >(*((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >& obj = ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->reserve((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::MCTrackStep& obj = ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::MCTrackStep& obj = ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->push_back(*(RAT::DS::MCTrackStep*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->swap(*(vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator* pobj;
         vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator xobj = ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator*) G__int(libp->para[0])), *(RAT::DS::MCTrackStep*) libp->para[1].ref);
         pobj = new vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type) G__int(libp->para[1])
, *(RAT::DS::MCTrackStep*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_229_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> > G__TvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR;
static int G__RAT_Dict_jailbreak_229_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) (soff+(sizeof(vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >)*i)))->~G__TvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*) (soff))->~G__TvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::MCSummary */
static int G__RAT_Dict_jailbreak_467_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCSummary* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCSummary[n];
     } else {
       p = new((void*) gvp) RAT::DS::MCSummary[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCSummary;
     } else {
       p = new((void*) gvp) RAT::DS::MCSummary;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCSummary));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::MCSummary*) G__getstructoffset())->GetEnergyCentroid();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetEnergyCentroid(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::MCSummary*) G__getstructoffset())->GetEnergyRMS();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetEnergyRMS(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RAT::DS::MCSummary*) G__getstructoffset())->GetEnergyLossByVolume((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetEnergyLossByVolume(*((RAT::DS::StringDoubleMap*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCSummary*) G__getstructoffset())->GetTotalScintEdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetTotalScintEdep((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCSummary*) G__getstructoffset())->GetTotalScintEdepQuenched());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetTotalScintEdepQuenched((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::MCSummary*) G__getstructoffset())->GetTotalScintCentroid();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetTotalScintCentroid(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCSummary*) G__getstructoffset())->GetInitialScintTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetInitialScintTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCSummary*) G__getstructoffset())->GetNumScintPhoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetNumScintPhoton((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCSummary*) G__getstructoffset())->GetNumReemitPhoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetNumReemitPhoton((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MCSummary::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCSummary::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MCSummary::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MCSummary::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCSummary::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCSummary::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCSummary::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_467_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCSummary::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_467_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MCSummary* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MCSummary(*(RAT::DS::MCSummary*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCSummary));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MCSummary G__TRATcLcLDScLcLMCSummary;
static int G__RAT_Dict_jailbreak_467_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MCSummary*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MCSummary*) (soff+(sizeof(RAT::DS::MCSummary)*i)))->~G__TRATcLcLDScLcLMCSummary();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MCSummary*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MCSummary*) (soff))->~G__TRATcLcLDScLcLMCSummary();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_467_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCSummary* dest = (RAT::DS::MCSummary*) G__getstructoffset();
   *dest = *(RAT::DS::MCSummary*) libp->para[0].ref;
   const RAT::DS::MCSummary& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::MCPhoton */
static int G__RAT_Dict_jailbreak_468_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCPhoton* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCPhoton[n];
     } else {
       p = new((void*) gvp) RAT::DS::MCPhoton[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCPhoton;
     } else {
       p = new((void*) gvp) RAT::DS::MCPhoton;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetHitTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetHitTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetFrontEndTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetFrontEndTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetLambda());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetLambda((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetMomentum();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetMomentum(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetPolarization();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetPolarization(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetCharge((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetDarkHit((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::MCPhoton*) G__getstructoffset())->IsDarkHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetTrackID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MCPhoton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCPhoton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MCPhoton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MCPhoton::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCPhoton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCPhoton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCPhoton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_468_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCPhoton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_468_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MCPhoton* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MCPhoton(*(RAT::DS::MCPhoton*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MCPhoton G__TRATcLcLDScLcLMCPhoton;
static int G__RAT_Dict_jailbreak_468_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MCPhoton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MCPhoton*) (soff+(sizeof(RAT::DS::MCPhoton)*i)))->~G__TRATcLcLDScLcLMCPhoton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MCPhoton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MCPhoton*) (soff))->~G__TRATcLcLDScLcLMCPhoton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_468_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCPhoton* dest = (RAT::DS::MCPhoton*) G__getstructoffset();
   *dest = *(RAT::DS::MCPhoton*) libp->para[0].ref;
   const RAT::DS::MCPhoton& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* json::Value */
static int G__RAT_Dict_jailbreak_610_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   json::Value* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new json::Value[n];
     } else {
       p = new((void*) gvp) json::Value[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new json::Value;
     } else {
       p = new((void*) gvp) json::Value;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   json::Value* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new json::Value((json::Type) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) json::Value((json::Type) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   json::Value* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new json::Value((json::TInteger) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) json::Value((json::TInteger) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   json::Value* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new json::Value((json::TUInteger) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) json::Value((json::TUInteger) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   json::Value* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new json::Value((json::TReal) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) json::Value((json::TReal) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   json::Value* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new json::Value((json::TBool) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) json::Value((json::TBool) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   json::Value* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new json::Value((long) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) json::Value((long) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   json::Value* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new json::Value(*((json::TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) json::Value(*((json::TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   json::Value* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new json::Value(*((json::TObject*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) json::Value(*((json::TObject*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   json::Value* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new json::Value(*((json::TArray*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) json::Value(*((json::TArray*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   json::Value* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new json::Value(*(json::Value*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) json::Value(*(json::Value*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const json::Value& obj = ((json::Value*) G__getstructoffset())->operator=(*(json::Value*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const json::Value& obj = ((const json::Value*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const json::Value& obj = ((const json::Value*) G__getstructoffset())->operator[]((const size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->reset((json::Type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const json::Value*) G__getstructoffset())->getType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const json::Value*) G__getstructoffset())->getInteger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const json::Value*) G__getstructoffset())->getUInteger());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const json::Value*) G__getstructoffset())->getReal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const json::Value*) G__getstructoffset())->getBool());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const json::TString* pobj;
         const json::TString xobj = ((const json::Value*) G__getstructoffset())->getString();
         pobj = new json::TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const json::Value& obj = ((const json::Value*) G__getstructoffset())->getMember(*((json::TString*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const json::Value*) G__getstructoffset())->getArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const json::Value& obj = ((const json::Value*) G__getstructoffset())->getIndex((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const json::Value*) G__getstructoffset())->getMembers();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const json::Value*) G__getstructoffset())->isMember(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->setInteger((json::TInteger) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->setUINteger((json::TUInteger) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->setReal((json::TReal) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->setReal((json::TBool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->setString(*((json::TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->setMember(*((json::TString*) G__int(libp->para[0])), *((json::Value*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->setArraySize((size_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->setIndex((size_t) G__int(libp->para[0]), *((json::Value*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = json::Value::prettyType((json::Type) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      json::Value::wrongType((json::Type) G__int(libp->para[0]), (json::Type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const json::Value*) G__getstructoffset())->checkType((json::Type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->checkTypeReset((json::Type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->decref();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->incref();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_610_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((json::Value*) G__getstructoffset())->clean();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef json::Value G__TjsoncLcLValue;
static int G__RAT_Dict_jailbreak_610_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (json::Value*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((json::Value*) (soff+(sizeof(json::Value)*i)))->~G__TjsoncLcLValue();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (json::Value*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((json::Value*) (soff))->~G__TjsoncLcLValue();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::Log */
static int G__RAT_Dict_jailbreak_627_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) RAT::Log::Init(*((string*) G__int(libp->para[0])), (RAT::Log::Level) G__int(libp->para[1])
, (RAT::Log::Level) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) RAT::Log::Init(*((string*) G__int(libp->para[0])), (RAT::Log::Level) G__int(libp->para[1])
, (RAT::Log::Level) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) RAT::Log::Init(*((string*) G__int(libp->para[0])), (RAT::Log::Level) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) RAT::Log::Init(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::Log::GetDisplayLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::SetDisplayLevel((RAT::Log::Level) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::Log::GetLogLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::SetLogLevel((RAT::Log::Level) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      RAT::Log::Die(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      RAT::Log::Die(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      RAT::Log::Assert((bool) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      RAT::Log::Assert((bool) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = RAT::Log::GetLogBuffer();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::AddMacro(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = RAT::Log::GetMacro();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::AddObject(*(string*) libp->para[0].ref, (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::pair<std::string,TObject*> >* pobj;
         vector<std::pair<std::string,TObject*> > xobj = RAT::Log::GetObjects();
         pobj = new vector<std::pair<std::string,TObject*> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      RAT::Log::SetDBTraceState((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      RAT::Log::SetDBTraceState();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) RAT::Log::GetDBTraceState());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::TraceDBAccess(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::TraceDBAccess(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::TraceDBAccess(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::TraceDBAccess(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(vector<int>*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::TraceDBAccess(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(vector<double>*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::TraceDBAccess(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(vector<std::string>*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::TraceDBAccess(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(json::Value*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::Log::GetDBTraceMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::Log* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::Log[n];
     } else {
       p = new((void*) gvp) RAT::Log[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::Log;
     } else {
       p = new((void*) gvp) RAT::Log;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLLog));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::AddDBEntry(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::SetupIO();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_627_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::Log::ClearOMText((omtext*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_627_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::Log* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::Log(*(RAT::Log*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLLog));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::Log G__TRATcLcLLog;
static int G__RAT_Dict_jailbreak_627_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::Log*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::Log*) (soff+(sizeof(RAT::Log)*i)))->~G__TRATcLcLLog();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::Log*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::Log*) (soff))->~G__TRATcLcLLog();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_627_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::Log* dest = (RAT::Log*) G__getstructoffset();
   *dest = *(RAT::Log*) libp->para[0].ref;
   const RAT::Log& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::MCPMT */
static int G__RAT_Dict_jailbreak_637_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCPMT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCPMT[n];
     } else {
       p = new((void*) gvp) RAT::DS::MCPMT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCPMT;
     } else {
       p = new((void*) gvp) RAT::DS::MCPMT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCPMT*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPMT*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCPMT*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCPMT*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPMT*) G__getstructoffset())->SetType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MCPMT*) G__getstructoffset())->GetMCPhoton((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCPMT*) G__getstructoffset())->GetMCPhotonCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MCPMT*) G__getstructoffset())->AddNewMCPhoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPMT*) G__getstructoffset())->PruneMCPhoton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MCPMT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCPMT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MCPMT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MCPMT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPMT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCPMT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCPMT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCPMT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_637_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCPMT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_637_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MCPMT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MCPMT(*(RAT::DS::MCPMT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MCPMT G__TRATcLcLDScLcLMCPMT;
static int G__RAT_Dict_jailbreak_637_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MCPMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MCPMT*) (soff+(sizeof(RAT::DS::MCPMT)*i)))->~G__TRATcLcLDScLcLMCPMT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MCPMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MCPMT*) (soff))->~G__TRATcLcLDScLcLMCPMT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_637_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCPMT* dest = (RAT::DS::MCPMT*) G__getstructoffset();
   *dest = *(RAT::DS::MCPMT*) libp->para[0].ref;
   const RAT::DS::MCPMT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> > */
static int G__RAT_Dict_jailbreak_639_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::reference obj = ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->at((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_reference obj = ((const vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->at((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator* pobj;
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator xobj = ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator* pobj;
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator xobj = ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::reverse_iterator* pobj;
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::reverse_iterator xobj = ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::reverse_iterator* pobj;
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::reverse_iterator xobj = ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->resize((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->resize((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type) G__int(libp->para[0]), *((RAT::DS::MCPhoton*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::reference obj = ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_reference obj = ((const vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type) G__int(libp->para[0]), *(RAT::DS::MCPhoton*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type) G__int(libp->para[0]), *(RAT::DS::MCPhoton*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >(*(vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >(*(vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >(*((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >(*((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >& obj = ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->reserve((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::MCPhoton& obj = ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::MCPhoton& obj = ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->push_back(*(RAT::DS::MCPhoton*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->swap(*(vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator* pobj;
         vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator xobj = ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator*) G__int(libp->para[0])), *(RAT::DS::MCPhoton*) libp->para[1].ref);
         pobj = new vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type) G__int(libp->para[1])
, *(RAT::DS::MCPhoton*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_639_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> > G__TvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR;
static int G__RAT_Dict_jailbreak_639_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) (soff+(sizeof(vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >)*i)))->~G__TvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*) (soff))->~G__TvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::MC */
static int G__RAT_Dict_jailbreak_642_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MC[n];
     } else {
       p = new((void*) gvp) RAT::DS::MC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MC;
     } else {
       p = new((void*) gvp) RAT::DS::MC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->SetID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TTimeStamp* pobj;
         const TTimeStamp xobj = ((const RAT::DS::MC*) G__getstructoffset())->GetUTC();
         pobj = new TTimeStamp(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->SetUTC(*(TTimeStamp*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->GetMCParticle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetMCParticleCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->AddNewMCParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->PruneMCParticle();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->GetMCParent((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetMCParentCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->AddNewMCParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->PruneMCParent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->GetMCTrack((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetMCTrackCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->AddNewMCTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->PruneMCTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->PruneMCTrack(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->GetMCPMT((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetMCPMTCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->AddNewMCPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->PrunePMT();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetNumPE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->SetNumPE((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetNumDark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->SetNumDark((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->GetMCSummary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::MC*) G__getstructoffset())->ExistMCSummary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->PruneMCSummary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_642_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_642_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MC(*(RAT::DS::MC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MC G__TRATcLcLDScLcLMC;
static int G__RAT_Dict_jailbreak_642_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MC*) (soff+(sizeof(RAT::DS::MC)*i)))->~G__TRATcLcLDScLcLMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MC*) (soff))->~G__TRATcLcLDScLcLMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_642_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MC* dest = (RAT::DS::MC*) G__getstructoffset();
   *dest = *(RAT::DS::MC*) libp->para[0].ref;
   const RAT::DS::MC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> > */
static int G__RAT_Dict_jailbreak_649_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::reference obj = ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->at((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_reference obj = ((const vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->at((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator* pobj;
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator xobj = ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator* pobj;
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator xobj = ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::reverse_iterator* pobj;
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::reverse_iterator xobj = ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::reverse_iterator* pobj;
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::reverse_iterator xobj = ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->resize((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->resize((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type) G__int(libp->para[0]), *((RAT::DS::MCParticle*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::reference obj = ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_reference obj = ((const vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type) G__int(libp->para[0]), *(RAT::DS::MCParticle*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type) G__int(libp->para[0]), *(RAT::DS::MCParticle*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >(*(vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >(*(vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >(*((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >(*((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >& obj = ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->reserve((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::MCParticle& obj = ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::MCParticle& obj = ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->push_back(*(RAT::DS::MCParticle*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->swap(*(vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator* pobj;
         vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator xobj = ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator*) G__int(libp->para[0])), *(RAT::DS::MCParticle*) libp->para[1].ref);
         pobj = new vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type) G__int(libp->para[1])
, *(RAT::DS::MCParticle*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_649_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> > G__TvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR;
static int G__RAT_Dict_jailbreak_649_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) (soff+(sizeof(vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >)*i)))->~G__TvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*) (soff))->~G__TvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> > */
static int G__RAT_Dict_jailbreak_653_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::reference obj = ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->at((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_reference obj = ((const vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->at((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator* pobj;
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator xobj = ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator* pobj;
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator xobj = ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::reverse_iterator* pobj;
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::reverse_iterator xobj = ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::reverse_iterator* pobj;
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::reverse_iterator xobj = ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->resize((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->resize((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type) G__int(libp->para[0]), *((RAT::DS::MCTrack*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::reference obj = ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_reference obj = ((const vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type) G__int(libp->para[0]), *(RAT::DS::MCTrack*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type) G__int(libp->para[0]), *(RAT::DS::MCTrack*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >(*(vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >(*(vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >(*((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >(*((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >& obj = ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->reserve((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::MCTrack& obj = ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::MCTrack& obj = ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->push_back(*(RAT::DS::MCTrack*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->swap(*(vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator* pobj;
         vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator xobj = ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator*) G__int(libp->para[0])), *(RAT::DS::MCTrack*) libp->para[1].ref);
         pobj = new vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type) G__int(libp->para[1])
, *(RAT::DS::MCTrack*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_653_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> > G__TvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR;
static int G__RAT_Dict_jailbreak_653_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) (soff+(sizeof(vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >)*i)))->~G__TvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*) (soff))->~G__TvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> > */
static int G__RAT_Dict_jailbreak_657_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::reference obj = ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->at((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_reference obj = ((const vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->at((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator* pobj;
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator xobj = ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator* pobj;
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator xobj = ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::reverse_iterator* pobj;
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::reverse_iterator xobj = ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::reverse_iterator* pobj;
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::reverse_iterator xobj = ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->resize((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->resize((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type) G__int(libp->para[0]), *((RAT::DS::MCPMT*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::reference obj = ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_reference obj = ((const vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type) G__int(libp->para[0]), *(RAT::DS::MCPMT*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type) G__int(libp->para[0]), *(RAT::DS::MCPMT*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >(*(vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >(*(vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >(*((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >(*((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >& obj = ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->reserve((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::MCPMT& obj = ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::MCPMT& obj = ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->push_back(*(RAT::DS::MCPMT*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->swap(*(vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator* pobj;
         vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator xobj = ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator*) G__int(libp->para[0])), *(RAT::DS::MCPMT*) libp->para[1].ref);
         pobj = new vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type) G__int(libp->para[1])
, *(RAT::DS::MCPMT*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_657_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> > G__TvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR;
static int G__RAT_Dict_jailbreak_657_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) (soff+(sizeof(vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >)*i)))->~G__TvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*) (soff))->~G__TvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::PMT */
static int G__RAT_Dict_jailbreak_660_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PMT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::PMT[n];
     } else {
       p = new((void*) gvp) RAT::DS::PMT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::PMT;
     } else {
       p = new((void*) gvp) RAT::DS::PMT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMT*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RAT::DS::PMT*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMT*) G__getstructoffset())->SetCharge((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RAT::DS::PMT*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMT*) G__getstructoffset())->SetTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RAT::DS::PMT*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::PMT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PMT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::PMT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::PMT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PMT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PMT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PMT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_660_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PMT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_660_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::PMT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::PMT(*(RAT::DS::PMT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::PMT G__TRATcLcLDScLcLPMT;
static int G__RAT_Dict_jailbreak_660_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::PMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::PMT*) (soff+(sizeof(RAT::DS::PMT)*i)))->~G__TRATcLcLDScLcLPMT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::PMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::PMT*) (soff))->~G__TRATcLcLDScLcLPMT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_660_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PMT* dest = (RAT::DS::PMT*) G__getstructoffset();
   *dest = *(RAT::DS::PMT*) libp->para[0].ref;
   const RAT::DS::PMT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::PosFit */
static int G__RAT_Dict_jailbreak_661_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PosFit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RAT::DS::PosFit((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) RAT::DS::PosFit((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPosFit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const RAT::DS::PosFit*) G__getstructoffset())->GetPosFitName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PosFit*) G__getstructoffset())->SetPosFitName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::PosFit*) G__getstructoffset())->GetPosition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PosFit*) G__getstructoffset())->SetPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::PosFit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PosFit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::PosFit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::PosFit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::DS::PosFit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PosFit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PosFit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PosFit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PosFit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PosFit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PosFit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_661_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PosFit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_661_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::PosFit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::PosFit(*(RAT::DS::PosFit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPosFit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::PosFit G__TRATcLcLDScLcLPosFit;
static int G__RAT_Dict_jailbreak_661_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::PosFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::PosFit*) (soff+(sizeof(RAT::DS::PosFit)*i)))->~G__TRATcLcLDScLcLPosFit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::PosFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::PosFit*) (soff))->~G__TRATcLcLDScLcLPosFit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_661_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PosFit* dest = (RAT::DS::PosFit*) G__getstructoffset();
   *dest = *(RAT::DS::PosFit*) libp->para[0].ref;
   const RAT::DS::PosFit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::Centroid */
static int G__RAT_Dict_jailbreak_662_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Centroid* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Centroid[n];
     } else {
       p = new((void*) gvp) RAT::DS::Centroid[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Centroid;
     } else {
       p = new((void*) gvp) RAT::DS::Centroid;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_662_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::DS::Centroid*) G__getstructoffset())->GetPower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_662_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Centroid*) G__getstructoffset())->SetPower((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_662_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::Centroid::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_662_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Centroid::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_662_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::Centroid::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_662_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::Centroid::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_662_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Centroid*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_662_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Centroid::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_662_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Centroid::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_662_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Centroid::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_662_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Centroid::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_662_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::Centroid* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::Centroid(*(RAT::DS::Centroid*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::Centroid G__TRATcLcLDScLcLCentroid;
static int G__RAT_Dict_jailbreak_662_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::Centroid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::Centroid*) (soff+(sizeof(RAT::DS::Centroid)*i)))->~G__TRATcLcLDScLcLCentroid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::Centroid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::Centroid*) (soff))->~G__TRATcLcLDScLcLCentroid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_662_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Centroid* dest = (RAT::DS::Centroid*) G__getstructoffset();
   *dest = *(RAT::DS::Centroid*) libp->para[0].ref;
   const RAT::DS::Centroid& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::PathFit */
static int G__RAT_Dict_jailbreak_663_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PathFit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::PathFit[n];
     } else {
       p = new((void*) gvp) RAT::DS::PathFit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::PathFit;
     } else {
       p = new((void*) gvp) RAT::DS::PathFit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::DS::PathFit*) G__getstructoffset())->GetTime0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PathFit*) G__getstructoffset())->SetTime0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::PathFit*) G__getstructoffset())->GetPos0();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PathFit*) G__getstructoffset())->SetPos0(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::DS::PathFit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PathFit*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::PathFit*) G__getstructoffset())->GetDirection();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PathFit*) G__getstructoffset())->SetDirection(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::PathFit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PathFit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::PathFit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::PathFit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PathFit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PathFit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PathFit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PathFit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_663_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PathFit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_663_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::PathFit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::PathFit(*(RAT::DS::PathFit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::PathFit G__TRATcLcLDScLcLPathFit;
static int G__RAT_Dict_jailbreak_663_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::PathFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::PathFit*) (soff+(sizeof(RAT::DS::PathFit)*i)))->~G__TRATcLcLDScLcLPathFit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::PathFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::PathFit*) (soff))->~G__TRATcLcLDScLcLPathFit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_663_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PathFit* dest = (RAT::DS::PathFit*) G__getstructoffset();
   *dest = *(RAT::DS::PathFit*) libp->para[0].ref;
   const RAT::DS::PathFit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::EV */
static int G__RAT_Dict_jailbreak_664_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::EV* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::EV[n];
     } else {
       p = new((void*) gvp) RAT::DS::EV[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::EV;
     } else {
       p = new((void*) gvp) RAT::DS::EV;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::EV*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TTimeStamp* pobj;
         const TTimeStamp xobj = ((const RAT::DS::EV*) G__getstructoffset())->GetUTC();
         pobj = new TTimeStamp(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->SetUTC(*(TTimeStamp*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::EV*) G__getstructoffset())->GetPMT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::EV*) G__getstructoffset())->GetPMTCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::EV*) G__getstructoffset())->AddNewPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->PrunePMT();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::EV*) G__getstructoffset())->Nhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::EV*) G__getstructoffset())->GetDeltaT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->SetDeltaT((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::EV*) G__getstructoffset())->GetTotalCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->SetTotalCharge((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::EV*) G__getstructoffset())->GetCentroid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::EV*) G__getstructoffset())->ExistCentroid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->PruneCentroid();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::EV*) G__getstructoffset())->GetPathFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::EV*) G__getstructoffset())->ExistPathFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->PrunePathFit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->ClearTriggerFlag();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((RAT::DS::EV*) G__getstructoffset())->GetTriggerFlag();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->SetTriggerFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->ClearTriggerEdep();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((RAT::DS::EV*) G__getstructoffset())->GetTriggerEdep();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->SetTriggerEdep((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->ClearTriggerHitTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((RAT::DS::EV*) G__getstructoffset())->GetTriggerHitTime();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->SetTriggerHitTime((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::EV::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::EV::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::EV::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::EV::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::EV::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::EV::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::EV::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_664_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::EV::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_664_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::EV* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::EV(*(RAT::DS::EV*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::EV G__TRATcLcLDScLcLEV;
static int G__RAT_Dict_jailbreak_664_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::EV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::EV*) (soff+(sizeof(RAT::DS::EV)*i)))->~G__TRATcLcLDScLcLEV();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::EV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::EV*) (soff))->~G__TRATcLcLDScLcLEV();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_664_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::EV* dest = (RAT::DS::EV*) G__getstructoffset();
   *dest = *(RAT::DS::EV*) libp->para[0].ref;
   const RAT::DS::EV& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::PMT,allocator<RAT::DS::PMT> > */
static int G__RAT_Dict_jailbreak_666_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::reference obj = ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->at((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_reference obj = ((const vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->at((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator* pobj;
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator xobj = ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator* pobj;
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator xobj = ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::reverse_iterator* pobj;
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::reverse_iterator xobj = ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::reverse_iterator* pobj;
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::reverse_iterator xobj = ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->resize((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->resize((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type) G__int(libp->para[0]), *((RAT::DS::PMT*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::reference obj = ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->operator[]((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_reference obj = ((const vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->operator[]((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type) G__int(libp->para[0]), *(RAT::DS::PMT*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type) G__int(libp->para[0]), *(RAT::DS::PMT*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >(*(vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >(*(vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >(*((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >(*((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >& obj = ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->reserve((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::PMT& obj = ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::PMT& obj = ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->push_back(*(RAT::DS::PMT*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->swap(*(vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator* pobj;
         vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator xobj = ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->insert(*((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator*) G__int(libp->para[0])), *(RAT::DS::PMT*) libp->para[1].ref);
         pobj = new vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->insert(*((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->insert(*((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type) G__int(libp->para[1])
, *(RAT::DS::PMT*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->erase(*((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->erase(*((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_666_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::PMT,allocator<RAT::DS::PMT> > G__TvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR;
static int G__RAT_Dict_jailbreak_666_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) (soff+(sizeof(vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >)*i)))->~G__TvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*) (soff))->~G__TvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::Calib */
static int G__RAT_Dict_jailbreak_677_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Calib* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Calib[n];
     } else {
       p = new((void*) gvp) RAT::DS::Calib[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Calib;
     } else {
       p = new((void*) gvp) RAT::DS::Calib;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const RAT::DS::Calib*) G__getstructoffset())->GetSourceName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->SetSourceName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Calib*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Calib*) G__getstructoffset())->GetMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->SetMode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::Calib*) G__getstructoffset())->GetIntensity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->SetIntensity((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TTimeStamp* pobj;
         const TTimeStamp xobj = ((const RAT::DS::Calib*) G__getstructoffset())->GetUTC();
         pobj = new TTimeStamp(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->SetUTC(*(TTimeStamp*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::Calib*) G__getstructoffset())->GetPosition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->SetPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::Calib::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Calib::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::Calib::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::Calib::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Calib::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Calib::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Calib::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_677_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Calib::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_677_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::Calib* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::Calib(*(RAT::DS::Calib*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::Calib G__TRATcLcLDScLcLCalib;
static int G__RAT_Dict_jailbreak_677_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::Calib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::Calib*) (soff+(sizeof(RAT::DS::Calib)*i)))->~G__TRATcLcLDScLcLCalib();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::Calib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::Calib*) (soff))->~G__TRATcLcLDScLcLCalib();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_677_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Calib* dest = (RAT::DS::Calib*) G__getstructoffset();
   *dest = *(RAT::DS::Calib*) libp->para[0].ref;
   const RAT::DS::Calib& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::Root */
static int G__RAT_Dict_jailbreak_678_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Root* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Root[n];
     } else {
       p = new((void*) gvp) RAT::DS::Root[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Root;
     } else {
       p = new((void*) gvp) RAT::DS::Root;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Root*) G__getstructoffset())->GetRunID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->SetRunID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->AppendProcResult(*(string*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Root*) G__getstructoffset())->GetLastProcResult(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Root*) G__getstructoffset())->GetLastProcResult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::pair<std::string,int> >* pobj;
         const vector<std::pair<std::string,int> > xobj = ((const RAT::DS::Root*) G__getstructoffset())->GetProcResult();
         pobj = new vector<std::pair<std::string,int> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DS::Root*) G__getstructoffset())->GetRatVersion();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->SetRatVersion(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::Root*) G__getstructoffset())->GetMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::Root*) G__getstructoffset())->ExistMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->PruneMC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::Root*) G__getstructoffset())->GetCalib());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::Root*) G__getstructoffset())->ExistCalib());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->PruneCalib();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::Root*) G__getstructoffset())->GetEV((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Root*) G__getstructoffset())->GetEVCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::Root*) G__getstructoffset())->AddNewEV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::Root*) G__getstructoffset())->ExistEV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->PruneEV();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->PruneEV((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Root*) G__getstructoffset())->GetUserDataCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->SetUserDataCount((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::DS::Root*) G__getstructoffset())->GetUserData((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->SetUserData((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::Root::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Root::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::Root::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::Root::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Root::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Root::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Root::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_678_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Root::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_678_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::Root* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::Root(*(RAT::DS::Root*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::Root G__TRATcLcLDScLcLRoot;
static int G__RAT_Dict_jailbreak_678_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::Root*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::Root*) (soff+(sizeof(RAT::DS::Root)*i)))->~G__TRATcLcLDScLcLRoot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::Root*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::Root*) (soff))->~G__TRATcLcLDScLcLRoot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_678_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Root* dest = (RAT::DS::Root*) G__getstructoffset();
   *dest = *(RAT::DS::Root*) libp->para[0].ref;
   const RAT::DS::Root& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<pair<string,int>,allocator<pair<string,int> > > */
static int G__RAT_Dict_jailbreak_680_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<string,int>,allocator<pair<string,int> > >::reference obj = ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->at((vector<pair<string,int>,allocator<pair<string,int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<string,int>,allocator<pair<string,int> > >::const_reference obj = ((const vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->at((vector<pair<string,int>,allocator<pair<string,int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<string,int>,allocator<pair<string,int> > >::iterator* pobj;
         vector<pair<string,int>,allocator<pair<string,int> > >::iterator xobj = ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->begin();
         pobj = new vector<pair<string,int>,allocator<pair<string,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<string,int>,allocator<pair<string,int> > >::iterator* pobj;
         vector<pair<string,int>,allocator<pair<string,int> > >::iterator xobj = ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->end();
         pobj = new vector<pair<string,int>,allocator<pair<string,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<string,int>,allocator<pair<string,int> > >::reverse_iterator* pobj;
         vector<pair<string,int>,allocator<pair<string,int> > >::reverse_iterator xobj = ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->rbegin();
         pobj = new vector<pair<string,int>,allocator<pair<string,int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<string,int>,allocator<pair<string,int> > >::reverse_iterator* pobj;
         vector<pair<string,int>,allocator<pair<string,int> > >::reverse_iterator xobj = ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->rend();
         pobj = new vector<pair<string,int>,allocator<pair<string,int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->resize((vector<pair<string,int>,allocator<pair<string,int> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->resize((vector<pair<string,int>,allocator<pair<string,int> > >::size_type) G__int(libp->para[0]), *((pair<string,int>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<string,int>,allocator<pair<string,int> > >::reference obj = ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->operator[]((vector<pair<string,int>,allocator<pair<string,int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<string,int>,allocator<pair<string,int> > >::const_reference obj = ((const vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->operator[]((vector<pair<string,int>,allocator<pair<string,int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<string,int>,allocator<pair<string,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<string,int>,allocator<pair<string,int> > >[n];
     } else {
       p = new((void*) gvp) vector<pair<string,int>,allocator<pair<string,int> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<string,int>,allocator<pair<string,int> > >;
     } else {
       p = new((void*) gvp) vector<pair<string,int>,allocator<pair<string,int> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<string,int>,allocator<pair<string,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<string,int>,allocator<pair<string,int> > >((vector<pair<string,int>,allocator<pair<string,int> > >::size_type) G__int(libp->para[0]), *(pair<string,int>*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<pair<string,int>,allocator<pair<string,int> > >((vector<pair<string,int>,allocator<pair<string,int> > >::size_type) G__int(libp->para[0]), *(pair<string,int>*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<string,int>,allocator<pair<string,int> > >((vector<pair<string,int>,allocator<pair<string,int> > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<pair<string,int>,allocator<pair<string,int> > >((vector<pair<string,int>,allocator<pair<string,int> > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<string,int>,allocator<pair<string,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<string,int>,allocator<pair<string,int> > >(*(vector<pair<string,int>,allocator<pair<string,int> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<pair<string,int>,allocator<pair<string,int> > >(*(vector<pair<string,int>,allocator<pair<string,int> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<string,int>,allocator<pair<string,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<string,int>,allocator<pair<string,int> > >(*((vector<pair<string,int>,allocator<pair<string,int> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<string,int>,allocator<pair<string,int> > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<pair<string,int>,allocator<pair<string,int> > >(*((vector<pair<string,int>,allocator<pair<string,int> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<string,int>,allocator<pair<string,int> > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<string,int>,allocator<pair<string,int> > >& obj = ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->operator=(*(vector<pair<string,int>,allocator<pair<string,int> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->reserve((vector<pair<string,int>,allocator<pair<string,int> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<string,int>& obj = ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<string,int>& obj = ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->push_back(*(pair<string,int>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->swap(*(vector<pair<string,int>,allocator<pair<string,int> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<string,int>,allocator<pair<string,int> > >::iterator* pobj;
         vector<pair<string,int>,allocator<pair<string,int> > >::iterator xobj = ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->insert(*((vector<pair<string,int>,allocator<pair<string,int> > >::iterator*) G__int(libp->para[0])), *(pair<string,int>*) libp->para[1].ref);
         pobj = new vector<pair<string,int>,allocator<pair<string,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->insert(*((vector<pair<string,int>,allocator<pair<string,int> > >::iterator*) G__int(libp->para[0])), *((vector<pair<string,int>,allocator<pair<string,int> > >::const_iterator*) G__int(libp->para[1]))
, *((vector<pair<string,int>,allocator<pair<string,int> > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->insert(*((vector<pair<string,int>,allocator<pair<string,int> > >::iterator*) G__int(libp->para[0])), (vector<pair<string,int>,allocator<pair<string,int> > >::size_type) G__int(libp->para[1])
, *(pair<string,int>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->erase(*((vector<pair<string,int>,allocator<pair<string,int> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->erase(*((vector<pair<string,int>,allocator<pair<string,int> > >::iterator*) G__int(libp->para[0])), *((vector<pair<string,int>,allocator<pair<string,int> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_680_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<string,int>,allocator<pair<string,int> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<pair<string,int>,allocator<pair<string,int> > > G__TvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR;
static int G__RAT_Dict_jailbreak_680_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<pair<string,int>,allocator<pair<string,int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<pair<string,int>,allocator<pair<string,int> > >*) (soff+(sizeof(vector<pair<string,int>,allocator<pair<string,int> > >)*i)))->~G__TvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<pair<string,int>,allocator<pair<string,int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<pair<string,int>,allocator<pair<string,int> > >*) (soff))->~G__TvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::MC,allocator<RAT::DS::MC> > */
static int G__RAT_Dict_jailbreak_684_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::reference obj = ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->at((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_reference obj = ((const vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->at((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator* pobj;
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator xobj = ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator* pobj;
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator xobj = ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::reverse_iterator* pobj;
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::reverse_iterator xobj = ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::MC,allocator<RAT::DS::MC> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::reverse_iterator* pobj;
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::reverse_iterator xobj = ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::MC,allocator<RAT::DS::MC> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->resize((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->resize((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type) G__int(libp->para[0]), *((RAT::DS::MC*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::reference obj = ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_reference obj = ((const vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MC,allocator<RAT::DS::MC> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MC,allocator<RAT::DS::MC> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::MC,allocator<RAT::DS::MC> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MC,allocator<RAT::DS::MC> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::MC,allocator<RAT::DS::MC> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MC,allocator<RAT::DS::MC> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MC,allocator<RAT::DS::MC> >((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type) G__int(libp->para[0]), *(RAT::DS::MC*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RAT::DS::MC,allocator<RAT::DS::MC> >((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type) G__int(libp->para[0]), *(RAT::DS::MC*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MC,allocator<RAT::DS::MC> >((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MC,allocator<RAT::DS::MC> >((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MC,allocator<RAT::DS::MC> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MC,allocator<RAT::DS::MC> >(*(vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::MC,allocator<RAT::DS::MC> >(*(vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MC,allocator<RAT::DS::MC> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MC,allocator<RAT::DS::MC> >(*((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::MC,allocator<RAT::DS::MC> >(*((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::MC,allocator<RAT::DS::MC> >& obj = ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->reserve((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::MC& obj = ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::MC& obj = ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->push_back(*(RAT::DS::MC*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->swap(*(vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator* pobj;
         vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator xobj = ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator*) G__int(libp->para[0])), *(RAT::DS::MC*) libp->para[1].ref);
         pobj = new vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type) G__int(libp->para[1])
, *(RAT::DS::MC*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_684_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::MC,allocator<RAT::DS::MC> > G__TvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR;
static int G__RAT_Dict_jailbreak_684_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) (soff+(sizeof(vector<RAT::DS::MC,allocator<RAT::DS::MC> >)*i)))->~G__TvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::MC,allocator<RAT::DS::MC> >*) (soff))->~G__TvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::Calib,allocator<RAT::DS::Calib> > */
static int G__RAT_Dict_jailbreak_688_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::reference obj = ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->at((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_reference obj = ((const vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->at((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator* pobj;
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator xobj = ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator* pobj;
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator xobj = ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::reverse_iterator* pobj;
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::reverse_iterator xobj = ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::reverse_iterator* pobj;
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::reverse_iterator xobj = ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->resize((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->resize((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type) G__int(libp->para[0]), *((RAT::DS::Calib*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::reference obj = ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->operator[]((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_reference obj = ((const vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->operator[]((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type) G__int(libp->para[0]), *(RAT::DS::Calib*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type) G__int(libp->para[0]), *(RAT::DS::Calib*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >(*(vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >(*(vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >(*((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >(*((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >& obj = ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->reserve((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::Calib& obj = ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::Calib& obj = ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->push_back(*(RAT::DS::Calib*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->swap(*(vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator* pobj;
         vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator xobj = ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->insert(*((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator*) G__int(libp->para[0])), *(RAT::DS::Calib*) libp->para[1].ref);
         pobj = new vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->insert(*((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->insert(*((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type) G__int(libp->para[1])
, *(RAT::DS::Calib*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->erase(*((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->erase(*((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_688_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::Calib,allocator<RAT::DS::Calib> > G__TvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR;
static int G__RAT_Dict_jailbreak_688_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) (soff+(sizeof(vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >)*i)))->~G__TvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*) (soff))->~G__TvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::EV,allocator<RAT::DS::EV> > */
static int G__RAT_Dict_jailbreak_692_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::reference obj = ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->at((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_reference obj = ((const vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->at((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator* pobj;
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator xobj = ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator* pobj;
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator xobj = ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::reverse_iterator* pobj;
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::reverse_iterator xobj = ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::EV,allocator<RAT::DS::EV> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::reverse_iterator* pobj;
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::reverse_iterator xobj = ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::EV,allocator<RAT::DS::EV> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->resize((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->resize((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type) G__int(libp->para[0]), *((RAT::DS::EV*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::reference obj = ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->operator[]((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_reference obj = ((const vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->operator[]((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::EV,allocator<RAT::DS::EV> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::EV,allocator<RAT::DS::EV> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::EV,allocator<RAT::DS::EV> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::EV,allocator<RAT::DS::EV> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::EV,allocator<RAT::DS::EV> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::EV,allocator<RAT::DS::EV> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::EV,allocator<RAT::DS::EV> >((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type) G__int(libp->para[0]), *(RAT::DS::EV*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RAT::DS::EV,allocator<RAT::DS::EV> >((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type) G__int(libp->para[0]), *(RAT::DS::EV*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::EV,allocator<RAT::DS::EV> >((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::EV,allocator<RAT::DS::EV> >((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::EV,allocator<RAT::DS::EV> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::EV,allocator<RAT::DS::EV> >(*(vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::EV,allocator<RAT::DS::EV> >(*(vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::EV,allocator<RAT::DS::EV> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::EV,allocator<RAT::DS::EV> >(*((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::EV,allocator<RAT::DS::EV> >(*((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::EV,allocator<RAT::DS::EV> >& obj = ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->reserve((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::EV& obj = ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::EV& obj = ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->push_back(*(RAT::DS::EV*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->swap(*(vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator* pobj;
         vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator xobj = ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->insert(*((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator*) G__int(libp->para[0])), *(RAT::DS::EV*) libp->para[1].ref);
         pobj = new vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->insert(*((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->insert(*((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type) G__int(libp->para[1])
, *(RAT::DS::EV*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->erase(*((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->erase(*((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_692_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::EV,allocator<RAT::DS::EV> > G__TvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR;
static int G__RAT_Dict_jailbreak_692_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) (soff+(sizeof(vector<RAT::DS::EV,allocator<RAT::DS::EV> >)*i)))->~G__TvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::EV,allocator<RAT::DS::EV> >*) (soff))->~G__TvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::PMTInfo */
static int G__RAT_Dict_jailbreak_767_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PMTInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::PMTInfo[n];
     } else {
       p = new((void*) gvp) RAT::DS::PMTInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::PMTInfo;
     } else {
       p = new((void*) gvp) RAT::DS::PMTInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMTInfo*) G__getstructoffset())->AddPMT(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (const int) G__int(libp->para[2]), *((const string*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMTInfo*) G__getstructoffset())->AddPMT(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (const int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetPMTCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetPosition((int) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMTInfo*) G__getstructoffset())->SetPosition((int) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetDirection((int) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMTInfo*) G__getstructoffset())->SetDirection((int) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetType((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMTInfo*) G__getstructoffset())->SetType((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetModel((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RAT::DS::PMTInfo*) G__getstructoffset())->SetModel((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetModelName((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetModelCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::PMTInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PMTInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::PMTInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::PMTInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMTInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PMTInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PMTInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PMTInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_767_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PMTInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_767_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::PMTInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::PMTInfo(*(RAT::DS::PMTInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::PMTInfo G__TRATcLcLDScLcLPMTInfo;
static int G__RAT_Dict_jailbreak_767_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::PMTInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::PMTInfo*) (soff+(sizeof(RAT::DS::PMTInfo)*i)))->~G__TRATcLcLDScLcLPMTInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::PMTInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::PMTInfo*) (soff))->~G__TRATcLcLDScLcLPMTInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_767_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PMTInfo* dest = (RAT::DS::PMTInfo*) G__getstructoffset();
   *dest = *(RAT::DS::PMTInfo*) libp->para[0].ref;
   const RAT::DS::PMTInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TVector3,allocator<TVector3> > */
static int G__RAT_Dict_jailbreak_769_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::reference obj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->at((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::const_reference obj = ((const vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->at((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::iterator* pobj;
         vector<TVector3,allocator<TVector3> >::iterator xobj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->begin();
         pobj = new vector<TVector3,allocator<TVector3> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::iterator* pobj;
         vector<TVector3,allocator<TVector3> >::iterator xobj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->end();
         pobj = new vector<TVector3,allocator<TVector3> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::reverse_iterator* pobj;
         vector<TVector3,allocator<TVector3> >::reverse_iterator xobj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TVector3,allocator<TVector3> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::reverse_iterator* pobj;
         vector<TVector3,allocator<TVector3> >::reverse_iterator xobj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->rend();
         pobj = new vector<TVector3,allocator<TVector3> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->resize((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->resize((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::reference obj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->operator[]((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::const_reference obj = ((const vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->operator[]((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TVector3,allocator<TVector3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TVector3,allocator<TVector3> >[n];
     } else {
       p = new((void*) gvp) vector<TVector3,allocator<TVector3> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TVector3,allocator<TVector3> >;
     } else {
       p = new((void*) gvp) vector<TVector3,allocator<TVector3> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TVector3,allocator<TVector3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TVector3,allocator<TVector3> >((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<TVector3,allocator<TVector3> >((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TVector3,allocator<TVector3> >((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TVector3,allocator<TVector3> >((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TVector3,allocator<TVector3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TVector3,allocator<TVector3> >(*(vector<TVector3,allocator<TVector3> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TVector3,allocator<TVector3> >(*(vector<TVector3,allocator<TVector3> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TVector3,allocator<TVector3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TVector3,allocator<TVector3> >(*((vector<TVector3,allocator<TVector3> >::const_iterator*) G__int(libp->para[0])), *((vector<TVector3,allocator<TVector3> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TVector3,allocator<TVector3> >(*((vector<TVector3,allocator<TVector3> >::const_iterator*) G__int(libp->para[0])), *((vector<TVector3,allocator<TVector3> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TVector3,allocator<TVector3> >& obj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->operator=(*(vector<TVector3,allocator<TVector3> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->reserve((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->push_back(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->swap(*(vector<TVector3,allocator<TVector3> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::iterator* pobj;
         vector<TVector3,allocator<TVector3> >::iterator xobj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->insert(*((vector<TVector3,allocator<TVector3> >::iterator*) G__int(libp->para[0])), *(TVector3*) libp->para[1].ref);
         pobj = new vector<TVector3,allocator<TVector3> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->insert(*((vector<TVector3,allocator<TVector3> >::iterator*) G__int(libp->para[0])), *((vector<TVector3,allocator<TVector3> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TVector3,allocator<TVector3> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->insert(*((vector<TVector3,allocator<TVector3> >::iterator*) G__int(libp->para[0])), (vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->erase(*((vector<TVector3,allocator<TVector3> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->erase(*((vector<TVector3,allocator<TVector3> >::iterator*) G__int(libp->para[0])), *((vector<TVector3,allocator<TVector3> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_769_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TVector3,allocator<TVector3> > G__TvectorlETVector3cOallocatorlETVector3gRsPgR;
static int G__RAT_Dict_jailbreak_769_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TVector3,allocator<TVector3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TVector3,allocator<TVector3> >*) (soff+(sizeof(vector<TVector3,allocator<TVector3> >)*i)))->~G__TvectorlETVector3cOallocatorlETVector3gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TVector3,allocator<TVector3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TVector3,allocator<TVector3> >*) (soff))->~G__TvectorlETVector3cOallocatorlETVector3gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::Run */
static int G__RAT_Dict_jailbreak_772_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Run* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Run[n];
     } else {
       p = new((void*) gvp) RAT::DS::Run[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Run;
     } else {
       p = new((void*) gvp) RAT::DS::Run;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Run*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((const RAT::DS::Run*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->SetType((ULong64_t) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const RAT::DS::Run*) G__getstructoffset())->GetStartTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->SetStartTime((time_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::Run*) G__getstructoffset())->GetPMTInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->SetPMTInfo((RAT::DS::PMTInfo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RAT::DS::Run*) G__getstructoffset())->ExistPMTInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->PrunePMTInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::Run::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Run::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::Run::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::Run::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Run::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Run::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Run::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_772_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Run::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_772_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::Run* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::Run(*(RAT::DS::Run*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::Run G__TRATcLcLDScLcLRun;
static int G__RAT_Dict_jailbreak_772_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::Run*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::Run*) (soff+(sizeof(RAT::DS::Run)*i)))->~G__TRATcLcLDScLcLRun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::Run*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::Run*) (soff))->~G__TRATcLcLDScLcLRun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_772_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Run* dest = (RAT::DS::Run*) G__getstructoffset();
   *dest = *(RAT::DS::Run*) libp->para[0].ref;
   const RAT::DS::Run& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> > */
static int G__RAT_Dict_jailbreak_774_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::reference obj = ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->at((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_reference obj = ((const vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->at((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator* pobj;
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator xobj = ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator* pobj;
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator xobj = ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::reverse_iterator* pobj;
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::reverse_iterator xobj = ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::reverse_iterator* pobj;
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::reverse_iterator xobj = ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->resize((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->resize((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type) G__int(libp->para[0]), *((RAT::DS::PMTInfo*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::reference obj = ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->operator[]((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_reference obj = ((const vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->operator[]((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type) G__int(libp->para[0]), *(RAT::DS::PMTInfo*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type) G__int(libp->para[0]), *(RAT::DS::PMTInfo*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >(*(vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >(*(vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >(*((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >(*((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >& obj = ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->reserve((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::PMTInfo& obj = ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::PMTInfo& obj = ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->push_back(*(RAT::DS::PMTInfo*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->swap(*(vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator* pobj;
         vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator xobj = ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->insert(*((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator*) G__int(libp->para[0])), *(RAT::DS::PMTInfo*) libp->para[1].ref);
         pobj = new vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->insert(*((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->insert(*((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type) G__int(libp->para[1])
, *(RAT::DS::PMTInfo*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->erase(*((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->erase(*((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_774_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> > G__TvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR;
static int G__RAT_Dict_jailbreak_774_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) (soff+(sizeof(vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >)*i)))->~G__TvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*) (soff))->~G__TvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::RunStore */
static int G__RAT_Dict_jailbreak_777_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::RunStore::Get());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::RunStore::GetRun((RAT::DS::Root*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::RunStore::GetRun((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::RunStore::SetReadTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::RunStore::SetWriteTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::RunStore::FlushWriteTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::RunStore::AddNewRun((RAT::DS::Run*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      RAT::DS::RunStore::PreloadFromTree((TTree*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      RAT::DS::RunStore::PreloadFromTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::RunStore* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::RunStore[n];
     } else {
       p = new((void*) gvp) RAT::DS::RunStore[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::RunStore;
     } else {
       p = new((void*) gvp) RAT::DS::RunStore;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRunStore));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::RunStore*) G__getstructoffset())->InstanceGetRun((RAT::DS::Root*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::RunStore*) G__getstructoffset())->InstanceGetRun((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->InstanceSetReadTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->InstanceSetWriteTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->InstanceFlushWriteTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->InstanceAddNewRun((RAT::DS::Run*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((RAT::DS::RunStore*) G__getstructoffset())->InstancePreloadFromTree((TTree*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RAT::DS::RunStore*) G__getstructoffset())->InstancePreloadFromTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::RunStore::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::RunStore::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::RunStore::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::RunStore::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::DS::RunStore*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::RunStore::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::RunStore::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::RunStore::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_777_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::RunStore::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_777_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::RunStore* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::RunStore(*(RAT::DS::RunStore*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRunStore));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::RunStore G__TRATcLcLDScLcLRunStore;
static int G__RAT_Dict_jailbreak_777_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::RunStore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::RunStore*) (soff+(sizeof(RAT::DS::RunStore)*i)))->~G__TRATcLcLDScLcLRunStore();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::RunStore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::RunStore*) (soff))->~G__TRATcLcLDScLcLRunStore();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_777_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::RunStore* dest = (RAT::DS::RunStore*) G__getstructoffset();
   *dest = *(RAT::DS::RunStore*) libp->para[0].ref;
   const RAT::DS::RunStore& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DSReader */
static int G__RAT_Dict_jailbreak_788_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DSReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RAT::DSReader((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) RAT::DSReader((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DSReader*) G__getstructoffset())->Add((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((RAT::DSReader*) G__getstructoffset())->SetBranchStatus((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RAT::DSReader*) G__getstructoffset())->SetBranchStatus((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DSReader*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DSReader*) G__getstructoffset())->GetDS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((RAT::DSReader*) G__getstructoffset())->GetTotal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DSReader*) G__getstructoffset())->GetEvent((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DSReader*) G__getstructoffset())->NextEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DSReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DSReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DSReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DSReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DSReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DSReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DSReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DSReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_788_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DSReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DSReader G__TRATcLcLDSReader;
static int G__RAT_Dict_jailbreak_788_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DSReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DSReader*) (soff+(sizeof(RAT::DSReader)*i)))->~G__TRATcLcLDSReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DSReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DSReader*) (soff))->~G__TRATcLcLDSReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DSWriter */
static int G__RAT_Dict_jailbreak_818_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DSWriter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DSWriter(
(const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) RAT::DSWriter(
(const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DSWriter((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RAT::DSWriter((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DSWriter((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) RAT::DSWriter((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RAT::DSWriter*) G__getstructoffset())->Fill((RAT::DS::Root*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DSWriter*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DSWriter*) G__getstructoffset())->GetRunTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DSWriter*) G__getstructoffset())->WriteLog();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DSWriter*) G__getstructoffset())->WriteStatus((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DSWriter*) G__getstructoffset())->Close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DSWriter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DSWriter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DSWriter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DSWriter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DSWriter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DSWriter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DSWriter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DSWriter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_818_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DSWriter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_818_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DSWriter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DSWriter(*(RAT::DSWriter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DSWriter G__TRATcLcLDSWriter;
static int G__RAT_Dict_jailbreak_818_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DSWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DSWriter*) (soff+(sizeof(RAT::DSWriter)*i)))->~G__TRATcLcLDSWriter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DSWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DSWriter*) (soff))->~G__TRATcLcLDSWriter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_818_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DSWriter* dest = (RAT::DSWriter*) G__getstructoffset();
   *dest = *(RAT::DSWriter*) libp->para[0].ref;
   const RAT::DSWriter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::TrackNode */
static int G__RAT_Dict_jailbreak_819_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackNode* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackNode[n];
     } else {
       p = new((void*) gvp) RAT::TrackNode[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackNode;
     } else {
       p = new((void*) gvp) RAT::TrackNode;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::TrackNode*) G__getstructoffset())->IsTrackStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((RAT::TrackNode*) G__getstructoffset())->SetTrackStart((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((RAT::TrackNode*) G__getstructoffset())->SetTrackStart();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::TrackNode*) G__getstructoffset())->IsTrackEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::TrackNode*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->SetTrackID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::TrackNode*) G__getstructoffset())->GetStepID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->SetStepID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::TrackNode*) G__getstructoffset())->GetPDGCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->SetPDGCode((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const RAT::TrackNode*) G__getstructoffset())->GetParticleName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->SetParticleName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackNode*) G__getstructoffset())->GetPrev());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->SetPrev((RAT::TrackNode*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackNode*) G__getstructoffset())->GetNext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->SetNext((RAT::TrackNode*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->AddNext((RAT::TrackNode*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->AddChild((RAT::TrackNode*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::TrackNode& obj = ((RAT::TrackNode*) G__getstructoffset())->operator=(*(RAT::DS::MCTrackStep*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::TrackNode::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::TrackNode::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::TrackNode::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::TrackNode::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::TrackNode::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::TrackNode::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::TrackNode::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_819_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::TrackNode::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_819_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::TrackNode* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::TrackNode(*(RAT::TrackNode*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::TrackNode G__TRATcLcLTrackNode;
static int G__RAT_Dict_jailbreak_819_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::TrackNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::TrackNode*) (soff+(sizeof(RAT::TrackNode)*i)))->~G__TRATcLcLTrackNode();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::TrackNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::TrackNode*) (soff))->~G__TRATcLcLTrackNode();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_819_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackNode* dest = (RAT::TrackNode*) G__getstructoffset();
   *dest = *(RAT::TrackNode*) libp->para[0].ref;
   const RAT::TrackNode& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::TrackNode*,allocator<RAT::TrackNode*> > */
static int G__RAT_Dict_jailbreak_821_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::reference obj = ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->at((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_reference obj = ((const vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->at((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator* pobj;
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator xobj = ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator* pobj;
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator xobj = ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::reverse_iterator* pobj;
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::reverse_iterator xobj = ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::reverse_iterator* pobj;
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::reverse_iterator xobj = ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->resize((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->resize((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type) G__int(libp->para[0]), (RAT::TrackNode*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::reference obj = ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->operator[]((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_reference obj = ((const vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->operator[]((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >;
     } else {
       p = new((void*) gvp) vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::TrackNode**) libp->para[1].ref : *(RAT::TrackNode**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::TrackNode**) libp->para[1].ref : *(RAT::TrackNode**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >(*(vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >(*(vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >(*((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >(*((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >& obj = ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->operator=(*(vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->reserve((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::TrackNode*& obj = ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::TrackNode*& obj = ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(RAT::TrackNode**) libp->para[0].ref : *(RAT::TrackNode**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->swap(*(vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator* pobj;
         vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator xobj = ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->insert(*((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(RAT::TrackNode**) libp->para[1].ref : *(RAT::TrackNode**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->insert(*((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->insert(*((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator*) G__int(libp->para[0])), (vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(RAT::TrackNode**) libp->para[2].ref : *(RAT::TrackNode**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->erase(*((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->erase(*((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_821_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::TrackNode*,allocator<RAT::TrackNode*> > G__TvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR;
static int G__RAT_Dict_jailbreak_821_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) (soff+(sizeof(vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >)*i)))->~G__TvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*) (soff))->~G__TvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::TrackCursor */
static int G__RAT_Dict_jailbreak_826_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackCursor* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackCursor((RAT::TrackNode*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RAT::TrackCursor((RAT::TrackNode*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackCursor((RAT::TrackNode*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) RAT::TrackCursor((RAT::TrackNode*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackCursor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RAT::TrackCursor*) G__getstructoffset())->GetVerbose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((RAT::TrackCursor*) G__getstructoffset())->SetVerbose((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((RAT::TrackCursor*) G__getstructoffset())->SetVerbose();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->TrackStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Prev());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Here());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->TrackEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::TrackCursor*) G__getstructoffset())->StepCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Step((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::TrackCursor*) G__getstructoffset())->ChildCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Child((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Child());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::TrackCursor*) G__getstructoffset())->TrackChildCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->TrackChild((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Parent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::TrackCursor*) G__getstructoffset())->TrackLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::TrackCursor*) G__getstructoffset())->IsTrackStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::TrackCursor*) G__getstructoffset())->IsTrackEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackCursor*) G__getstructoffset())->Go((RAT::TrackNode*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoTrackStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoPrev());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoNext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoTrackEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoStep((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoChild((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoChild());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoTrackChild((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const RAT::TrackCursor*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const RAT::TrackCursor*) G__getstructoffset())->PrintTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = RAT::TrackCursor::PrintTrackIDs((RAT::TrackNode*) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = RAT::TrackCursor::Print((RAT::TrackNode*) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = RAT::TrackCursor::PrintTrack((RAT::TrackNode*) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->FindNextTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->FindNextTrackNoDescend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->FindNextTrack((RAT::TrackTest*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_826_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->FindNextParticle(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_826_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::TrackCursor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::TrackCursor(*(RAT::TrackCursor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackCursor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::TrackCursor G__TRATcLcLTrackCursor;
static int G__RAT_Dict_jailbreak_826_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::TrackCursor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::TrackCursor*) (soff+(sizeof(RAT::TrackCursor)*i)))->~G__TRATcLcLTrackCursor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::TrackCursor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::TrackCursor*) (soff))->~G__TRATcLcLTrackCursor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_826_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackCursor* dest = (RAT::TrackCursor*) G__getstructoffset();
   *dest = *(RAT::TrackCursor*) libp->para[0].ref;
   const RAT::TrackCursor& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::TrackNav */
static int G__RAT_Dict_jailbreak_828_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackNav* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackNav((RAT::DS::Root*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RAT::TrackNav((RAT::DS::Root*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackNav((RAT::DS::Root*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) RAT::TrackNav((RAT::DS::Root*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNav));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_828_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackNav* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackNav((RAT::DS::MC*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RAT::TrackNav((RAT::DS::MC*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackNav((RAT::DS::MC*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) RAT::TrackNav((RAT::DS::MC*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNav));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_828_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((RAT::TrackNav*) G__getstructoffset())->Load((RAT::DS::MC*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RAT::TrackNav*) G__getstructoffset())->Load((RAT::DS::MC*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_828_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNav*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_828_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackNav*) G__getstructoffset())->Head());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_828_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         RAT::TrackCursor* pobj;
         RAT::TrackCursor xobj = ((RAT::TrackNav*) G__getstructoffset())->Cursor((bool) G__int(libp->para[0]));
         pobj = new RAT::TrackCursor(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         RAT::TrackCursor* pobj;
         RAT::TrackCursor xobj = ((RAT::TrackNav*) G__getstructoffset())->Cursor();
         pobj = new RAT::TrackCursor(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_828_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackNav*) G__getstructoffset())->FindID((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_828_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((RAT::TrackNav*) G__getstructoffset())->FindParticle(*(string*) libp->para[0].ref, (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((RAT::TrackNav*) G__getstructoffset())->FindParticle(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_828_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::TrackNav* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::TrackNav(*(RAT::TrackNav*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNav));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::TrackNav G__TRATcLcLTrackNav;
static int G__RAT_Dict_jailbreak_828_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::TrackNav*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::TrackNav*) (soff+(sizeof(RAT::TrackNav)*i)))->~G__TRATcLcLTrackNav();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::TrackNav*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::TrackNav*) (soff))->~G__TRATcLcLTrackNav();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_828_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackNav* dest = (RAT::TrackNav*) G__getstructoffset();
   *dest = *(RAT::TrackNav*) libp->para[0].ref;
   const RAT::TrackNav& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::HTTPDownloader */
static int G__RAT_Dict_jailbreak_854_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::HTTPDownloader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::HTTPDownloader[n];
     } else {
       p = new((void*) gvp) RAT::HTTPDownloader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::HTTPDownloader;
     } else {
       p = new((void*) gvp) RAT::HTTPDownloader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLHTTPDownloader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_854_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::HTTPDownloader*) G__getstructoffset())->Disconnect();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_854_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((RAT::HTTPDownloader*) G__getstructoffset())->Fetch(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_854_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::HTTPDownloader*) G__getstructoffset())->SetCurlOpts();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::HTTPDownloader G__TRATcLcLHTTPDownloader;
static int G__RAT_Dict_jailbreak_854_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::HTTPDownloader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::HTTPDownloader*) (soff+(sizeof(RAT::HTTPDownloader)*i)))->~G__TRATcLcLHTTPDownloader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::HTTPDownloader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::HTTPDownloader*) (soff))->~G__TRATcLcLHTTPDownloader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DBFieldCallback */
static int G__RAT_Dict_jailbreak_855_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((RAT::DBFieldCallback*) G__getstructoffset())->FetchIArray(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_855_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((RAT::DBFieldCallback*) G__getstructoffset())->FetchDArray(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DBFieldCallback G__TRATcLcLDBFieldCallback;
static int G__RAT_Dict_jailbreak_855_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DBFieldCallback*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DBFieldCallback*) (soff+(sizeof(RAT::DBFieldCallback)*i)))->~G__TRATcLcLDBFieldCallback();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DBFieldCallback*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DBFieldCallback*) (soff))->~G__TRATcLcLDBFieldCallback();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_855_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DBFieldCallback* dest = (RAT::DBFieldCallback*) G__getstructoffset();
   *dest = *(RAT::DBFieldCallback*) libp->para[0].ref;
   const RAT::DBFieldCallback& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DBTable */
static int G__RAT_Dict_jailbreak_883_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DBTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DBTable[n];
     } else {
       p = new((void*) gvp) RAT::DBTable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DBTable;
     } else {
       p = new((void*) gvp) RAT::DBTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DBTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RAT::DBTable(*(json::Value*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) RAT::DBTable(*(json::Value*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DBTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DBTable(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) RAT::DBTable(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DBTable(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) RAT::DBTable(*((string*) G__int(libp->para[0])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DBTable*) G__getstructoffset())->GetName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DBTable*) G__getstructoffset())->SetName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DBTable*) G__getstructoffset())->GetIndex();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DBTable*) G__getstructoffset())->SetIndex(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DBTable*) G__getstructoffset())->GetRunBegin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DBTable*) G__getstructoffset())->GetRunEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DBTable*) G__getstructoffset())->IsUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DBTable*) G__getstructoffset())->IsDefault());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RAT::DBTable*) G__getstructoffset())->IsValidRun((const int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DBTable*) G__getstructoffset())->SetRunRange((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DBTable*) G__getstructoffset())->SetUser();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DBTable*) G__getstructoffset())->SetDefault();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DBTable*) G__getstructoffset())->GetFieldType(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const RAT::DBTable*) G__getstructoffset())->GetFieldList();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DBTable*) G__getstructoffset())->GetI(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::DBTable*) G__getstructoffset())->GetD(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DBTable*) G__getstructoffset())->GetS(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DBTable*) G__getstructoffset())->GetZ(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const RAT::DBTable*) G__getstructoffset())->GetIArray(*(string*) libp->para[0].ref);
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>* pobj;
         const vector<double> xobj = ((const RAT::DBTable*) G__getstructoffset())->GetDArray(*(string*) libp->para[0].ref);
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const RAT::DBTable*) G__getstructoffset())->GetSArray(*(string*) libp->para[0].ref);
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<bool>* pobj;
         const vector<bool> xobj = ((const RAT::DBTable*) G__getstructoffset())->GetZArray(*(string*) libp->para[0].ref);
         pobj = new vector<bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const json::Value* pobj;
         const json::Value xobj = ((const RAT::DBTable*) G__getstructoffset())->GetJSON(*(string*) libp->para[0].ref);
         pobj = new json::Value(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DBTable*) G__getstructoffset())->SetIArrayDeferred(*((string*) G__int(libp->para[0])), (RAT::DBFieldCallback*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DBTable*) G__getstructoffset())->SetDArrayDeferred(*((string*) G__int(libp->para[0])), (RAT::DBFieldCallback*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DBTable*) G__getstructoffset())->Get<int>(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::DBTable*) G__getstructoffset())->Get<double>(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_883_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DBTable*) G__getstructoffset())->Get<bool>(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_883_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DBTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DBTable(*(RAT::DBTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DBTable G__TRATcLcLDBTable;
static int G__RAT_Dict_jailbreak_883_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DBTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DBTable*) (soff+(sizeof(RAT::DBTable)*i)))->~G__TRATcLcLDBTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DBTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DBTable*) (soff))->~G__TRATcLcLDBTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_883_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DBTable* dest = (RAT::DBTable*) G__getstructoffset();
   *dest = *(RAT::DBTable*) libp->para[0].ref;
   const RAT::DBTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DB */
static int G__RAT_Dict_jailbreak_904_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DB::Get());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) RAT::DB::ParseTableName(*((string*) G__int(libp->para[0])), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DBTable*>* pobj;
         vector<RAT::DBTable*> xobj = RAT::DB::ReadRATDBFile(*(string*) libp->para[0].ref);
         pobj = new vector<RAT::DBTable*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DB* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DB[n];
     } else {
       p = new((void*) gvp) RAT::DB[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DB;
     } else {
       p = new((void*) gvp) RAT::DB;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((RAT::DB*) G__getstructoffset())->Load(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((RAT::DB*) G__getstructoffset())->Load(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RAT::DB*) G__getstructoffset())->LoadTable((RAT::DBTable*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RAT::DB*) G__getstructoffset())->LoadFile(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((RAT::DB*) G__getstructoffset())->LoadAll(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 105, (long) ((RAT::DB*) G__getstructoffset())->LoadAll(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RAT::DB*) G__getstructoffset())->LoadDefaults());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DB*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DB*) G__getstructoffset())->SetServer(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DB*) G__getstructoffset())->SetDefaultRun((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DB*) G__getstructoffset())->GetDefaultRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         RAT::DBLinkPtr* pobj;
         RAT::DBLinkPtr xobj = ((RAT::DB*) G__getstructoffset())->GetLink(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
         pobj = new RAT::DBLinkPtr(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         RAT::DBLinkPtr* pobj;
         RAT::DBLinkPtr xobj = ((RAT::DB*) G__getstructoffset())->GetLink(*((string*) G__int(libp->para[0])));
         pobj = new RAT::DBLinkPtr(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DBLinkPtr* pobj;
         RAT::DBLinkPtr xobj = ((RAT::DB*) G__getstructoffset())->GetLink(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
         pobj = new RAT::DBLinkPtr(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DBLinkGroup* pobj;
         RAT::DBLinkGroup xobj = ((RAT::DB*) G__getstructoffset())->GetLinkGroup(*((string*) G__int(libp->para[0])));
         pobj = new RAT::DBLinkGroup(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DB*) G__getstructoffset())->GetUserTable(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DB*) G__getstructoffset())->GetRunTable(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DB*) G__getstructoffset())->GetDefaultTable(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DB*) G__getstructoffset())->RemoveLink((RAT::DBLink*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RAT::DB*) G__getstructoffset())->NumLinks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DB*) G__getstructoffset())->FindTable(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_904_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DB*) G__getstructoffset())->FindOrCreateTable(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DB G__TRATcLcLDB;
static int G__RAT_Dict_jailbreak_904_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DB*) (soff+(sizeof(RAT::DB)*i)))->~G__TRATcLcLDB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DB*) (soff))->~G__TRATcLcLDB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DBLink */
static int G__RAT_Dict_jailbreak_905_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DBLink* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DBLink(
(RAT::DB*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) RAT::DBLink(
(RAT::DB*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DBLink(
(RAT::DB*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) RAT::DBLink(
(RAT::DB*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DBLink*) G__getstructoffset())->GetName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DBLink*) G__getstructoffset())->GetIndex();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DBLink*) G__getstructoffset())->SetCurrentRun((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RAT::DBLink*) G__getstructoffset())->GetI(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RAT::DBLink*) G__getstructoffset())->GetD(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((RAT::DBLink*) G__getstructoffset())->GetS(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RAT::DBLink*) G__getstructoffset())->GetZ(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((RAT::DBLink*) G__getstructoffset())->GetIArray(*(string*) libp->para[0].ref);
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float>* pobj;
         vector<float> xobj = ((RAT::DBLink*) G__getstructoffset())->GetFArrayFromD(*(string*) libp->para[0].ref);
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float>* pobj;
         vector<float> xobj = ((RAT::DBLink*) G__getstructoffset())->DArrayToFArray(*(vector<double>*) libp->para[0].ref);
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((RAT::DBLink*) G__getstructoffset())->GetDArray(*(string*) libp->para[0].ref);
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((RAT::DBLink*) G__getstructoffset())->GetSArray(*(string*) libp->para[0].ref);
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<bool>* pobj;
         vector<bool> xobj = ((RAT::DBLink*) G__getstructoffset())->GetZArray(*(string*) libp->para[0].ref);
         pobj = new vector<bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         json::Value* pobj;
         json::Value xobj = ((RAT::DBLink*) G__getstructoffset())->GetJSON(*(string*) libp->para[0].ref);
         pobj = new json::Value(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_905_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DBLink*) G__getstructoffset())->Unlink();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_905_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DBLink* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DBLink(*(RAT::DBLink*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DBLink G__TRATcLcLDBLink;
static int G__RAT_Dict_jailbreak_905_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DBLink*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DBLink*) (soff+(sizeof(RAT::DBLink)*i)))->~G__TRATcLcLDBLink();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DBLink*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DBLink*) (soff))->~G__TRATcLcLDBLink();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_905_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DBLink* dest = (RAT::DBLink*) G__getstructoffset();
   *dest = *(RAT::DBLink*) libp->para[0].ref;
   const RAT::DBLink& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* simple_ptr_nocopy<RAT::DBLink> */
static int G__RAT_Dict_jailbreak_917_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   simple_ptr_nocopy<RAT::DBLink>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new simple_ptr_nocopy<RAT::DBLink>[n];
     } else {
       p = new((void*) gvp) simple_ptr_nocopy<RAT::DBLink>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new simple_ptr_nocopy<RAT::DBLink>;
     } else {
       p = new((void*) gvp) simple_ptr_nocopy<RAT::DBLink>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   simple_ptr_nocopy<RAT::DBLink>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new simple_ptr_nocopy<RAT::DBLink>(*(simple_ptr_nocopy<RAT::DBLink>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) simple_ptr_nocopy<RAT::DBLink>(*(simple_ptr_nocopy<RAT::DBLink>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const simple_ptr_nocopy<RAT::DBLink>& obj = ((simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->operator=(*(simple_ptr_nocopy<RAT::DBLink>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   simple_ptr_nocopy<RAT::DBLink>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new simple_ptr_nocopy<RAT::DBLink>((RAT::DBLink*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) simple_ptr_nocopy<RAT::DBLink>((RAT::DBLink*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const simple_ptr_nocopy<RAT::DBLink>& obj = ((simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->operator=((RAT::DBLink*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->operator bool());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->operator!());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->present());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->null());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DBLink& obj = ((simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DBLink& obj = ((const simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DBLink& obj = ((simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->value();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DBLink& obj = ((const simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->value();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->set((RAT::DBLink*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->set();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->pointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->pointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->aliases(*(simple_ptr_nocopy<RAT::DBLink>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->alias_count());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_917_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((simple_ptr_nocopy<RAT::DBLink>*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef simple_ptr_nocopy<RAT::DBLink> G__Tsimple_ptr_nocopylERATcLcLDBLinkgR;
static int G__RAT_Dict_jailbreak_917_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (simple_ptr_nocopy<RAT::DBLink>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((simple_ptr_nocopy<RAT::DBLink>*) (soff+(sizeof(simple_ptr_nocopy<RAT::DBLink>)*i)))->~G__Tsimple_ptr_nocopylERATcLcLDBLinkgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (simple_ptr_nocopy<RAT::DBLink>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((simple_ptr_nocopy<RAT::DBLink>*) (soff))->~G__Tsimple_ptr_nocopylERATcLcLDBLinkgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DBTable*,allocator<RAT::DBTable*> > */
static int G__RAT_Dict_jailbreak_926_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::reference obj = ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->at((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_reference obj = ((const vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->at((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator* pobj;
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator xobj = ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator* pobj;
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator xobj = ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::reverse_iterator* pobj;
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::reverse_iterator xobj = ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DBTable*,allocator<RAT::DBTable*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::reverse_iterator* pobj;
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::reverse_iterator xobj = ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DBTable*,allocator<RAT::DBTable*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->resize((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->resize((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type) G__int(libp->para[0]), (RAT::DBTable*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::reference obj = ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->operator[]((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_reference obj = ((const vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->operator[]((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DBTable*,allocator<RAT::DBTable*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DBTable*,allocator<RAT::DBTable*> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DBTable*,allocator<RAT::DBTable*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DBTable*,allocator<RAT::DBTable*> >;
     } else {
       p = new((void*) gvp) vector<RAT::DBTable*,allocator<RAT::DBTable*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DBTable*,allocator<RAT::DBTable*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DBTable*,allocator<RAT::DBTable*> >((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DBTable**) libp->para[1].ref : *(RAT::DBTable**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<RAT::DBTable*,allocator<RAT::DBTable*> >((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DBTable**) libp->para[1].ref : *(RAT::DBTable**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DBTable*,allocator<RAT::DBTable*> >((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DBTable*,allocator<RAT::DBTable*> >((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DBTable*,allocator<RAT::DBTable*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DBTable*,allocator<RAT::DBTable*> >(*(vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DBTable*,allocator<RAT::DBTable*> >(*(vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DBTable*,allocator<RAT::DBTable*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DBTable*,allocator<RAT::DBTable*> >(*((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DBTable*,allocator<RAT::DBTable*> >(*((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DBTable*,allocator<RAT::DBTable*> >& obj = ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->operator=(*(vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->reserve((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DBTable*& obj = ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DBTable*& obj = ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(RAT::DBTable**) libp->para[0].ref : *(RAT::DBTable**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->swap(*(vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator* pobj;
         vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator xobj = ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->insert(*((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(RAT::DBTable**) libp->para[1].ref : *(RAT::DBTable**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->insert(*((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->insert(*((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator*) G__int(libp->para[0])), (vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(RAT::DBTable**) libp->para[2].ref : *(RAT::DBTable**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->erase(*((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->erase(*((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_926_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DBTable*,allocator<RAT::DBTable*> > G__TvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR;
static int G__RAT_Dict_jailbreak_926_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) (soff+(sizeof(vector<RAT::DBTable*,allocator<RAT::DBTable*> >)*i)))->~G__TvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DBTable*,allocator<RAT::DBTable*> >*) (soff))->~G__TvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DBTextLoader */
static int G__RAT_Dict_jailbreak_969_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DBTable*>* pobj;
         vector<RAT::DBTable*> xobj = RAT::DBTextLoader::parse(*((string*) G__int(libp->para[0])));
         pobj = new vector<RAT::DBTable*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__RAT_Dict_jailbreak_969_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DBTextLoader *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DBTextLoader[n];
     } else {
       p = new((void*) gvp) RAT::DBTextLoader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DBTextLoader;
     } else {
       p = new((void*) gvp) RAT::DBTextLoader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTextLoader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_969_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DBTextLoader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DBTextLoader(*(RAT::DBTextLoader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTextLoader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DBTextLoader G__TRATcLcLDBTextLoader;
static int G__RAT_Dict_jailbreak_969_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DBTextLoader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DBTextLoader*) (soff+(sizeof(RAT::DBTextLoader)*i)))->~G__TRATcLcLDBTextLoader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DBTextLoader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DBTextLoader*) (soff))->~G__TRATcLcLDBTextLoader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_969_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DBTextLoader* dest = (RAT::DBTextLoader*) G__getstructoffset();
   const RAT::DBTextLoader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DBJsonLoader */
static int G__RAT_Dict_jailbreak_970_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DBTable*>* pobj;
         vector<RAT::DBTable*> xobj = RAT::DBJsonLoader::parse(*(string*) libp->para[0].ref);
         pobj = new vector<RAT::DBTable*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_970_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DBTable*>* pobj;
         vector<RAT::DBTable*> xobj = RAT::DBJsonLoader::parseString(*(string*) libp->para[0].ref);
         pobj = new vector<RAT::DBTable*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_970_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DBJsonLoader::convertTable(*(json::Value*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__RAT_Dict_jailbreak_970_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DBJsonLoader *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DBJsonLoader[n];
     } else {
       p = new((void*) gvp) RAT::DBJsonLoader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DBJsonLoader;
     } else {
       p = new((void*) gvp) RAT::DBJsonLoader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBJsonLoader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_970_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DBJsonLoader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DBJsonLoader(*(RAT::DBJsonLoader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBJsonLoader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DBJsonLoader G__TRATcLcLDBJsonLoader;
static int G__RAT_Dict_jailbreak_970_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DBJsonLoader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DBJsonLoader*) (soff+(sizeof(RAT::DBJsonLoader)*i)))->~G__TRATcLcLDBJsonLoader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DBJsonLoader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DBJsonLoader*) (soff))->~G__TRATcLcLDBJsonLoader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RAT_Dict_jailbreak_970_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DBJsonLoader* dest = (RAT::DBJsonLoader*) G__getstructoffset();
   const RAT::DBJsonLoader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::ObjInt */
static int G__RAT_Dict_jailbreak_971_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::ObjInt* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::ObjInt[n];
     } else {
       p = new((void*) gvp) RAT::ObjInt[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::ObjInt;
     } else {
       p = new((void*) gvp) RAT::ObjInt;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjInt));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::ObjInt* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RAT::ObjInt((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) RAT::ObjInt((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjInt));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::ObjInt* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RAT::ObjInt(*(RAT::ObjInt*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) RAT::ObjInt(*(RAT::ObjInt*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjInt));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::ObjInt& obj = ((RAT::ObjInt*) G__getstructoffset())->operator=(*(RAT::ObjInt*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::ObjInt*) G__getstructoffset())->GetInt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::ObjInt*) G__getstructoffset())->SetInt((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::ObjInt& obj = ((RAT::ObjInt*) G__getstructoffset())->operator=(*(int*) G__Intref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::ObjInt*) G__getstructoffset())->operator int());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::ObjInt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::ObjInt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::ObjInt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::ObjInt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::ObjInt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::ObjInt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::ObjInt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::ObjInt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_971_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::ObjInt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::ObjInt G__TRATcLcLObjInt;
static int G__RAT_Dict_jailbreak_971_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::ObjInt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::ObjInt*) (soff+(sizeof(RAT::ObjInt)*i)))->~G__TRATcLcLObjInt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::ObjInt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::ObjInt*) (soff))->~G__TRATcLcLObjInt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::ObjDbl */
static int G__RAT_Dict_jailbreak_972_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::ObjDbl* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::ObjDbl[n];
     } else {
       p = new((void*) gvp) RAT::ObjDbl[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::ObjDbl;
     } else {
       p = new((void*) gvp) RAT::ObjDbl;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjDbl));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::ObjDbl* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RAT::ObjDbl((double) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) RAT::ObjDbl((double) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjDbl));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::ObjDbl* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RAT::ObjDbl(*(RAT::ObjDbl*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) RAT::ObjDbl(*(RAT::ObjDbl*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjDbl));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::ObjDbl& obj = ((RAT::ObjDbl*) G__getstructoffset())->operator=(*(RAT::ObjDbl*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::ObjDbl*) G__getstructoffset())->GetDbl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::ObjDbl*) G__getstructoffset())->SetDbl((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::ObjDbl& obj = ((RAT::ObjDbl*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::ObjDbl*) G__getstructoffset())->operator double());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::ObjDbl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::ObjDbl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::ObjDbl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::ObjDbl::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::ObjDbl*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::ObjDbl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::ObjDbl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::ObjDbl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_972_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::ObjDbl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::ObjDbl G__TRATcLcLObjDbl;
static int G__RAT_Dict_jailbreak_972_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::ObjDbl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::ObjDbl*) (soff+(sizeof(RAT::ObjDbl)*i)))->~G__TRATcLcLObjDbl();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::ObjDbl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::ObjDbl*) (soff))->~G__TRATcLcLObjDbl();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<string,string> */
static int G__RAT_Dict_jailbreak_973_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<string,string>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<string,string>[n];
     } else {
       p = new((void*) gvp) pair<string,string>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<string,string>;
     } else {
       p = new((void*) gvp) pair<string,string>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOstringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_973_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<string,string>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<string,string>(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) pair<string,string>(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOstringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RAT_Dict_jailbreak_973_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<string,string>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<string,string>(*(pair<string,string>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOstringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<string,string> G__TpairlEstringcOstringgR;
static int G__RAT_Dict_jailbreak_973_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<string,string>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<string,string>*) (soff+(sizeof(pair<string,string>)*i)))->~G__TpairlEstringcOstringgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<string,string>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<string,string>*) (soff))->~G__TpairlEstringcOstringgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > > */
static int G__RAT_Dict_jailbreak_976_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >[n];
     } else {
       p = new((void*) gvp) map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >;
     } else {
       p = new((void*) gvp) map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >(*((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[0])), *((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >(*((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[0])), *((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >(*((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >(*((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >(*(map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >(*(map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >& obj = ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->operator=(*(map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator* pobj;
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator xobj = ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->begin();
         pobj = new map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator* pobj;
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator xobj = ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->end();
         pobj = new map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator* pobj;
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator xobj = ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->rbegin();
         pobj = new map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator* pobj;
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator xobj = ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->rend();
         pobj = new map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >& obj = ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->operator[](*(int*) G__Intref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator,bool>* pobj;
         pair<map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator,bool> xobj = ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->insert(*(map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator* pobj;
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator xobj = ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->insert(*((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[0])), *(map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::value_type*) libp->para[1].ref);
         pobj = new map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->insert(*((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[0])), *((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->insert(*((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->erase(*((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->erase(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->erase(*((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[0])), *((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->swap(*(map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator* pobj;
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator xobj = ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->find(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->count(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator* pobj;
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator xobj = ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->lower_bound(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_976_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator* pobj;
         map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator xobj = ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) G__getstructoffset())->upper_bound(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > > G__TmaplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR;
static int G__RAT_Dict_jailbreak_976_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) (soff+(sizeof(map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >)*i)))->~G__TmaplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*) (soff))->~G__TmaplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::Root,allocator<RAT::DS::Root> > */
static int G__RAT_Dict_jailbreak_982_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::reference obj = ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->at((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_reference obj = ((const vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->at((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator* pobj;
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator xobj = ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator* pobj;
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator xobj = ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::reverse_iterator* pobj;
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::reverse_iterator xobj = ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::Root,allocator<RAT::DS::Root> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::reverse_iterator* pobj;
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::reverse_iterator xobj = ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::Root,allocator<RAT::DS::Root> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->resize((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->resize((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type) G__int(libp->para[0]), *((RAT::DS::Root*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::reference obj = ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->operator[]((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_reference obj = ((const vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->operator[]((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::Root,allocator<RAT::DS::Root> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::Root,allocator<RAT::DS::Root> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::Root,allocator<RAT::DS::Root> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::Root,allocator<RAT::DS::Root> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::Root,allocator<RAT::DS::Root> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::Root,allocator<RAT::DS::Root> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::Root,allocator<RAT::DS::Root> >((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type) G__int(libp->para[0]), *(RAT::DS::Root*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<RAT::DS::Root,allocator<RAT::DS::Root> >((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type) G__int(libp->para[0]), *(RAT::DS::Root*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::Root,allocator<RAT::DS::Root> >((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::Root,allocator<RAT::DS::Root> >((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::Root,allocator<RAT::DS::Root> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::Root,allocator<RAT::DS::Root> >(*(vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::Root,allocator<RAT::DS::Root> >(*(vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::Root,allocator<RAT::DS::Root> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::Root,allocator<RAT::DS::Root> >(*((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::Root,allocator<RAT::DS::Root> >(*((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::Root,allocator<RAT::DS::Root> >& obj = ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->reserve((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::Root& obj = ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::DS::Root& obj = ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->push_back(*(RAT::DS::Root*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->swap(*(vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator* pobj;
         vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator xobj = ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->insert(*((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator*) G__int(libp->para[0])), *(RAT::DS::Root*) libp->para[1].ref);
         pobj = new vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->insert(*((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->insert(*((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type) G__int(libp->para[1])
, *(RAT::DS::Root*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->erase(*((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->erase(*((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_982_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::Root,allocator<RAT::DS::Root> > G__TvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR;
static int G__RAT_Dict_jailbreak_982_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) (soff+(sizeof(vector<RAT::DS::Root,allocator<RAT::DS::Root> >)*i)))->~G__TvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::Root,allocator<RAT::DS::Root> >*) (soff))->~G__TvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::EV*,allocator<RAT::DS::EV*> > */
static int G__RAT_Dict_jailbreak_986_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::reference obj = ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->at((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_reference obj = ((const vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->at((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator* pobj;
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator xobj = ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator* pobj;
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator xobj = ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::reverse_iterator* pobj;
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::reverse_iterator xobj = ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::reverse_iterator* pobj;
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::reverse_iterator xobj = ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->resize((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->resize((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type) G__int(libp->para[0]), (RAT::DS::EV*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::reference obj = ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_reference obj = ((const vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::EV**) libp->para[1].ref : *(RAT::DS::EV**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::EV**) libp->para[1].ref : *(RAT::DS::EV**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >(*(vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >(*(vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >(*((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >(*((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >& obj = ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->reserve((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::EV*& obj = ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::EV*& obj = ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(RAT::DS::EV**) libp->para[0].ref : *(RAT::DS::EV**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->swap(*(vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator* pobj;
         vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator xobj = ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(RAT::DS::EV**) libp->para[1].ref : *(RAT::DS::EV**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(RAT::DS::EV**) libp->para[2].ref : *(RAT::DS::EV**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_986_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::EV*,allocator<RAT::DS::EV*> > G__TvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR;
static int G__RAT_Dict_jailbreak_986_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) (soff+(sizeof(vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >)*i)))->~G__TvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*) (soff))->~G__TvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> > */
static int G__RAT_Dict_jailbreak_990_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::reference obj = ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->at((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_reference obj = ((const vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->at((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator* pobj;
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator xobj = ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator* pobj;
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator xobj = ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::reverse_iterator* pobj;
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::reverse_iterator xobj = ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::reverse_iterator* pobj;
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::reverse_iterator xobj = ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->resize((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->resize((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type) G__int(libp->para[0]), (RAT::DS::PMT*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::reference obj = ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_reference obj = ((const vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::PMT**) libp->para[1].ref : *(RAT::DS::PMT**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::PMT**) libp->para[1].ref : *(RAT::DS::PMT**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >(*(vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >(*(vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >(*((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >(*((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >& obj = ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->reserve((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::PMT*& obj = ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::PMT*& obj = ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(RAT::DS::PMT**) libp->para[0].ref : *(RAT::DS::PMT**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->swap(*(vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator* pobj;
         vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator xobj = ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(RAT::DS::PMT**) libp->para[1].ref : *(RAT::DS::PMT**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(RAT::DS::PMT**) libp->para[2].ref : *(RAT::DS::PMT**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_990_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> > G__TvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR;
static int G__RAT_Dict_jailbreak_990_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) (soff+(sizeof(vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >)*i)))->~G__TvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*) (soff))->~G__TvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> > */
static int G__RAT_Dict_jailbreak_994_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::reference obj = ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->at((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_reference obj = ((const vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->at((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator* pobj;
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator xobj = ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator* pobj;
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator xobj = ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::reverse_iterator* pobj;
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::reverse_iterator xobj = ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::reverse_iterator* pobj;
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::reverse_iterator xobj = ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->resize((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->resize((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type) G__int(libp->para[0]), (RAT::DS::MCParticle*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::reference obj = ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_reference obj = ((const vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::MCParticle**) libp->para[1].ref : *(RAT::DS::MCParticle**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::MCParticle**) libp->para[1].ref : *(RAT::DS::MCParticle**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >(*(vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >(*(vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >(*((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >(*((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >& obj = ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->reserve((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::MCParticle*& obj = ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::MCParticle*& obj = ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(RAT::DS::MCParticle**) libp->para[0].ref : *(RAT::DS::MCParticle**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->swap(*(vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator* pobj;
         vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator xobj = ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(RAT::DS::MCParticle**) libp->para[1].ref : *(RAT::DS::MCParticle**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(RAT::DS::MCParticle**) libp->para[2].ref : *(RAT::DS::MCParticle**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_994_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> > G__TvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR;
static int G__RAT_Dict_jailbreak_994_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) (soff+(sizeof(vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >)*i)))->~G__TvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*) (soff))->~G__TvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> > */
static int G__RAT_Dict_jailbreak_998_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::reference obj = ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->at((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_reference obj = ((const vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->at((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator* pobj;
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator xobj = ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator* pobj;
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator xobj = ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::reverse_iterator* pobj;
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::reverse_iterator xobj = ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::reverse_iterator* pobj;
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::reverse_iterator xobj = ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->resize((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->resize((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type) G__int(libp->para[0]), (RAT::DS::MCTrack*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::reference obj = ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_reference obj = ((const vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::MCTrack**) libp->para[1].ref : *(RAT::DS::MCTrack**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::MCTrack**) libp->para[1].ref : *(RAT::DS::MCTrack**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >(*(vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >(*(vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >(*((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >(*((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >& obj = ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->reserve((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::MCTrack*& obj = ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::MCTrack*& obj = ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(RAT::DS::MCTrack**) libp->para[0].ref : *(RAT::DS::MCTrack**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->swap(*(vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator* pobj;
         vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator xobj = ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(RAT::DS::MCTrack**) libp->para[1].ref : *(RAT::DS::MCTrack**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(RAT::DS::MCTrack**) libp->para[2].ref : *(RAT::DS::MCTrack**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_998_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> > G__TvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR;
static int G__RAT_Dict_jailbreak_998_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) (soff+(sizeof(vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >)*i)))->~G__TvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*) (soff))->~G__TvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> > */
static int G__RAT_Dict_jailbreak_1002_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::reference obj = ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->at((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_reference obj = ((const vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->at((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator* pobj;
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator xobj = ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator* pobj;
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator xobj = ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::reverse_iterator* pobj;
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::reverse_iterator xobj = ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::reverse_iterator* pobj;
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::reverse_iterator xobj = ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->resize((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->resize((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type) G__int(libp->para[0]), (RAT::DS::MCPMT*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::reference obj = ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_reference obj = ((const vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::MCPMT**) libp->para[1].ref : *(RAT::DS::MCPMT**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::MCPMT**) libp->para[1].ref : *(RAT::DS::MCPMT**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >(*(vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >(*(vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >(*((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >(*((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >& obj = ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->reserve((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::MCPMT*& obj = ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::MCPMT*& obj = ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(RAT::DS::MCPMT**) libp->para[0].ref : *(RAT::DS::MCPMT**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->swap(*(vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator* pobj;
         vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator xobj = ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(RAT::DS::MCPMT**) libp->para[1].ref : *(RAT::DS::MCPMT**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(RAT::DS::MCPMT**) libp->para[2].ref : *(RAT::DS::MCPMT**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1002_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> > G__TvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR;
static int G__RAT_Dict_jailbreak_1002_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) (soff+(sizeof(vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >)*i)))->~G__TvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*) (soff))->~G__TvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> > */
static int G__RAT_Dict_jailbreak_1006_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::reference obj = ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->at((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_reference obj = ((const vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->at((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator* pobj;
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator xobj = ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator* pobj;
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator xobj = ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::reverse_iterator* pobj;
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::reverse_iterator xobj = ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::reverse_iterator* pobj;
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::reverse_iterator xobj = ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->resize((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->resize((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type) G__int(libp->para[0]), (RAT::DS::MCPhoton*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::reference obj = ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_reference obj = ((const vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::MCPhoton**) libp->para[1].ref : *(RAT::DS::MCPhoton**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::MCPhoton**) libp->para[1].ref : *(RAT::DS::MCPhoton**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >(*(vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >(*(vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >(*((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >(*((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >& obj = ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->reserve((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::MCPhoton*& obj = ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::MCPhoton*& obj = ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(RAT::DS::MCPhoton**) libp->para[0].ref : *(RAT::DS::MCPhoton**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->swap(*(vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator* pobj;
         vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator xobj = ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(RAT::DS::MCPhoton**) libp->para[1].ref : *(RAT::DS::MCPhoton**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(RAT::DS::MCPhoton**) libp->para[2].ref : *(RAT::DS::MCPhoton**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1006_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> > G__TvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR;
static int G__RAT_Dict_jailbreak_1006_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) (soff+(sizeof(vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >)*i)))->~G__TvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*) (soff))->~G__TvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> > */
static int G__RAT_Dict_jailbreak_1010_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::reference obj = ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->at((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_reference obj = ((const vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->at((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator* pobj;
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator xobj = ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->begin();
         pobj = new vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator* pobj;
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator xobj = ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->end();
         pobj = new vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::reverse_iterator* pobj;
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::reverse_iterator xobj = ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::reverse_iterator* pobj;
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::reverse_iterator xobj = ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->rend();
         pobj = new vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->resize((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->resize((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type) G__int(libp->para[0]), (RAT::DS::MCTrackStep*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::reference obj = ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_reference obj = ((const vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->operator[]((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >[n];
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >;
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::MCTrackStep**) libp->para[1].ref : *(RAT::DS::MCTrackStep**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(RAT::DS::MCTrackStep**) libp->para[1].ref : *(RAT::DS::MCTrackStep**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >(*(vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >(*(vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >(*((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >(*((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >& obj = ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->operator=(*(vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->reserve((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::MCTrackStep*& obj = ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         RAT::DS::MCTrackStep*& obj = ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(RAT::DS::MCTrackStep**) libp->para[0].ref : *(RAT::DS::MCTrackStep**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->swap(*(vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator* pobj;
         vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator xobj = ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(RAT::DS::MCTrackStep**) libp->para[1].ref : *(RAT::DS::MCTrackStep**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->insert(*((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator*) G__int(libp->para[0])), (vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(RAT::DS::MCTrackStep**) libp->para[2].ref : *(RAT::DS::MCTrackStep**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->erase(*((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator*) G__int(libp->para[0])), *((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RAT_Dict_jailbreak_1010_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> > G__TvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR;
static int G__RAT_Dict_jailbreak_1010_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) (soff+(sizeof(vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >)*i)))->~G__TvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*) (soff))->~G__TvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* RAT::DS::MCParticle */

/* RAT::DS::MCTrackStep */

/* RAT::DS::MCTrack */

/* vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> > */

/* RAT::DS::MCSummary */

/* RAT::DS::MCPhoton */

/* json::Value */

/* RAT::Log */

/* RAT::DS::MCPMT */

/* vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> > */

/* RAT::DS::MC */

/* vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> > */

/* vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> > */

/* vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> > */

/* RAT::DS::PMT */

/* RAT::DS::PosFit */

/* RAT::DS::Centroid */

/* RAT::DS::PathFit */

/* RAT::DS::EV */

/* vector<RAT::DS::PMT,allocator<RAT::DS::PMT> > */

/* RAT::DS::Calib */

/* RAT::DS::Root */

/* vector<pair<string,int>,allocator<pair<string,int> > > */

/* vector<RAT::DS::MC,allocator<RAT::DS::MC> > */

/* vector<RAT::DS::Calib,allocator<RAT::DS::Calib> > */

/* vector<RAT::DS::EV,allocator<RAT::DS::EV> > */

/* RAT::DS::PMTInfo */

/* vector<TVector3,allocator<TVector3> > */

/* RAT::DS::Run */

/* vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> > */

/* RAT::DS::RunStore */

/* RAT::DSReader */

/* RAT::DSWriter */

/* RAT::TrackNode */

/* vector<RAT::TrackNode*,allocator<RAT::TrackNode*> > */

/* RAT::TrackCursor */

/* RAT::TrackNav */

/* RAT::HTTPDownloader */

/* RAT::DBFieldCallback */

/* RAT::DBTable */

/* RAT::DB */

/* RAT::DBLink */

/* simple_ptr_nocopy<RAT::DBLink> */

/* vector<RAT::DBTable*,allocator<RAT::DBTable*> > */

/* RAT::DBTextLoader */

/* RAT::DBJsonLoader */

/* RAT::ObjInt */

/* RAT::ObjDbl */

/* pair<string,string> */

/* map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > > */

/* vector<RAT::DS::Root,allocator<RAT::DS::Root> > */

/* vector<RAT::DS::EV*,allocator<RAT::DS::EV*> > */

/* vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> > */

/* vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> > */

/* vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> > */

/* vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> > */

/* vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> > */

/* vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRAT_Dict_jailbreak {
 public:
  G__Sizep2memfuncRAT_Dict_jailbreak(): p(&G__Sizep2memfuncRAT_Dict_jailbreak::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRAT_Dict_jailbreak::*p)();
};

size_t G__get_sizep2memfuncRAT_Dict_jailbreak()
{
  G__Sizep2memfuncRAT_Dict_jailbreak a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRAT_Dict_jailbreak() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle))) {
     RAT::DS::MCParticle *G__Lderived;
     G__Lderived=(RAT::DS::MCParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep))) {
     RAT::DS::MCTrackStep *G__Lderived;
     G__Lderived=(RAT::DS::MCTrackStep*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack))) {
     RAT::DS::MCTrack *G__Lderived;
     G__Lderived=(RAT::DS::MCTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCSummary))) {
     RAT::DS::MCSummary *G__Lderived;
     G__Lderived=(RAT::DS::MCSummary*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCSummary),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton))) {
     RAT::DS::MCPhoton *G__Lderived;
     G__Lderived=(RAT::DS::MCPhoton*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT))) {
     RAT::DS::MCPMT *G__Lderived;
     G__Lderived=(RAT::DS::MCPMT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC))) {
     RAT::DS::MC *G__Lderived;
     G__Lderived=(RAT::DS::MC*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT))) {
     RAT::DS::PMT *G__Lderived;
     G__Lderived=(RAT::DS::PMT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid))) {
     RAT::DS::Centroid *G__Lderived;
     G__Lderived=(RAT::DS::Centroid*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RAT::DS::PosFit *G__Lpbase=(RAT::DS::PosFit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPosFit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit))) {
     RAT::DS::PathFit *G__Lderived;
     G__Lderived=(RAT::DS::PathFit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RAT::DS::PosFit *G__Lpbase=(RAT::DS::PosFit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPosFit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV))) {
     RAT::DS::EV *G__Lderived;
     G__Lderived=(RAT::DS::EV*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib))) {
     RAT::DS::Calib *G__Lderived;
     G__Lderived=(RAT::DS::Calib*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot))) {
     RAT::DS::Root *G__Lderived;
     G__Lderived=(RAT::DS::Root*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo))) {
     RAT::DS::PMTInfo *G__Lderived;
     G__Lderived=(RAT::DS::PMTInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun))) {
     RAT::DS::Run *G__Lderived;
     G__Lderived=(RAT::DS::Run*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSReader))) {
     RAT::DSReader *G__Lderived;
     G__Lderived=(RAT::DSReader*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSReader),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSWriter))) {
     RAT::DSWriter *G__Lderived;
     G__Lderived=(RAT::DSWriter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSWriter),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode))) {
     RAT::TrackNode *G__Lderived;
     G__Lderived=(RAT::TrackNode*)0x1000;
     {
       RAT::DS::MCTrackStep *G__Lpbase=(RAT::DS::MCTrackStep*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDB))) {
     RAT::DB *G__Lderived;
     G__Lderived=(RAT::DB*)0x1000;
     {
       RAT::DBFieldCallback *G__Lpbase=(RAT::DBFieldCallback*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDB),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBFieldCallback),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjInt))) {
     RAT::ObjInt *G__Lderived;
     G__Lderived=(RAT::ObjInt*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjInt),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjDbl))) {
     RAT::ObjDbl *G__Lderived;
     G__Lderived=(RAT::ObjDbl*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjDbl),G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRAT_Dict_jailbreak() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCTrackStep>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCTrackStep>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",105,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",105,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEintcOintgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_lesslEintgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_allocatorlEpairlEconstsPintcOintgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,double>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,double>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StringDoubleMap",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<otext>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEotextcOallocatorlEotextgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEotextcOallocatorlEotextgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEotextcOallocatorlEotextgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEotextcOallocatorlEotextgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEotextcOallocatorlEotextgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<itext>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEitextcOallocatorlEitextgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEitextcOallocatorlEitextgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEitextcOallocatorlEitextgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEitextcOallocatorlEitextgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEitextcOallocatorlEitextgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TInteger",105,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_json));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TUInteger",104,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_json));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TReal",100,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_json));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TBool",103,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_json));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TString",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_json));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,Value>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOjsoncLcLValuecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOjsoncLcLValuegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,json::Value>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOjsoncLcLValuecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOjsoncLcLValuegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,json::Value,less<string> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOjsoncLcLValuecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOjsoncLcLValuegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TObject",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOjsoncLcLValuecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOjsoncLcLValuegRsPgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_json));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Value>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEjsoncLcLValuecOallocatorlEjsoncLcLValuegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEjsoncLcLValuecOallocatorlEjsoncLcLValuegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEjsoncLcLValuecOallocatorlEjsoncLcLValuegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEjsoncLcLValuecOallocatorlEjsoncLcLValuegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEjsoncLcLValuecOallocatorlEjsoncLcLValuegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<json::Value>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEjsoncLcLValuecOallocatorlEjsoncLcLValuegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArray",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEjsoncLcLValuecOallocatorlEjsoncLcLValuegRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_json));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,TObject*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOTObjectmUgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,TObject*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOTObjectmUgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<std::string,TObject*> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,TObject*> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,TObject*> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCPhoton>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCPhoton>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCSummary>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCSummary>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCParticle>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCParticle>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCTrack>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCTrack>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCPMT>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCPMT>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PMT>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::PMT>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Centroid>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::Centroid>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PathFit>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::PathFit>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,int>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,int>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<std::string,int> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,int> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,int> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MC>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MC>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Calib>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::Calib>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<EV>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::EV>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVector3>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PMTInfo>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::PMTInfo>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,RunRecord*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,RAT::DS::RunRecord*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,RAT::DS::RunRecord*,less<int> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TrackNode*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::TrackNode*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("unary_function<TrackNode*,bool>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_unary_functionlERATcLcLTrackNodemUcOboolgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RAT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TrackNode*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,RAT::TrackNode*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,RAT::TrackNode*,less<int> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<bool,unsigned>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEboolcOunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<hash<string,RAT::DBTable::FieldType,RAT::pyhash,equal_to<string> >::iterator,bool>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstlpluscLcLhash_iteratorlEstringcORATcLcLDBTablecLcLFieldTypecORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBTablecLcLFieldTypegRsPgRcOboolgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stlplus::hash<std::string,RAT::DBFieldCallback*,pyhash>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stlplus::hash<string,RAT::DBFieldCallback*,pyhash>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("hash_iterator<string,RAT::DBFieldCallback*,RAT::pyhash,equal_to<string>,value_type>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("hash_iterator<string,RAT::DBFieldCallback*,RAT::pyhash,equal_to<string>,std::pair<const string,RAT::DBFieldCallback*> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlplus));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("hash_iterator<string,RAT::DBFieldCallback*,RAT::pyhash,equal_to<string>,const std::pair<const string,RAT::DBFieldCallback*> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOconstsPpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlplus));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("hash_iterator<string,RAT::DBFieldCallback*,RAT::pyhash,equal_to<string>,const std::pair<const string,RAT::DBFieldCallback*> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOconstsPpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlplus));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("hash_iterator<string,RAT::DBFieldCallback*,RAT::pyhash,equal_to<string>,const value_type>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOconstsPpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<iterator,bool>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgRcOboolgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<hash<string,RAT::DBFieldCallback*,RAT::pyhash,equal_to<string> >::iterator,bool>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgRcOboolgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stlplus::hash<string,RAT::DBFieldCallback*,RAT::pyhash>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stlplus::hash<std::string,RAT::DBFieldCallback*,pyhash>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stlplus::hash<string,RAT::DBFieldCallback*,pyhash>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stlplus::hash<string,RAT::DBFieldCallback*,RAT::pyhash>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("simple_ptr_nocopy<DBTable>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBTablegR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RAT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBTableKey,simple_ptr_nocopy<DBTable> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRcOlesslERATcLcLDBTableKeygRcOallocatorlEpairlEconstsPRATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRcOlesslERATcLcLDBTableKeygRcOallocatorlEpairlEconstsPRATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable>,less<RAT::DBTableKey> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRcOlesslERATcLcLDBTableKeygRcOallocatorlEpairlEconstsPRATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("simple_ptr_nocopy<DBLink>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RAT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("DBLinkPtr",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RAT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,DBLinkPtr>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOsimple_ptr_nocopylERATcLcLDBLinkgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOsimple_ptr_nocopylERATcLcLDBLinkgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,DBLinkPtr>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOsimple_ptr_nocopylERATcLcLDBLinkgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOsimple_ptr_nocopylERATcLcLDBLinkgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,simple_ptr_nocopy<RAT::DBLink> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOsimple_ptr_nocopylERATcLcLDBLinkgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOsimple_ptr_nocopylERATcLcLDBLinkgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,simple_ptr_nocopy<RAT::DBLink>,less<string> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOsimple_ptr_nocopylERATcLcLDBLinkgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOsimple_ptr_nocopylERATcLcLDBLinkgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("DBLinkGroup",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOsimple_ptr_nocopylERATcLcLDBLinkgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOsimple_ptr_nocopylERATcLcLDBLinkgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RAT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DBTable*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<RAT::DBLink*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_listlERATcLcLDBLinkmUcOallocatorlERATcLcLDBLinkmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::string>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<string>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<RAT::DBTableKey>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_setlERATcLcLDBTableKeycOlesslERATcLcLDBTableKeygRcOallocatorlERATcLcLDBTableKeygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<RAT::DBTableKey,less<RAT::DBTableKey> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_setlERATcLcLDBTableKeycOlesslERATcLcLDBTableKeygRcOallocatorlERATcLcLDBTableKeygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::pair<RAT::DBTableKey,bool> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_dequelEpairlERATcLcLDBTableKeycOboolgRcOallocatorlEpairlERATcLcLDBTableKeycOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<pair<RAT::DBTableKey,bool> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_dequelEpairlERATcLcLDBTableKeycOboolgRcOallocatorlEpairlERATcLcLDBTableKeycOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<pair<RAT::DBTableKey,bool> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_dequelEpairlERATcLcLDBTableKeycOboolgRcOallocatorlEpairlERATcLcLDBTableKeycOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<RAT::Tokenizer>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_dequelERATcLcLTokenizercOallocatorlERATcLcLTokenizergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<Tokenizer>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stacklERATcLcLTokenizercOdequelERATcLcLTokenizercOallocatorlERATcLcLTokenizergRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<RAT::Tokenizer>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stacklERATcLcLTokenizercOdequelERATcLcLTokenizercOallocatorlERATcLcLTokenizergRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<int> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",105,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEintcOvectorlEintcOallocatorlEintgRsPgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_lesslEintgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_allocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<int,allocator<int> >,less<int> >",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::Root>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::EV*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::PMT*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCParticle*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCTrack*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCPMT*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCPhoton*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCTrackStep*>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep),1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep),257,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* RAT::DS::MCParticle */
static void G__setup_memvarRATcLcLDScLcLMCParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle));
   { RAT::DS::MCParticle *p; p=(RAT::DS::MCParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdgcode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pdgcode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->t)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"t=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ke)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ke=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"pos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"mom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pol)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"pol=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particleName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"particleName=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::MCTrackStep */
static void G__setup_memvarRATcLcLDScLcLMCTrackStep(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep));
   { RAT::DS::MCTrackStep *p; p=(RAT::DS::MCTrackStep*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->length)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"length=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->globalTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"globalTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->localTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"localTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->properTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"properTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ke)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ke=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->endpoint)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"endpoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"mom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->process)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"process=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->volume)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"volume=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::MCTrack */
static void G__setup_memvarRATcLcLDScLcLMCTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack));
   { RAT::DS::MCTrack *p; p=(RAT::DS::MCTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->parentID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"parentID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdgcode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pdgcode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->length)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"length=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particleName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"particleName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->step)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR),G__defined_typename("vector<MCTrackStep>"),-1,1,"step=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> > */
static void G__setup_memvarvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   { vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> > *p; p=(vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::MCSummary */
static void G__setup_memvarRATcLcLDScLcLMCSummary(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCSummary));
   { RAT::DS::MCSummary *p; p=(RAT::DS::MCSummary*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numScintPhoton)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"numScintPhoton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numReemitPhoton)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"numReemitPhoton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->totalScintEdep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"totalScintEdep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->totalScintEdepQuenched)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"totalScintEdepQuenched=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->initialScintTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"initialScintTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energyCentroid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"energyCentroid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energyRMS)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"energyRMS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->opticalCentroid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"opticalCentroid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->opticalRMS)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"opticalRMS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->totalScintCentroid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"totalScintCentroid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energyLoss)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("StringDoubleMap"),-1,1,"energyLoss=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::MCPhoton */
static void G__setup_memvarRATcLcLDScLcLMCPhoton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton));
   { RAT::DS::MCPhoton *p; p=(RAT::DS::MCPhoton*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"hitTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->frontEndTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"frontEndTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lambda)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"lambda=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"pos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"mom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pol)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"pol=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isDarkHit)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"isDarkHit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trackID=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* json::Value */
static void G__setup_memvarjsoncLcLValue(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue));
   { json::Value *p; p=(json::Value*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->refcount)-(long)(p)),72,0,0,-1,G__defined_typename("TUInteger"),-1,1,"refcount=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLType),-1,-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->data)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLTData),G__defined_typename("TData"),-1,1,"data=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::Log */
static void G__setup_memvarRATcLcLLog(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLLog));
   { RAT::Log *p; p=(RAT::Log*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLLogcLcLLevel),-1,-2,1,G__FastAllocString(2048).Format("WARN=%lldLL",(long long)RAT::Log::WARN).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLLogcLcLLevel),-1,-2,1,G__FastAllocString(2048).Format("INFO=%lldLL",(long long)RAT::Log::INFO).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLLogcLcLLevel),-1,-2,1,G__FastAllocString(2048).Format("DETAIL=%lldLL",(long long)RAT::Log::DETAIL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLLogcLcLLevel),-1,-2,1,G__FastAllocString(2048).Format("DEBUG=%lldLL",(long long)RAT::Log::DEBUG).data(),0,(char*)NULL);
   G__memvar_setup((void*)(&RAT::Log::outstreams),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_omtext),-1,-2,1,"outstreams[4]=",0,(char*)NULL);
   G__memvar_setup((void*)(&RAT::Log::filename),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-2,1,"filename=",0,"*< Name of log file. */");
   G__memvar_setup((void*)(&RAT::Log::logfile),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_oftext),-1,-2,1,"logfile=",0,"*< Log file object */");
   G__memvar_setup((void*)(&RAT::Log::logbuffer),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_ostext),-1,-2,1,"logbuffer=",0,"*< In-memory copy of logfile object */");
   G__memvar_setup((void*)(&RAT::Log::use_buffer),103,0,0,-1,-1,-2,1,"use_buffer=",0,"*< Set if log file should be saved in memory */");
   G__memvar_setup((void*)(&RAT::Log::display_level),105,0,0,-1,-1,-2,1,"display_level=",0,"*< Current display verbosity */");
   G__memvar_setup((void*)(&RAT::Log::log_level),105,0,0,-1,-1,-2,1,"log_level=",0,"*< Current log file verbsoity */");
   G__memvar_setup((void*)(&RAT::Log::macro),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-2,1,"macro=",0,"*< Buffer of macro commands run so far */");
   G__memvar_setup((void*)(&RAT::Log::enable_dbtrace),103,0,0,-1,-1,-2,1,"enable_dbtrace=",0,"*< Enable RATDB tracing? */");
   G__memvar_setup((void*)(&RAT::Log::dbtrace),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMap),-1,-2,1,"dbtrace=",0,"*< Record of all accessed RATDB fields */");
   G__memvar_setup((void*)(&RAT::Log::objects),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgR),G__defined_typename("vector<std::pair<std::string,TObject*> >"),-2,1,"objects=",0,"*< Record of logged TObjects */");
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::MCPMT */
static void G__setup_memvarRATcLcLDScLcLMCPMT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT));
   { RAT::DS::MCPMT *p; p=(RAT::DS::MCPMT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->photon)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR),G__defined_typename("vector<MCPhoton>"),-1,1,"photon=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> > */
static void G__setup_memvarvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   { vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> > *p; p=(vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::MC */
static void G__setup_memvarRATcLcLDScLcLMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC));
   { RAT::DS::MC *p; p=(RAT::DS::MC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,-1,-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numPE)-(long)(p)),105,0,0,-1,-1,-1,1,"numPE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numDarkHits)-(long)(p)),105,0,0,-1,-1,-1,1,"numDarkHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->utc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TTimeStamp),-1,-1,1,"utc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->summary)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR),G__defined_typename("vector<MCSummary>"),-1,1,"summary=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR),G__defined_typename("vector<MCParticle>"),-1,1,"particle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->parent)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR),G__defined_typename("vector<MCParticle>"),-1,1,"parent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->track)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR),G__defined_typename("vector<MCTrack>"),-1,1,"track=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmt)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR),G__defined_typename("vector<MCPMT>"),-1,1,"pmt=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> > */
static void G__setup_memvarvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   { vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> > *p; p=(vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> > */
static void G__setup_memvarvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   { vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> > *p; p=(vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> > */
static void G__setup_memvarvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   { vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> > *p; p=(vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::PMT */
static void G__setup_memvarRATcLcLDScLcLPMT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT));
   { RAT::DS::PMT *p; p=(RAT::DS::PMT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"time=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::PosFit */
static void G__setup_memvarRATcLcLDScLcLPosFit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPosFit));
   { RAT::DS::PosFit *p; p=(RAT::DS::PosFit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->posname)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"posname=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"pos=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::Centroid */
static void G__setup_memvarRATcLcLDScLcLCentroid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid));
   { RAT::DS::Centroid *p; p=(RAT::DS::Centroid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->power)-(long)(p)),100,0,0,-1,-1,-1,1,"power=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::PathFit */
static void G__setup_memvarRATcLcLDScLcLPathFit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit));
   { RAT::DS::PathFit *p; p=(RAT::DS::PathFit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->time0)-(long)(p)),100,0,0,-1,-1,-1,1,"time0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pos0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"pos0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dir)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"dir=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::EV */
static void G__setup_memvarRATcLcLDScLcLEV(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV));
   { RAT::DS::EV *p; p=(RAT::DS::EV*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->qTotal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"qTotal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->calibratedTriggerTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"calibratedTriggerTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->deltat)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"deltat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->utc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TTimeStamp),-1,-1,1,"utc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmt)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR),G__defined_typename("vector<PMT>"),-1,1,"pmt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->centroid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR),G__defined_typename("vector<Centroid>"),-1,1,"centroid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pathfit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR),G__defined_typename("vector<PathFit>"),-1,1,"pathfit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerflag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"triggerflag=",0,"1 - hit, 0 - no hit");
   G__memvar_setup((void*)((long)(&p->triggerEdep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"triggerEdep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->triggerHitTime)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"triggerHitTime=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::PMT,allocator<RAT::DS::PMT> > */
static void G__setup_memvarvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   { vector<RAT::DS::PMT,allocator<RAT::DS::PMT> > *p; p=(vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::Calib */
static void G__setup_memvarRATcLcLDScLcLCalib(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib));
   { RAT::DS::Calib *p; p=(RAT::DS::Calib*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->intensity)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"intensity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"name=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->utc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TTimeStamp),-1,-1,1,"utc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3),-1,-1,1,"pos=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::Root */
static void G__setup_memvarRATcLcLDScLcLRoot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot));
   { RAT::DS::Root *p; p=(RAT::DS::Root*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->runID)-(long)(p)),105,0,0,-1,-1,-1,1,"runID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ratVersion)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"ratVersion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->procResult)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),G__defined_typename("vector<std::pair<std::string,int> >"),-1,1,"procResult=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR),G__defined_typename("vector<MC>"),-1,1,"mc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->calib)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR),G__defined_typename("vector<Calib>"),-1,1,"calib=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ev)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR),G__defined_typename("vector<EV>"),-1,1,"ev=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->user)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"user=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<pair<string,int>,allocator<pair<string,int> > > */
static void G__setup_memvarvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   { vector<pair<string,int>,allocator<pair<string,int> > > *p; p=(vector<pair<string,int>,allocator<pair<string,int> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::MC,allocator<RAT::DS::MC> > */
static void G__setup_memvarvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   { vector<RAT::DS::MC,allocator<RAT::DS::MC> > *p; p=(vector<RAT::DS::MC,allocator<RAT::DS::MC> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::Calib,allocator<RAT::DS::Calib> > */
static void G__setup_memvarvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   { vector<RAT::DS::Calib,allocator<RAT::DS::Calib> > *p; p=(vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::EV,allocator<RAT::DS::EV> > */
static void G__setup_memvarvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   { vector<RAT::DS::EV,allocator<RAT::DS::EV> > *p; p=(vector<RAT::DS::EV,allocator<RAT::DS::EV> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::PMTInfo */
static void G__setup_memvarRATcLcLDScLcLPMTInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo));
   { RAT::DS::PMTInfo *p; p=(RAT::DS::PMTInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,1,"pos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dir)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,1,"dir=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->modeltype)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"modeltype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->models)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,1,"models=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<TVector3,allocator<TVector3> > */
static void G__setup_memvarvectorlETVector3cOallocatorlETVector3gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   { vector<TVector3,allocator<TVector3> > *p; p=(vector<TVector3,allocator<TVector3> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::Run */
static void G__setup_memvarRATcLcLDScLcLRun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun));
   { RAT::DS::Run *p; p=(RAT::DS::Run*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->startTime)-(long)(p)),108,0,0,-1,G__defined_typename("time_t"),-1,1,"startTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmtinfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR),G__defined_typename("vector<PMTInfo>"),-1,1,"pmtinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> > */
static void G__setup_memvarvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   { vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> > *p; p=(vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::RunStore */
static void G__setup_memvarRATcLcLDScLcLRunStore(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRunStore));
   { RAT::DS::RunStore *p; p=(RAT::DS::RunStore*)0x1000; if (p) { }
   G__memvar_setup((void*)(&RAT::DS::RunStore::fgStore),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRunStore),-1,-2,1,"fgStore=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fReadTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TTree),-1,-1,1,"fReadTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fReadRun)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun),-1,-1,1,"fReadRun=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWriteTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TTree),-1,-1,1,"fWriteTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWriteRun)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun),-1,-1,1,"fWriteRun=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCache)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR),G__defined_typename("map<int,RunRecord*>"),-1,1,"fCache=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DSReader */
static void G__setup_memvarRATcLcLDSReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSReader));
   { RAT::DSReader *p; p=(RAT::DSReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TChain),-1,-1,1,"T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ds)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot),-1,-1,1,"ds=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->next)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"next=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->total)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"total=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DSWriter */
static void G__setup_memvarRATcLcLDSWriter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSWriter));
   { RAT::DSWriter *p; p=(RAT::DSWriter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFilename)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"fFilename=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TFile),-1,-1,1,"fFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TTree),-1,-1,1,"fTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRunTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TTree),-1,-1,1,"fRunTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fBranchDS)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot),-1,-1,1,"fBranchDS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fBranchRun)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun),-1,-1,1,"fBranchRun=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::TrackNode */
static void G__setup_memvarRATcLcLTrackNode(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode));
   { RAT::TrackNode *p; p=(RAT::TrackNode*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->child)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR),G__defined_typename("vector<TrackNode*>"),-1,1,"child=",0,"Any additional tracks connected to this one");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackStart)-(long)(p)),103,0,0,-1,-1,-1,1,"trackStart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackID)-(long)(p)),105,0,0,-1,-1,-1,1,"trackID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stepID)-(long)(p)),105,0,0,-1,-1,-1,1,"stepID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdgcode)-(long)(p)),105,0,0,-1,-1,-1,1,"pdgcode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particleName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"particleName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->prev)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode),-1,-1,1,"prev=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->next)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode),-1,-1,1,"next=",0,"Next node for this same particle");
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::TrackNode*,allocator<RAT::TrackNode*> > */
static void G__setup_memvarvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   { vector<RAT::TrackNode*,allocator<RAT::TrackNode*> > *p; p=(vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* RAT::TrackCursor */
static void G__setup_memvarRATcLcLTrackCursor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackCursor));
   { RAT::TrackCursor *p; p=(RAT::TrackCursor*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fCur)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode),-1,-1,1,"fCur=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVerbose)-(long)(p)),103,0,0,-1,-1,-1,1,"fVerbose=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::TrackNav */
static void G__setup_memvarRATcLcLTrackNav(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNav));
   { RAT::TrackNav *p; p=(RAT::TrackNav*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fHead)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode),-1,-1,1,"fHead=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR),G__defined_typename("map<int,TrackNode*>"),-1,1,"fTracks=",0,"Access by Track ID");
   }
   G__tag_memvar_reset();
}


   /* RAT::HTTPDownloader */
static void G__setup_memvarRATcLcLHTTPDownloader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLHTTPDownloader));
   { RAT::HTTPDownloader *p; p=(RAT::HTTPDownloader*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->handle)-(long)(p)),89,0,0,-1,G__defined_typename("CURL"),-1,1,"handle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->noproxy_set)-(long)(p)),103,0,0,-1,-1,-1,1,"noproxy_set=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->contents)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR),G__defined_typename("ostringstream"),-1,1,"contents=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DBFieldCallback */
static void G__setup_memvarRATcLcLDBFieldCallback(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBFieldCallback));
   { RAT::DBFieldCallback *p; p=(RAT::DBFieldCallback*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DBTable */
static void G__setup_memvarRATcLcLDBTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable));
   { RAT::DBTable *p; p=(RAT::DBTable*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType),-1,-2,1,G__FastAllocString(2048).Format("NOTFOUND=%lldLL",(long long)RAT::DBTable::NOTFOUND).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType),-1,-2,1,G__FastAllocString(2048).Format("INTEGER=%lldLL",(long long)RAT::DBTable::INTEGER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType),-1,-2,1,G__FastAllocString(2048).Format("DOUBLE=%lldLL",(long long)RAT::DBTable::DOUBLE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType),-1,-2,1,G__FastAllocString(2048).Format("BOOLEAN=%lldLL",(long long)RAT::DBTable::BOOLEAN).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType),-1,-2,1,G__FastAllocString(2048).Format("STRING=%lldLL",(long long)RAT::DBTable::STRING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType),-1,-2,1,G__FastAllocString(2048).Format("INTEGER_ARRAY=%lldLL",(long long)RAT::DBTable::INTEGER_ARRAY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType),-1,-2,1,G__FastAllocString(2048).Format("DOUBLE_ARRAY=%lldLL",(long long)RAT::DBTable::DOUBLE_ARRAY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType),-1,-2,1,G__FastAllocString(2048).Format("BOOLEAN_ARRAY=%lldLL",(long long)RAT::DBTable::BOOLEAN_ARRAY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType),-1,-2,1,G__FastAllocString(2048).Format("STRING_ARRAY=%lldLL",(long long)RAT::DBTable::STRING_ARRAY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType),-1,-2,1,G__FastAllocString(2048).Format("JSON=%lldLL",(long long)RAT::DBTable::JSON).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tblname)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"tblname=",0,"*< Name of table */");
   G__memvar_setup((void*)((long)(&p->index)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"index=",0,"*< Index of table */");
   G__memvar_setup((void*)((long)(&p->run_begin)-(long)(p)),105,0,0,-1,-1,-1,1,"run_begin=",0,"*< First run in which this table is valid */");
   G__memvar_setup((void*)((long)(&p->run_end)-(long)(p)),105,0,0,-1,-1,-1,1,"run_end=",0,"*< Last run in which this table is valid */");
   G__memvar_setup((void*)((long)(&p->table)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue),-1,-1,1,"table=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->arrayTypeCache)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBTablecLcLFieldTypecORATcLcLpyhashcOequal_tolEstringgRsPgR),-1,-1,1,"arrayTypeCache=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->iatbl_deferred)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR),-1,-1,1,"iatbl_deferred=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->datbl_deferred)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR),-1,-1,1,"datbl_deferred=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DB */
static void G__setup_memvarRATcLcLDB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDB));
   { RAT::DB *p; p=(RAT::DB*)0x1000; if (p) { }
   G__memvar_setup((void*)(&RAT::DB::primary),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDB),-1,-2,1,"primary=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->links)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_listlERATcLcLDBLinkmUcOallocatorlERATcLcLDBLinkmUgRsPgR),G__defined_typename("list<RAT::DBLink*>"),-1,1,"links=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->server)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"server=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tableNamesOnServer)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),G__defined_typename("set<std::string>"),-1,1,"tableNamesOnServer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tablesNotOnServer)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_setlERATcLcLDBTableKeycOlesslERATcLcLDBTableKeygRcOallocatorlERATcLcLDBTableKeygRsPgR),G__defined_typename("set<RAT::DBTableKey>"),-1,1,"tablesNotOnServer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->downloader)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLHTTPDownloader),-1,-1,1,"downloader=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tables)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRcOlesslERATcLcLDBTableKeygRcOallocatorlEpairlEconstsPRATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgRsPgRsPgR),G__defined_typename("DBTableSet"),-1,1,"tables=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tablesFromServer)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_dequelEpairlERATcLcLDBTableKeycOboolgRcOallocatorlEpairlERATcLcLDBTableKeycOboolgRsPgRsPgR),G__defined_typename("deque<std::pair<RAT::DBTableKey,bool> >"),-1,1,"tablesFromServer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DBLink */
static void G__setup_memvarRATcLcLDBLink(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink));
   { RAT::DBLink *p; p=(RAT::DBLink*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->db)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDB),-1,-1,1,"db=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tblname)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"tblname=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->index)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"index=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->currentRun)-(long)(p)),105,0,0,-1,-1,-1,1,"currentRun=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* simple_ptr_nocopy<RAT::DBLink> */
static void G__setup_memvarsimple_ptr_nocopylERATcLcLDBLinkgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR));
   { simple_ptr_nocopy<RAT::DBLink> *p; p=(simple_ptr_nocopy<RAT::DBLink>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->m_pointer)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink),-1,-1,1,"m_pointer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_count)-(long)(p)),72,0,0,-1,-1,-1,1,"m_count=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DBTable*,allocator<RAT::DBTable*> > */
static void G__setup_memvarvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   { vector<RAT::DBTable*,allocator<RAT::DBTable*> > *p; p=(vector<RAT::DBTable*,allocator<RAT::DBTable*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* RAT::DBTextLoader */
static void G__setup_memvarRATcLcLDBTextLoader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTextLoader));
   { RAT::DBTextLoader *p; p=(RAT::DBTextLoader*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* RAT::DBJsonLoader */
static void G__setup_memvarRATcLcLDBJsonLoader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBJsonLoader));
   { RAT::DBJsonLoader *p; p=(RAT::DBJsonLoader*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* RAT::ObjInt */
static void G__setup_memvarRATcLcLObjInt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjInt));
   { RAT::ObjInt *p; p=(RAT::ObjInt*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVal)-(long)(p)),105,0,0,-1,-1,-1,1,"fVal=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::ObjDbl */
static void G__setup_memvarRATcLcLObjDbl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjDbl));
   { RAT::ObjDbl *p; p=(RAT::ObjDbl*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVal)-(long)(p)),100,0,0,-1,-1,-1,1,"fVal=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<string,string> */
static void G__setup_memvarpairlEstringcOstringgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOstringgR));
   { pair<string,string> *p; p=(pair<string,string>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > > */
static void G__setup_memvarmaplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   { map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > > *p; p=(map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::Root,allocator<RAT::DS::Root> > */
static void G__setup_memvarvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   { vector<RAT::DS::Root,allocator<RAT::DS::Root> > *p; p=(vector<RAT::DS::Root,allocator<RAT::DS::Root> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::EV*,allocator<RAT::DS::EV*> > */
static void G__setup_memvarvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   { vector<RAT::DS::EV*,allocator<RAT::DS::EV*> > *p; p=(vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> > */
static void G__setup_memvarvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   { vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> > *p; p=(vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> > */
static void G__setup_memvarvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   { vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> > *p; p=(vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> > */
static void G__setup_memvarvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   { vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> > *p; p=(vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> > */
static void G__setup_memvarvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   { vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> > *p; p=(vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> > */
static void G__setup_memvarvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   { vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> > *p; p=(vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> > */
static void G__setup_memvarvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   { vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> > *p; p=(vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRAT_Dict_jailbreak() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncRATcLcLDScLcLMCParticle(void) {
   /* RAT::DS::MCParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle));
   G__memfunc_setup("MCParticle",964,G__RAT_Dict_jailbreak_225_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDGCode",886,G__RAT_Dict_jailbreak_225_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPDGCode",898,G__RAT_Dict_jailbreak_225_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _pdgcode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticleName",1493,G__RAT_Dict_jailbreak_225_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParticleName",1505,G__RAT_Dict_jailbreak_225_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _particleName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__RAT_Dict_jailbreak_225_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__RAT_Dict_jailbreak_225_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__RAT_Dict_jailbreak_225_0_8, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__RAT_Dict_jailbreak_225_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetKE",432,G__RAT_Dict_jailbreak_225_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetKE",444,G__RAT_Dict_jailbreak_225_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _ke", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMomentum",1138,G__RAT_Dict_jailbreak_225_0_12, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMomentum",1150,G__RAT_Dict_jailbreak_225_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _mom", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPolarization",1564,G__RAT_Dict_jailbreak_225_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPolarization",1576,G__RAT_Dict_jailbreak_225_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _pol", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_225_0_16, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MCParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_225_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_225_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MCParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_225_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MCParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_225_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_225_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_225_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_225_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_225_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCParticle", 964, G__RAT_Dict_jailbreak_225_0_28, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCParticle", 1090, G__RAT_Dict_jailbreak_225_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_225_0_30, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLMCTrackStep(void) {
   /* RAT::DS::MCTrackStep */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep));
   G__memfunc_setup("MCTrackStep",1057,G__RAT_Dict_jailbreak_226_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLength",898,G__RAT_Dict_jailbreak_226_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLength",910,G__RAT_Dict_jailbreak_226_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _length", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndpoint",1121,G__RAT_Dict_jailbreak_226_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEndpoint",1133,G__RAT_Dict_jailbreak_226_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _endpoint", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGlobalTime",1280,G__RAT_Dict_jailbreak_226_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGlobalTime",1292,G__RAT_Dict_jailbreak_226_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _globalTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLocalTime",1178,G__RAT_Dict_jailbreak_226_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLocalTime",1190,G__RAT_Dict_jailbreak_226_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _localTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetProperTime",1319,G__RAT_Dict_jailbreak_226_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetProperTime",1331,G__RAT_Dict_jailbreak_226_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _properTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMomentum",1138,G__RAT_Dict_jailbreak_226_0_12, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMomentum",1150,G__RAT_Dict_jailbreak_226_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _mom", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetKE",432,G__RAT_Dict_jailbreak_226_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetKE",444,G__RAT_Dict_jailbreak_226_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _ke", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetProcess",1023,G__RAT_Dict_jailbreak_226_0_16, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetProcess",1035,G__RAT_Dict_jailbreak_226_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _process", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVolume",920,G__RAT_Dict_jailbreak_226_0_18, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVolume",932,G__RAT_Dict_jailbreak_226_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _volume", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_226_0_20, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MCTrackStep::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_226_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCTrackStep::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_226_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MCTrackStep::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_226_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MCTrackStep::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_226_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_226_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCTrackStep::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_226_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCTrackStep::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_226_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCTrackStep::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_226_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCTrackStep::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCTrackStep", 1057, G__RAT_Dict_jailbreak_226_0_32, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCTrackStep' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCTrackStep", 1183, G__RAT_Dict_jailbreak_226_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_226_0_34, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCTrackStep' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLMCTrack(void) {
   /* RAT::DS::MCTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack));
   G__memfunc_setup("MCTrack",645,G__RAT_Dict_jailbreak_227_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__RAT_Dict_jailbreak_227_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__RAT_Dict_jailbreak_227_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParentID",1047,G__RAT_Dict_jailbreak_227_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParentID",1059,G__RAT_Dict_jailbreak_227_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _parentID", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPDGCode",886,G__RAT_Dict_jailbreak_227_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPDGCode",898,G__RAT_Dict_jailbreak_227_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _pdgcode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticleName",1493,G__RAT_Dict_jailbreak_227_0_8, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParticleName",1505,G__RAT_Dict_jailbreak_227_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _particleName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCTrackStep",1345,G__RAT_Dict_jailbreak_227_0_10, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCTrackStepCount",1866,G__RAT_Dict_jailbreak_227_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewMCTrackStep",1620,G__RAT_Dict_jailbreak_227_0_12, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMCTrackStep",1579,G__RAT_Dict_jailbreak_227_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLastMCTrackStep",1749,G__RAT_Dict_jailbreak_227_0_14, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneIntermediateMCTrackSteps",2937,G__RAT_Dict_jailbreak_227_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLength",898,G__RAT_Dict_jailbreak_227_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLength",910,G__RAT_Dict_jailbreak_227_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _length", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_227_0_18, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MCTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_227_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_227_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MCTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_227_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MCTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_227_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_227_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_227_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_227_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_227_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCTrack", 645, G__RAT_Dict_jailbreak_227_0_30, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCTrack", 771, G__RAT_Dict_jailbreak_227_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_227_0_32, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR(void) {
   /* vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_229_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), G__defined_typename("vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_229_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), G__defined_typename("vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_229_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_229_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_229_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_229_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_229_0_7, 107, -1, G__defined_typename("vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_229_0_8, 107, -1, G__defined_typename("vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_229_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_229_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type' 0 - sz u 'RAT::DS::MCTrackStep' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_229_0_11, 107, -1, G__defined_typename("vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_229_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_229_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), G__defined_typename("vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_229_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), G__defined_typename("vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >",5282,G__RAT_Dict_jailbreak_229_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >",5282,G__RAT_Dict_jailbreak_229_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type' 0 - n u 'RAT::DS::MCTrackStep' - 11 'RAT::DS::MCTrackStep()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >",5282,G__RAT_Dict_jailbreak_229_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >",5282,G__RAT_Dict_jailbreak_229_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator' 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_iterator' 10 - first u 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator' 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_229_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_229_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_229_0_21, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_229_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_229_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCTrackStep' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_229_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_229_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator' - 0 - position u 'RAT::DS::MCTrackStep' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_229_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator' - 0 - position u 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator' 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator' 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_229_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator' - 0 - position k - 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::size_type' 0 - n "
"u 'RAT::DS::MCTrackStep' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_229_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_229_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_229_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator' - 0 - first u 'vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_229_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >", 5408, G__RAT_Dict_jailbreak_229_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLMCSummary(void) {
   /* RAT::DS::MCSummary */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCSummary));
   G__memfunc_setup("MCSummary",894,G__RAT_Dict_jailbreak_467_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCSummary), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyCentroid",1730,G__RAT_Dict_jailbreak_467_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergyCentroid",1742,G__RAT_Dict_jailbreak_467_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _energyCentroid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyRMS",1148,G__RAT_Dict_jailbreak_467_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergyRMS",1160,G__RAT_Dict_jailbreak_467_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _energyRMS", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyLossByVolume",2142,G__RAT_Dict_jailbreak_467_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "C - - 10 - volume", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergyLossByVolume",2154,G__RAT_Dict_jailbreak_467_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,double,less<string>,allocator<pair<const string,double> > >' 'RAT::DS::StringDoubleMap' 0 - _energyLoss", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTotalScintEdep",1699,G__RAT_Dict_jailbreak_467_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTotalScintEdep",1711,G__RAT_Dict_jailbreak_467_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _totalScintEdep", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTotalScintEdepQuenched",2512,G__RAT_Dict_jailbreak_467_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTotalScintEdepQuenched",2524,G__RAT_Dict_jailbreak_467_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _totalScintEdepQuenched", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTotalScintCentroid",2141,G__RAT_Dict_jailbreak_467_0_12, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTotalScintCentroid",2153,G__RAT_Dict_jailbreak_467_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _totalScintCentroid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInitialScintTime",1914,G__RAT_Dict_jailbreak_467_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInitialScintTime",1926,G__RAT_Dict_jailbreak_467_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _initialScintTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumScintPhoton",1737,G__RAT_Dict_jailbreak_467_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumScintPhoton",1749,G__RAT_Dict_jailbreak_467_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _numScintPhoton", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumReemitPhoton",1838,G__RAT_Dict_jailbreak_467_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumReemitPhoton",1850,G__RAT_Dict_jailbreak_467_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _numReemitPhoton", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_467_0_20, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MCSummary::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_467_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCSummary::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_467_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MCSummary::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_467_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MCSummary::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_467_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_467_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCSummary::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_467_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCSummary::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_467_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCSummary::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_467_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCSummary::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCSummary", 894, G__RAT_Dict_jailbreak_467_0_32, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCSummary), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCSummary' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCSummary", 1020, G__RAT_Dict_jailbreak_467_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_467_0_34, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCSummary), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCSummary' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLMCPhoton(void) {
   /* RAT::DS::MCPhoton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton));
   G__memfunc_setup("MCPhoton",776,G__RAT_Dict_jailbreak_468_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitTime",980,G__RAT_Dict_jailbreak_468_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHitTime",992,G__RAT_Dict_jailbreak_468_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _hitTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFrontEndTime",1487,G__RAT_Dict_jailbreak_468_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFrontEndTime",1499,G__RAT_Dict_jailbreak_468_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _frontEndTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__RAT_Dict_jailbreak_468_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__RAT_Dict_jailbreak_468_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLambda",865,G__RAT_Dict_jailbreak_468_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLambda",877,G__RAT_Dict_jailbreak_468_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _lambda", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMomentum",1138,G__RAT_Dict_jailbreak_468_0_10, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMomentum",1150,G__RAT_Dict_jailbreak_468_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _mom", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPolarization",1564,G__RAT_Dict_jailbreak_468_0_12, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPolarization",1576,G__RAT_Dict_jailbreak_468_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _pol", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCharge",874,G__RAT_Dict_jailbreak_468_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCharge",886,G__RAT_Dict_jailbreak_468_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _charge", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDarkHit",979,G__RAT_Dict_jailbreak_468_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - _isDarkHit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsDarkHit",867,G__RAT_Dict_jailbreak_468_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrackID",942,G__RAT_Dict_jailbreak_468_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _trackID", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrackID",930,G__RAT_Dict_jailbreak_468_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_468_0_20, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MCPhoton::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_468_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCPhoton::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_468_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MCPhoton::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_468_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MCPhoton::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_468_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_468_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCPhoton::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_468_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCPhoton::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_468_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCPhoton::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_468_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCPhoton::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCPhoton", 776, G__RAT_Dict_jailbreak_468_0_32, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCPhoton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCPhoton", 902, G__RAT_Dict_jailbreak_468_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_468_0_34, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCPhoton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjsoncLcLValue(void) {
   /* json::Value */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue));
   G__memfunc_setup("Value",509,G__RAT_Dict_jailbreak_610_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__RAT_Dict_jailbreak_610_0_2, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 0, 1, 1, 1, 0, "i 'json::Type' - 0 - _type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__RAT_Dict_jailbreak_610_0_3, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 0, 1, 5, 1, 0, "i - 'json::TInteger' 0 - integer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__RAT_Dict_jailbreak_610_0_4, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 0, 1, 5, 1, 0, "h - 'json::TUInteger' 0 - uinteger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__RAT_Dict_jailbreak_610_0_5, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 0, 1, 5, 1, 0, "d - 'json::TReal' 0 - real", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__RAT_Dict_jailbreak_610_0_6, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 0, 1, 5, 1, 0, "g - 'json::TBool' 0 - boolean", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__RAT_Dict_jailbreak_610_0_7, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 0, 1, 5, 1, 0, "l - - 0 - uinteger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__RAT_Dict_jailbreak_610_0_8, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 0, 1, 5, 1, 0, "u 'string' 'json::TString' 0 - string", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__RAT_Dict_jailbreak_610_0_9, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 0, 1, 5, 1, 0, "u 'map<string,json::Value,less<string>,allocator<pair<const string,json::Value> > >' 'json::TObject' 0 - object", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__RAT_Dict_jailbreak_610_0_10, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 0, 1, 5, 1, 0, "u 'vector<json::Value,allocator<json::Value> >' 'json::TArray' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__RAT_Dict_jailbreak_610_0_11, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 0, 1, 1, 1, 0, "u 'json::Value' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_610_0_12, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 1, 1, 1, 1, 0, "u 'json::Value' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_610_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 1, 1, 1, 1, 8, "u 'string' - 11 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_610_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 1, 1, 1, 1, 8, "k - 'size_t' 10 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__RAT_Dict_jailbreak_610_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i 'json::Type' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__RAT_Dict_jailbreak_610_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getType",738,G__RAT_Dict_jailbreak_610_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInteger",1038,G__RAT_Dict_jailbreak_610_0_18, 105, -1, G__defined_typename("json::TInteger"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getUInteger",1123,G__RAT_Dict_jailbreak_610_0_19, 104, -1, G__defined_typename("json::TUInteger"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getReal",708,G__RAT_Dict_jailbreak_610_0_20, 100, -1, G__defined_typename("json::TReal"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBool",716,G__RAT_Dict_jailbreak_610_0_21, 103, -1, G__defined_typename("json::TBool"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getString",951,G__RAT_Dict_jailbreak_610_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), G__defined_typename("json::TString"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMember",920,G__RAT_Dict_jailbreak_610_0_23, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 1, 1, 1, 1, 8, "u 'string' 'json::TString' 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getArraySize",1242,G__RAT_Dict_jailbreak_610_0_24, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIndex",824,G__RAT_Dict_jailbreak_610_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 1, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMembers",1035,G__RAT_Dict_jailbreak_610_0_26, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMember",820,G__RAT_Dict_jailbreak_610_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInteger",1050,G__RAT_Dict_jailbreak_610_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'json::TInteger' 0 - integer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUINteger",1103,G__RAT_Dict_jailbreak_610_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'json::TUInteger' 0 - uinteger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setReal",720,G__RAT_Dict_jailbreak_610_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'json::TReal' 0 - real", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setReal",720,G__RAT_Dict_jailbreak_610_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'json::TBool' 0 - boolean", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setString",963,G__RAT_Dict_jailbreak_610_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' 'json::TString' 0 - string", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMember",932,G__RAT_Dict_jailbreak_610_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' 'json::TString' 0 - key u 'json::Value' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setArraySize",1254,G__RAT_Dict_jailbreak_610_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIndex",836,G__RAT_Dict_jailbreak_610_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - index u 'json::Value' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("prettyType",1098,G__RAT_Dict_jailbreak_610_0_36, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 1, 3, 1, 0, "i 'json::Type' - 0 - type", (char*)NULL, (void*) G__func2void( (string (*)(json::Type))(&json::Value::prettyType) ), 0);
   G__memfunc_setup("wrongType",975,G__RAT_Dict_jailbreak_610_0_37, 121, -1, -1, 0, 2, 3, 1, 0, 
"i 'json::Type' - 0 - actual i 'json::Type' - 0 - requested", (char*)NULL, (void*) G__func2void( (void (*)(json::Type, json::Type))(&json::Value::wrongType) ), 0);
   G__memfunc_setup("checkType",928,G__RAT_Dict_jailbreak_610_0_38, 121, -1, -1, 0, 1, 1, 1, 8, "i 'json::Type' - 0 - _type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkTypeReset",1443,G__RAT_Dict_jailbreak_610_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "i 'json::Type' - 0 - _type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("decref",617,G__RAT_Dict_jailbreak_610_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("incref",631,G__RAT_Dict_jailbreak_610_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clean",515,G__RAT_Dict_jailbreak_610_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Value", 635, G__RAT_Dict_jailbreak_610_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLLog(void) {
   /* RAT::Log */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLLog));
   G__memfunc_setup("Init",404,G__RAT_Dict_jailbreak_627_0_1, 103, -1, -1, 0, 4, 3, 1, 0, 
"u 'string' - 0 - _filename i 'RAT::Log::Level' - 0 'INFO' display "
"i 'RAT::Log::Level' - 0 'DETAIL' log g - - 0 'true' use_buffer", (char*)NULL, (void*) G__func2void( (bool (*)(string, RAT::Log::Level, RAT::Log::Level, bool))(&RAT::Log::Init) ), 0);
   G__memfunc_setup("GetDisplayLevel",1518,G__RAT_Dict_jailbreak_627_0_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::Log::GetDisplayLevel) ), 0);
   G__memfunc_setup("SetDisplayLevel",1530,G__RAT_Dict_jailbreak_627_0_3, 121, -1, -1, 0, 1, 3, 1, 0, "i 'RAT::Log::Level' - 0 - level", (char*)NULL, (void*) G__func2void( (void (*)(RAT::Log::Level))(&RAT::Log::SetDisplayLevel) ), 0);
   G__memfunc_setup("GetLogLevel",1082,G__RAT_Dict_jailbreak_627_0_4, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::Log::GetLogLevel) ), 0);
   G__memfunc_setup("SetLogLevel",1094,G__RAT_Dict_jailbreak_627_0_5, 121, -1, -1, 0, 1, 3, 1, 0, "i 'RAT::Log::Level' - 0 - level", (char*)NULL, (void*) G__func2void( (void (*)(RAT::Log::Level))(&RAT::Log::SetLogLevel) ), 0);
   G__memfunc_setup("Die",274,G__RAT_Dict_jailbreak_627_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"u 'string' - 0 - message i - - 0 '1' return_code", (char*)NULL, (void*) G__func2void( (void (*)(string, int))(&RAT::Log::Die) ), 0);
   G__memfunc_setup("Assert",626,G__RAT_Dict_jailbreak_627_0_7, 121, -1, -1, 0, 3, 3, 1, 0, 
"g - - 0 - condition u 'string' - 0 - message "
"i - - 0 '1' return_code", (char*)NULL, (void*) G__func2void( (void (*)(bool, string, int))(&RAT::Log::Assert) ), 0);
   G__memfunc_setup("GetLogBuffer",1180,G__RAT_Dict_jailbreak_627_0_8, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 1, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const string& (*)())(&RAT::Log::GetLogBuffer) ), 0);
   G__memfunc_setup("AddMacro",763,G__RAT_Dict_jailbreak_627_0_9, 121, -1, -1, 0, 1, 3, 1, 0, "u 'string' - 11 - contents", (char*)NULL, (void*) G__func2void( (void (*)(const string&))(&RAT::Log::AddMacro) ), 0);
   G__memfunc_setup("GetMacro",786,G__RAT_Dict_jailbreak_627_0_10, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 1, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const string& (*)())(&RAT::Log::GetMacro) ), 0);
   G__memfunc_setup("AddObject",864,G__RAT_Dict_jailbreak_627_0_11, 121, -1, -1, 0, 2, 3, 1, 0, 
"u 'string' - 11 - name U 'TObject' - 0 - obj", (char*)NULL, (void*) G__func2void( (void (*)(const string&, TObject*))(&RAT::Log::AddObject) ), 0);
   G__memfunc_setup("GetObjects",1002,G__RAT_Dict_jailbreak_627_0_12, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgR), G__defined_typename("vector<std::pair<std::string,TObject*> >"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (vector<std::pair<std::string,TObject*> > (*)())(&RAT::Log::GetObjects) ), 0);
   G__memfunc_setup("SetDBTraceState",1442,G__RAT_Dict_jailbreak_627_0_13, 121, -1, -1, 0, 1, 3, 1, 0, "g - - 0 'true' state", (char*)NULL, (void*) G__func2void( (void (*)(bool))(&RAT::Log::SetDBTraceState) ), 0);
   G__memfunc_setup("GetDBTraceState",1430,G__RAT_Dict_jailbreak_627_0_14, 103, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (bool (*)())(&RAT::Log::GetDBTraceState) ), 0);
   G__memfunc_setup("TraceDBAccess",1223,G__RAT_Dict_jailbreak_627_0_15, 121, -1, -1, 0, 4, 3, 1, 0, 
"u 'string' - 11 - table u 'string' - 11 - index "
"u 'string' - 11 - field i - - 0 - value", (char*)NULL, (void*) G__func2void( (void (*)(const string&, const string&, const string&, int))(&RAT::Log::TraceDBAccess) ), 0);
   G__memfunc_setup("TraceDBAccess",1223,G__RAT_Dict_jailbreak_627_0_16, 121, -1, -1, 0, 4, 3, 1, 0, 
"u 'string' - 11 - table u 'string' - 11 - index "
"u 'string' - 11 - field d - - 0 - value", (char*)NULL, (void*) G__func2void( (void (*)(const string&, const string&, const string&, double))(&RAT::Log::TraceDBAccess) ), 0);
   G__memfunc_setup("TraceDBAccess",1223,G__RAT_Dict_jailbreak_627_0_17, 121, -1, -1, 0, 4, 3, 1, 0, 
"u 'string' - 11 - table u 'string' - 11 - index "
"u 'string' - 11 - field u 'string' - 11 - value", (char*)NULL, (void*) G__func2void( (void (*)(const string&, const string&, const string&, const string&))(&RAT::Log::TraceDBAccess) ), 0);
   G__memfunc_setup("TraceDBAccess",1223,G__RAT_Dict_jailbreak_627_0_18, 121, -1, -1, 0, 4, 3, 1, 0, 
"u 'string' - 11 - table u 'string' - 11 - index "
"u 'string' - 11 - field u 'vector<int,allocator<int> >' 'vector<int>' 11 - value", (char*)NULL, (void*) G__func2void( (void (*)(const string&, const string&, const string&, const vector<int>&))(&RAT::Log::TraceDBAccess) ), 0);
   G__memfunc_setup("TraceDBAccess",1223,G__RAT_Dict_jailbreak_627_0_19, 121, -1, -1, 0, 4, 3, 1, 0, 
"u 'string' - 11 - table u 'string' - 11 - index "
"u 'string' - 11 - field u 'vector<double,allocator<double> >' 'vector<double>' 11 - value", (char*)NULL, (void*) G__func2void( (void (*)(const string&, const string&, const string&, const vector<double>&))(&RAT::Log::TraceDBAccess) ), 0);
   G__memfunc_setup("TraceDBAccess",1223,G__RAT_Dict_jailbreak_627_0_20, 121, -1, -1, 0, 4, 3, 1, 0, 
"u 'string' - 11 - table u 'string' - 11 - index "
"u 'string' - 11 - field u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - value", (char*)NULL, (void*) G__func2void( (void (*)(const string&, const string&, const string&, const vector<std::string>&))(&RAT::Log::TraceDBAccess) ), 0);
   G__memfunc_setup("TraceDBAccess",1223,G__RAT_Dict_jailbreak_627_0_21, 121, -1, -1, 0, 4, 3, 1, 0, 
"u 'string' - 11 - table u 'string' - 11 - index "
"u 'string' - 11 - field u 'json::Value' - 11 - value", (char*)NULL, (void*) G__func2void( (void (*)(const string&, const string&, const string&, const json::Value&))(&RAT::Log::TraceDBAccess) ), 0);
   G__memfunc_setup("GetDBTraceMap",1203,G__RAT_Dict_jailbreak_627_0_22, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TMap), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TMap* (*)())(&RAT::Log::GetDBTraceMap) ), 0);
   G__memfunc_setup("Log",290,G__RAT_Dict_jailbreak_627_0_23, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLLog), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDBEntry",929,G__RAT_Dict_jailbreak_627_0_24, 121, -1, -1, 0, 2, 3, 1, 0, 
"u 'string' - 11 - key u 'string' - 11 - value", (char*)NULL, (void*) G__func2void( (void (*)(const string&, const string&))(&RAT::Log::AddDBEntry) ), 0);
   G__memfunc_setup("SetupIO",681,G__RAT_Dict_jailbreak_627_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::Log::SetupIO) ), 0);
   G__memfunc_setup("ClearOMText",1064,G__RAT_Dict_jailbreak_627_0_26, 121, -1, -1, 0, 1, 3, 1, 0, "U 'omtext' - 0 - out", (char*)NULL, (void*) G__func2void( (void (*)(omtext*))(&RAT::Log::ClearOMText) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Log", 290, G__RAT_Dict_jailbreak_627_0_27, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLLog), -1, 0, 1, 1, 1, 0, "u 'RAT::Log' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Log", 416, G__RAT_Dict_jailbreak_627_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_627_0_29, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLLog), -1, 1, 1, 1, 1, 0, "u 'RAT::Log' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLMCPMT(void) {
   /* RAT::DS::MCPMT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT));
   G__memfunc_setup("MCPMT",385,G__RAT_Dict_jailbreak_637_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__RAT_Dict_jailbreak_637_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__RAT_Dict_jailbreak_637_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCharge",874,G__RAT_Dict_jailbreak_637_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__RAT_Dict_jailbreak_637_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType",718,G__RAT_Dict_jailbreak_637_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCPhoton",1064,G__RAT_Dict_jailbreak_637_0_7, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCPhotonCount",1585,G__RAT_Dict_jailbreak_637_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddNewMCPhoton",1339,G__RAT_Dict_jailbreak_637_0_9, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PruneMCPhoton",1298,G__RAT_Dict_jailbreak_637_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_637_0_11, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MCPMT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_637_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCPMT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_637_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MCPMT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_637_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MCPMT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_637_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_637_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCPMT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_637_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCPMT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_637_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCPMT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_637_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCPMT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCPMT", 385, G__RAT_Dict_jailbreak_637_0_23, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCPMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCPMT", 511, G__RAT_Dict_jailbreak_637_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_637_0_25, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCPMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR(void) {
   /* vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_639_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), G__defined_typename("vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_639_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), G__defined_typename("vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_639_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_639_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_639_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_639_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_639_0_7, 107, -1, G__defined_typename("vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_639_0_8, 107, -1, G__defined_typename("vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_639_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_639_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type' 0 - sz u 'RAT::DS::MCPhoton' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_639_0_11, 107, -1, G__defined_typename("vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_639_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_639_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), G__defined_typename("vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_639_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), G__defined_typename("vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >",4720,G__RAT_Dict_jailbreak_639_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >",4720,G__RAT_Dict_jailbreak_639_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type' 0 - n u 'RAT::DS::MCPhoton' - 11 'RAT::DS::MCPhoton()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >",4720,G__RAT_Dict_jailbreak_639_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >",4720,G__RAT_Dict_jailbreak_639_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator' 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_iterator' 10 - first u 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator' 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_639_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_639_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_639_0_21, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_639_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_639_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCPhoton' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_639_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_639_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator' - 0 - position u 'RAT::DS::MCPhoton' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_639_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator' - 0 - position u 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator' 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator' 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_639_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator' - 0 - position k - 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::size_type' 0 - n "
"u 'RAT::DS::MCPhoton' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_639_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_639_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_639_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator' - 0 - first u 'vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_639_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >", 4846, G__RAT_Dict_jailbreak_639_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLMC(void) {
   /* RAT::DS::MC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC));
   G__memfunc_setup("MC",144,G__RAT_Dict_jailbreak_642_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__RAT_Dict_jailbreak_642_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__RAT_Dict_jailbreak_642_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUTC",524,G__RAT_Dict_jailbreak_642_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TTimeStamp), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUTC",536,G__RAT_Dict_jailbreak_642_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TTimeStamp' - 11 - _utc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCParticle",1252,G__RAT_Dict_jailbreak_642_0_6, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCParticleCount",1773,G__RAT_Dict_jailbreak_642_0_7, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewMCParticle",1527,G__RAT_Dict_jailbreak_642_0_8, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMCParticle",1486,G__RAT_Dict_jailbreak_642_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCParent",1050,G__RAT_Dict_jailbreak_642_0_10, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCParentCount",1571,G__RAT_Dict_jailbreak_642_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewMCParent",1325,G__RAT_Dict_jailbreak_642_0_12, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMCParent",1284,G__RAT_Dict_jailbreak_642_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCTrack",933,G__RAT_Dict_jailbreak_642_0_14, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCTrackCount",1454,G__RAT_Dict_jailbreak_642_0_15, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewMCTrack",1208,G__RAT_Dict_jailbreak_642_0_16, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMCTrack",1167,G__RAT_Dict_jailbreak_642_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMCTrack",1167,G__RAT_Dict_jailbreak_642_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - particleName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCPMT",673,G__RAT_Dict_jailbreak_642_0_19, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCPMTCount",1194,G__RAT_Dict_jailbreak_642_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewMCPMT",948,G__RAT_Dict_jailbreak_642_0_21, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrunePMT",763,G__RAT_Dict_jailbreak_642_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumPE",741,G__RAT_Dict_jailbreak_642_0_23, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumPE",753,G__RAT_Dict_jailbreak_642_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _numPE", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumDark",978,G__RAT_Dict_jailbreak_642_0_25, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumDark",990,G__RAT_Dict_jailbreak_642_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _numDarkHits", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCSummary",1182,G__RAT_Dict_jailbreak_642_0_27, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCSummary), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistMCSummary",1419,G__RAT_Dict_jailbreak_642_0_28, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMCSummary",1416,G__RAT_Dict_jailbreak_642_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_642_0_30, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_642_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_642_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_642_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_642_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_642_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_642_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_642_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_642_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MC", 144, G__RAT_Dict_jailbreak_642_0_42, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MC", 270, G__RAT_Dict_jailbreak_642_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_642_0_44, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR(void) {
   /* vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_649_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), G__defined_typename("vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_649_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), G__defined_typename("vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_649_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_649_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_649_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_649_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_649_0_7, 107, -1, G__defined_typename("vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_649_0_8, 107, -1, G__defined_typename("vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_649_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_649_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type' 0 - sz u 'RAT::DS::MCParticle' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_649_0_11, 107, -1, G__defined_typename("vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_649_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_649_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), G__defined_typename("vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_649_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), G__defined_typename("vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >",5096,G__RAT_Dict_jailbreak_649_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >",5096,G__RAT_Dict_jailbreak_649_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type' 0 - n u 'RAT::DS::MCParticle' - 11 'RAT::DS::MCParticle()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >",5096,G__RAT_Dict_jailbreak_649_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >",5096,G__RAT_Dict_jailbreak_649_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator' 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_iterator' 10 - first u 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator' 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_649_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_649_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_649_0_21, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_649_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_649_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCParticle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_649_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_649_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator' - 0 - position u 'RAT::DS::MCParticle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_649_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator' - 0 - position u 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator' 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator' 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_649_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator' - 0 - position k - 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::size_type' 0 - n "
"u 'RAT::DS::MCParticle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_649_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_649_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_649_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator' - 0 - first u 'vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_649_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >", 5222, G__RAT_Dict_jailbreak_649_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR(void) {
   /* vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_653_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), G__defined_typename("vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_653_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), G__defined_typename("vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_653_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_653_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_653_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_653_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_653_0_7, 107, -1, G__defined_typename("vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_653_0_8, 107, -1, G__defined_typename("vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_653_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_653_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type' 0 - sz u 'RAT::DS::MCTrack' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_653_0_11, 107, -1, G__defined_typename("vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_653_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_653_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), G__defined_typename("vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_653_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), G__defined_typename("vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >",4458,G__RAT_Dict_jailbreak_653_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >",4458,G__RAT_Dict_jailbreak_653_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type' 0 - n u 'RAT::DS::MCTrack' - 11 'RAT::DS::MCTrack()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >",4458,G__RAT_Dict_jailbreak_653_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >",4458,G__RAT_Dict_jailbreak_653_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator' 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_iterator' 10 - first u 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator' 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_653_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_653_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_653_0_21, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_653_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_653_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCTrack' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_653_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_653_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator' - 0 - position u 'RAT::DS::MCTrack' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_653_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator' - 0 - position u 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator' 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator' 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_653_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator' - 0 - position k - 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::size_type' 0 - n "
"u 'RAT::DS::MCTrack' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_653_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_653_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_653_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator' - 0 - first u 'vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_653_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >", 4584, G__RAT_Dict_jailbreak_653_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR(void) {
   /* vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_657_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), G__defined_typename("vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_657_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), G__defined_typename("vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_657_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_657_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_657_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_657_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_657_0_7, 107, -1, G__defined_typename("vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_657_0_8, 107, -1, G__defined_typename("vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_657_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_657_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type' 0 - sz u 'RAT::DS::MCPMT' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_657_0_11, 107, -1, G__defined_typename("vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_657_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_657_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), G__defined_typename("vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_657_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), G__defined_typename("vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >",3938,G__RAT_Dict_jailbreak_657_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >",3938,G__RAT_Dict_jailbreak_657_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type' 0 - n u 'RAT::DS::MCPMT' - 11 'RAT::DS::MCPMT()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >",3938,G__RAT_Dict_jailbreak_657_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >",3938,G__RAT_Dict_jailbreak_657_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator' 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_iterator' 10 - first u 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator' 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_657_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_657_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_657_0_21, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_657_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_657_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCPMT' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_657_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_657_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator' - 0 - position u 'RAT::DS::MCPMT' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_657_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator' - 0 - position u 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator' 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator' 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_657_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator' - 0 - position k - 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::size_type' 0 - n "
"u 'RAT::DS::MCPMT' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_657_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_657_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_657_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator' - 0 - first u 'vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_657_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >", 4064, G__RAT_Dict_jailbreak_657_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLPMT(void) {
   /* RAT::DS::PMT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT));
   G__memfunc_setup("PMT",241,G__RAT_Dict_jailbreak_660_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__RAT_Dict_jailbreak_660_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetID",429,G__RAT_Dict_jailbreak_660_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCharge",886,G__RAT_Dict_jailbreak_660_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _charge", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCharge",874,G__RAT_Dict_jailbreak_660_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__RAT_Dict_jailbreak_660_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__RAT_Dict_jailbreak_660_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_660_0_8, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::PMT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_660_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PMT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_660_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::PMT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_660_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::PMT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_660_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_660_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PMT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_660_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PMT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_660_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PMT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_660_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PMT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PMT", 241, G__RAT_Dict_jailbreak_660_0_20, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::PMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PMT", 367, G__RAT_Dict_jailbreak_660_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_660_0_22, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::PMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLPosFit(void) {
   /* RAT::DS::PosFit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPosFit));
   G__memfunc_setup("PosFit",597,G__RAT_Dict_jailbreak_661_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPosFit), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosFitName",1270,G__RAT_Dict_jailbreak_661_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosFitName",1282,G__RAT_Dict_jailbreak_661_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__RAT_Dict_jailbreak_661_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__RAT_Dict_jailbreak_661_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_661_0_6, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::PosFit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_661_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PosFit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_661_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::PosFit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_661_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::PosFit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RAT_Dict_jailbreak_661_0_10, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RAT_Dict_jailbreak_661_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RAT_Dict_jailbreak_661_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_661_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_661_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PosFit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_661_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PosFit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_661_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PosFit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_661_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PosFit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PosFit", 597, G__RAT_Dict_jailbreak_661_0_18, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPosFit), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::PosFit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PosFit", 723, G__RAT_Dict_jailbreak_661_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_661_0_20, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPosFit), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::PosFit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLCentroid(void) {
   /* RAT::DS::Centroid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid));
   G__memfunc_setup("Centroid",824,G__RAT_Dict_jailbreak_662_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPower",813,G__RAT_Dict_jailbreak_662_0_2, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPower",825,G__RAT_Dict_jailbreak_662_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - _power", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_662_0_4, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::Centroid::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_662_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Centroid::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_662_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::Centroid::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_662_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::Centroid::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_662_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_662_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Centroid::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_662_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Centroid::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_662_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Centroid::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_662_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Centroid::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Centroid", 824, G__RAT_Dict_jailbreak_662_0_16, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::Centroid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Centroid", 950, G__RAT_Dict_jailbreak_662_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_662_0_18, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::Centroid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLPathFit(void) {
   /* RAT::DS::PathFit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit));
   G__memfunc_setup("PathFit",688,G__RAT_Dict_jailbreak_663_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime0",735,G__RAT_Dict_jailbreak_663_0_2, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime0",747,G__RAT_Dict_jailbreak_663_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - _time0", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPos0",642,G__RAT_Dict_jailbreak_663_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPos0",654,G__RAT_Dict_jailbreak_663_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - _pos0", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__RAT_Dict_jailbreak_663_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__RAT_Dict_jailbreak_663_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - _time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDirection",1217,G__RAT_Dict_jailbreak_663_0_8, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDirection",1229,G__RAT_Dict_jailbreak_663_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - _dir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_663_0_10, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::PathFit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_663_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PathFit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_663_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::PathFit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_663_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::PathFit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_663_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_663_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PathFit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_663_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PathFit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_663_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PathFit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_663_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PathFit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PathFit", 688, G__RAT_Dict_jailbreak_663_0_22, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::PathFit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PathFit", 814, G__RAT_Dict_jailbreak_663_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_663_0_24, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::PathFit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLEV(void) {
   /* RAT::DS::EV */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV));
   G__memfunc_setup("EV",155,G__RAT_Dict_jailbreak_664_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__RAT_Dict_jailbreak_664_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__RAT_Dict_jailbreak_664_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUTC",524,G__RAT_Dict_jailbreak_664_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TTimeStamp), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUTC",536,G__RAT_Dict_jailbreak_664_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TTimeStamp' - 11 - _utc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPMT",529,G__RAT_Dict_jailbreak_664_0_6, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPMTCount",1050,G__RAT_Dict_jailbreak_664_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewPMT",804,G__RAT_Dict_jailbreak_664_0_8, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrunePMT",763,G__RAT_Dict_jailbreak_664_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Nhits",518,G__RAT_Dict_jailbreak_664_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDeltaT",862,G__RAT_Dict_jailbreak_664_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDeltaT",874,G__RAT_Dict_jailbreak_664_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _deltat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalCharge",1390,G__RAT_Dict_jailbreak_664_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTotalCharge",1402,G__RAT_Dict_jailbreak_664_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _qTotal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentroid",1112,G__RAT_Dict_jailbreak_664_0_15, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistCentroid",1349,G__RAT_Dict_jailbreak_664_0_16, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneCentroid",1346,G__RAT_Dict_jailbreak_664_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPathFit",976,G__RAT_Dict_jailbreak_664_0_18, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistPathFit",1213,G__RAT_Dict_jailbreak_664_0_19, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrunePathFit",1210,G__RAT_Dict_jailbreak_664_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearTriggerFlag",1589,G__RAT_Dict_jailbreak_664_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerFlag",1390,G__RAT_Dict_jailbreak_664_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerFlag",1402,G__RAT_Dict_jailbreak_664_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - triggerid i - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearTriggerEdep",1593,G__RAT_Dict_jailbreak_664_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerEdep",1394,G__RAT_Dict_jailbreak_664_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerEdep",1406,G__RAT_Dict_jailbreak_664_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - triggerid d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearTriggerHitTime",1903,G__RAT_Dict_jailbreak_664_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerHitTime",1704,G__RAT_Dict_jailbreak_664_0_28, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerHitTime",1716,G__RAT_Dict_jailbreak_664_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - triggerid d - - 0 - hittime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_664_0_30, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::EV::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_664_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::EV::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_664_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::EV::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_664_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::EV::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_664_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_664_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::EV::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_664_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::EV::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_664_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::EV::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_664_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::EV::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EV", 155, G__RAT_Dict_jailbreak_664_0_42, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::EV' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EV", 281, G__RAT_Dict_jailbreak_664_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_664_0_44, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::EV' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR(void) {
   /* vector<RAT::DS::PMT,allocator<RAT::DS::PMT> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_666_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), G__defined_typename("vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_666_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), G__defined_typename("vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_666_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_666_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_666_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_666_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_666_0_7, 107, -1, G__defined_typename("vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_666_0_8, 107, -1, G__defined_typename("vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_666_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_666_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type' 0 - sz u 'RAT::DS::PMT' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_666_0_11, 107, -1, G__defined_typename("vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_666_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_666_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), G__defined_typename("vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_666_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), G__defined_typename("vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >",3650,G__RAT_Dict_jailbreak_666_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >",3650,G__RAT_Dict_jailbreak_666_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type' 0 - n u 'RAT::DS::PMT' - 11 'RAT::DS::PMT()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >",3650,G__RAT_Dict_jailbreak_666_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >",3650,G__RAT_Dict_jailbreak_666_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator' 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_iterator' 10 - first u 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator' 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_666_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_666_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_666_0_21, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_666_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_666_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RAT::DS::PMT' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_666_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_666_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator' - 0 - position u 'RAT::DS::PMT' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_666_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator' - 0 - position u 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator' 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator' 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_666_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator' - 0 - position k - 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::size_type' 0 - n "
"u 'RAT::DS::PMT' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_666_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_666_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_666_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator' - 0 - first u 'vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_666_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >", 3776, G__RAT_Dict_jailbreak_666_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLCalib(void) {
   /* RAT::DS::Calib */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib));
   G__memfunc_setup("Calib",475,G__RAT_Dict_jailbreak_677_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourceName",1298,G__RAT_Dict_jailbreak_677_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSourceName",1310,G__RAT_Dict_jailbreak_677_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetID",429,G__RAT_Dict_jailbreak_677_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__RAT_Dict_jailbreak_677_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMode",677,G__RAT_Dict_jailbreak_677_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMode",689,G__RAT_Dict_jailbreak_677_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIntensity",1255,G__RAT_Dict_jailbreak_677_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIntensity",1267,G__RAT_Dict_jailbreak_677_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _intensity", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUTC",524,G__RAT_Dict_jailbreak_677_0_10, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TTimeStamp), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUTC",536,G__RAT_Dict_jailbreak_677_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TTimeStamp' - 11 - _utc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__RAT_Dict_jailbreak_677_0_12, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__RAT_Dict_jailbreak_677_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_677_0_14, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::Calib::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_677_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Calib::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_677_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::Calib::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_677_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::Calib::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_677_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_677_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Calib::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_677_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Calib::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_677_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Calib::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_677_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Calib::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Calib", 475, G__RAT_Dict_jailbreak_677_0_26, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::Calib' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Calib", 601, G__RAT_Dict_jailbreak_677_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_677_0_28, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::Calib' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLRoot(void) {
   /* RAT::DS::Root */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot));
   G__memfunc_setup("Root",420,G__RAT_Dict_jailbreak_678_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunID",738,G__RAT_Dict_jailbreak_678_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRunID",750,G__RAT_Dict_jailbreak_678_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _runID", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AppendProcResult",1643,G__RAT_Dict_jailbreak_678_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - procName i - - 0 - resultCode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLastProcResult",1735,G__RAT_Dict_jailbreak_678_0_5, 105, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - procName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLastProcResult",1735,G__RAT_Dict_jailbreak_678_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetProcResult",1331,G__RAT_Dict_jailbreak_678_0_7, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR), G__defined_typename("vector<std::pair<std::string,int> >"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRatVersion",1325,G__RAT_Dict_jailbreak_678_0_8, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRatVersion",1337,G__RAT_Dict_jailbreak_678_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - _ratVersion", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMC",432,G__RAT_Dict_jailbreak_678_0_10, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistMC",669,G__RAT_Dict_jailbreak_678_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMC",666,G__RAT_Dict_jailbreak_678_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCalib",763,G__RAT_Dict_jailbreak_678_0_13, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistCalib",1000,G__RAT_Dict_jailbreak_678_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneCalib",997,G__RAT_Dict_jailbreak_678_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEV",443,G__RAT_Dict_jailbreak_678_0_16, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEVCount",964,G__RAT_Dict_jailbreak_678_0_17, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewEV",718,G__RAT_Dict_jailbreak_678_0_18, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistEV",680,G__RAT_Dict_jailbreak_678_0_19, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneEV",677,G__RAT_Dict_jailbreak_678_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneEV",677,G__RAT_Dict_jailbreak_678_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUserDataCount",1602,G__RAT_Dict_jailbreak_678_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUserDataCount",1614,G__RAT_Dict_jailbreak_678_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - count", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUserData",1081,G__RAT_Dict_jailbreak_678_0_24, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUserData",1093,G__RAT_Dict_jailbreak_678_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_678_0_26, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::Root::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_678_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Root::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_678_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::Root::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_678_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::Root::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_678_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_678_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Root::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_678_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Root::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_678_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Root::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_678_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Root::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Root", 420, G__RAT_Dict_jailbreak_678_0_38, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::Root' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Root", 546, G__RAT_Dict_jailbreak_678_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_678_0_40, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::Root' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR(void) {
   /* vector<pair<string,int>,allocator<pair<string,int> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_680_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR), G__defined_typename("vector<pair<string,int>,allocator<pair<string,int> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<string,int>,allocator<pair<string,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_680_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR), G__defined_typename("vector<pair<string,int>,allocator<pair<string,int> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<string,int>,allocator<pair<string,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_680_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_680_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_680_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<string,int>,allocator<pair<string,int> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_680_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<string,int>,allocator<pair<string,int> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_680_0_7, 107, -1, G__defined_typename("vector<pair<string,int>,allocator<pair<string,int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_680_0_8, 107, -1, G__defined_typename("vector<pair<string,int>,allocator<pair<string,int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_680_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<string,int>,allocator<pair<string,int> > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_680_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<string,int>,allocator<pair<string,int> > >::size_type' 0 - sz u 'pair<string,int>' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_680_0_11, 107, -1, G__defined_typename("vector<pair<string,int>,allocator<pair<string,int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_680_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_680_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR), G__defined_typename("vector<pair<string,int>,allocator<pair<string,int> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<string,int>,allocator<pair<string,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_680_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR), G__defined_typename("vector<pair<string,int>,allocator<pair<string,int> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<string,int>,allocator<pair<string,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<string,int>,allocator<pair<string,int> > >",5148,G__RAT_Dict_jailbreak_680_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<string,int>,allocator<pair<string,int> > >",5148,G__RAT_Dict_jailbreak_680_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<string,int>,allocator<pair<string,int> > >::size_type' 0 - n u 'pair<string,int>' - 11 '(pair<string,int>)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<string,int>,allocator<pair<string,int> > >",5148,G__RAT_Dict_jailbreak_680_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<pair<string,int>,allocator<pair<string,int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<string,int>,allocator<pair<string,int> > >",5148,G__RAT_Dict_jailbreak_680_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<string,int>,allocator<pair<string,int> > >::iterator' 'vector<pair<string,int>,allocator<pair<string,int> > >::const_iterator' 10 - first u 'vector<pair<string,int>,allocator<pair<string,int> > >::iterator' 'vector<pair<string,int>,allocator<pair<string,int> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_680_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<pair<string,int>,allocator<pair<string,int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_680_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<string,int>,allocator<pair<string,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_680_0_21, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_680_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_680_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<string,int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_680_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<string,int>,allocator<pair<string,int> > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_680_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<string,int>,allocator<pair<string,int> > >::iterator' - 0 - position u 'pair<string,int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_680_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<string,int>,allocator<pair<string,int> > >::iterator' - 0 - position u 'vector<pair<string,int>,allocator<pair<string,int> > >::iterator' 'vector<pair<string,int>,allocator<pair<string,int> > >::const_iterator' 10 - first "
"u 'vector<pair<string,int>,allocator<pair<string,int> > >::iterator' 'vector<pair<string,int>,allocator<pair<string,int> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_680_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<string,int>,allocator<pair<string,int> > >::iterator' - 0 - position k - 'vector<pair<string,int>,allocator<pair<string,int> > >::size_type' 0 - n "
"u 'pair<string,int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_680_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_680_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<string,int>,allocator<pair<string,int> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_680_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<string,int>,allocator<pair<string,int> > >::iterator' - 0 - first u 'vector<pair<string,int>,allocator<pair<string,int> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_680_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<pair<string,int>,allocator<pair<string,int> > >", 5274, G__RAT_Dict_jailbreak_680_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR(void) {
   /* vector<RAT::DS::MC,allocator<RAT::DS::MC> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_684_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC), G__defined_typename("vector<RAT::DS::MC,allocator<RAT::DS::MC> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_684_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC), G__defined_typename("vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_684_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_684_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_684_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MC,allocator<RAT::DS::MC> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_684_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MC,allocator<RAT::DS::MC> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_684_0_7, 107, -1, G__defined_typename("vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_684_0_8, 107, -1, G__defined_typename("vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_684_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_684_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type' 0 - sz u 'RAT::DS::MC' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_684_0_11, 107, -1, G__defined_typename("vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_684_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_684_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC), G__defined_typename("vector<RAT::DS::MC,allocator<RAT::DS::MC> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_684_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC), G__defined_typename("vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MC,allocator<RAT::DS::MC> >",3456,G__RAT_Dict_jailbreak_684_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MC,allocator<RAT::DS::MC> >",3456,G__RAT_Dict_jailbreak_684_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type' 0 - n u 'RAT::DS::MC' - 11 'RAT::DS::MC()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MC,allocator<RAT::DS::MC> >",3456,G__RAT_Dict_jailbreak_684_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MC,allocator<RAT::DS::MC> >",3456,G__RAT_Dict_jailbreak_684_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator' 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_iterator' 10 - first u 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator' 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_684_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_684_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_684_0_21, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_684_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_684_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MC' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_684_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_684_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator' - 0 - position u 'RAT::DS::MC' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_684_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator' - 0 - position u 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator' 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator' 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_684_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator' - 0 - position k - 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::size_type' 0 - n "
"u 'RAT::DS::MC' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_684_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_684_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_684_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator' - 0 - first u 'vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_684_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::MC,allocator<RAT::DS::MC> >", 3582, G__RAT_Dict_jailbreak_684_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR(void) {
   /* vector<RAT::DS::Calib,allocator<RAT::DS::Calib> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_688_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib), G__defined_typename("vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_688_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib), G__defined_typename("vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_688_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_688_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_688_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_688_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_688_0_7, 107, -1, G__defined_typename("vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_688_0_8, 107, -1, G__defined_typename("vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_688_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_688_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type' 0 - sz u 'RAT::DS::Calib' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_688_0_11, 107, -1, G__defined_typename("vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_688_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_688_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib), G__defined_typename("vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_688_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib), G__defined_typename("vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >",4118,G__RAT_Dict_jailbreak_688_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >",4118,G__RAT_Dict_jailbreak_688_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type' 0 - n u 'RAT::DS::Calib' - 11 'RAT::DS::Calib()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >",4118,G__RAT_Dict_jailbreak_688_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >",4118,G__RAT_Dict_jailbreak_688_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator' 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_iterator' 10 - first u 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator' 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_688_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_688_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_688_0_21, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_688_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_688_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RAT::DS::Calib' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_688_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_688_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator' - 0 - position u 'RAT::DS::Calib' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_688_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator' - 0 - position u 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator' 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator' 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_688_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator' - 0 - position k - 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::size_type' 0 - n "
"u 'RAT::DS::Calib' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_688_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_688_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_688_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator' - 0 - first u 'vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_688_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >", 4244, G__RAT_Dict_jailbreak_688_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR(void) {
   /* vector<RAT::DS::EV,allocator<RAT::DS::EV> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_692_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), G__defined_typename("vector<RAT::DS::EV,allocator<RAT::DS::EV> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_692_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), G__defined_typename("vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_692_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_692_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_692_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::EV,allocator<RAT::DS::EV> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_692_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::EV,allocator<RAT::DS::EV> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_692_0_7, 107, -1, G__defined_typename("vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_692_0_8, 107, -1, G__defined_typename("vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_692_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_692_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type' 0 - sz u 'RAT::DS::EV' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_692_0_11, 107, -1, G__defined_typename("vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_692_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_692_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), G__defined_typename("vector<RAT::DS::EV,allocator<RAT::DS::EV> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_692_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), G__defined_typename("vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::EV,allocator<RAT::DS::EV> >",3478,G__RAT_Dict_jailbreak_692_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::EV,allocator<RAT::DS::EV> >",3478,G__RAT_Dict_jailbreak_692_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type' 0 - n u 'RAT::DS::EV' - 11 'RAT::DS::EV()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::EV,allocator<RAT::DS::EV> >",3478,G__RAT_Dict_jailbreak_692_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::EV,allocator<RAT::DS::EV> >",3478,G__RAT_Dict_jailbreak_692_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator' 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_iterator' 10 - first u 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator' 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_692_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_692_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_692_0_21, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_692_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_692_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RAT::DS::EV' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_692_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_692_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator' - 0 - position u 'RAT::DS::EV' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_692_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator' - 0 - position u 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator' 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator' 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_692_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator' - 0 - position k - 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::size_type' 0 - n "
"u 'RAT::DS::EV' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_692_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_692_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_692_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator' - 0 - first u 'vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_692_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::EV,allocator<RAT::DS::EV> >", 3604, G__RAT_Dict_jailbreak_692_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLPMTInfo(void) {
   /* RAT::DS::PMTInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo));
   G__memfunc_setup("PMTInfo",637,G__RAT_Dict_jailbreak_767_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPMT",506,G__RAT_Dict_jailbreak_767_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVector3' - 11 - _pos u 'TVector3' - 11 - _dir "
"i - - 10 - _type u 'string' - 10 - _model", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddPMT",506,G__RAT_Dict_jailbreak_767_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TVector3' - 11 - _pos u 'TVector3' - 11 - _dir "
"i - - 10 - _type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPMTCount",1050,G__RAT_Dict_jailbreak_767_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__RAT_Dict_jailbreak_767_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 0, 1, 1, 1, 8, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__RAT_Dict_jailbreak_767_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id u 'TVector3' - 11 - _pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDirection",1217,G__RAT_Dict_jailbreak_767_0_7, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 0, 1, 1, 1, 8, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDirection",1229,G__RAT_Dict_jailbreak_767_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id u 'TVector3' - 11 - _dir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__RAT_Dict_jailbreak_767_0_9, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType",718,G__RAT_Dict_jailbreak_767_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id i - - 0 - _type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModel",785,G__RAT_Dict_jailbreak_767_0_11, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetModel",797,G__RAT_Dict_jailbreak_767_0_12, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id u 'string' - 0 - _model", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModelName",1170,G__RAT_Dict_jailbreak_767_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 1, 1, 1, 8, "i - - 0 - _modeltype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModelCount",1306,G__RAT_Dict_jailbreak_767_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_767_0_15, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::PMTInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_767_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PMTInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_767_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::PMTInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_767_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::PMTInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_767_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_767_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PMTInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_767_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PMTInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_767_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PMTInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_767_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PMTInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PMTInfo", 637, G__RAT_Dict_jailbreak_767_0_27, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::PMTInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PMTInfo", 763, G__RAT_Dict_jailbreak_767_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_767_0_29, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::PMTInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETVector3cOallocatorlETVector3gRsPgR(void) {
   /* vector<TVector3,allocator<TVector3> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_769_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), G__defined_typename("vector<TVector3,allocator<TVector3> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_769_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), G__defined_typename("vector<TVector3,allocator<TVector3> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_769_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_769_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_769_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR), G__defined_typename("vector<TVector3,allocator<TVector3> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_769_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR), G__defined_typename("vector<TVector3,allocator<TVector3> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_769_0_7, 107, -1, G__defined_typename("vector<TVector3,allocator<TVector3> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_769_0_8, 107, -1, G__defined_typename("vector<TVector3,allocator<TVector3> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_769_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_769_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - sz u 'TVector3' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_769_0_11, 107, -1, G__defined_typename("vector<TVector3,allocator<TVector3> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_769_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_769_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), G__defined_typename("vector<TVector3,allocator<TVector3> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_769_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), G__defined_typename("vector<TVector3,allocator<TVector3> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TVector3,allocator<TVector3> >",3464,G__RAT_Dict_jailbreak_769_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TVector3,allocator<TVector3> >",3464,G__RAT_Dict_jailbreak_769_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n u 'TVector3' - 11 'TVector3()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TVector3,allocator<TVector3> >",3464,G__RAT_Dict_jailbreak_769_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TVector3,allocator<TVector3> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TVector3,allocator<TVector3> >",3464,G__RAT_Dict_jailbreak_769_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TVector3,allocator<TVector3> >::iterator' 'vector<TVector3,allocator<TVector3> >::const_iterator' 10 - first u 'vector<TVector3,allocator<TVector3> >::iterator' 'vector<TVector3,allocator<TVector3> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_769_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TVector3,allocator<TVector3> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_769_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_769_0_21, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_769_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TVector3), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_769_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_769_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TVector3,allocator<TVector3> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_769_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TVector3,allocator<TVector3> >::iterator' - 0 - position u 'TVector3' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_769_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TVector3,allocator<TVector3> >::iterator' - 0 - position u 'vector<TVector3,allocator<TVector3> >::iterator' 'vector<TVector3,allocator<TVector3> >::const_iterator' 10 - first "
"u 'vector<TVector3,allocator<TVector3> >::iterator' 'vector<TVector3,allocator<TVector3> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_769_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TVector3,allocator<TVector3> >::iterator' - 0 - position k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n "
"u 'TVector3' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_769_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_769_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TVector3,allocator<TVector3> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_769_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TVector3,allocator<TVector3> >::iterator' - 0 - first u 'vector<TVector3,allocator<TVector3> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_769_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TVector3,allocator<TVector3> >", 3590, G__RAT_Dict_jailbreak_769_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLRun(void) {
   /* RAT::DS::Run */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun));
   G__memfunc_setup("Run",309,G__RAT_Dict_jailbreak_772_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__RAT_Dict_jailbreak_772_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__RAT_Dict_jailbreak_772_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__RAT_Dict_jailbreak_772_0_4, 109, -1, G__defined_typename("ULong64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType",718,G__RAT_Dict_jailbreak_772_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "m - 'ULong64_t' 0 - _type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStartTime",1213,G__RAT_Dict_jailbreak_772_0_6, 108, -1, G__defined_typename("time_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStartTime",1225,G__RAT_Dict_jailbreak_772_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'time_t' 0 - _startTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPMTInfo",925,G__RAT_Dict_jailbreak_772_0_8, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPMTInfo",937,G__RAT_Dict_jailbreak_772_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DS::PMTInfo' - 10 - _pmtinfo", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistPMTInfo",1162,G__RAT_Dict_jailbreak_772_0_10, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrunePMTInfo",1159,G__RAT_Dict_jailbreak_772_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_772_0_12, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::Run::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_772_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Run::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_772_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::Run::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_772_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::Run::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_772_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_772_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Run::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_772_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Run::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_772_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Run::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_772_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Run::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Run", 309, G__RAT_Dict_jailbreak_772_0_24, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::Run' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Run", 435, G__RAT_Dict_jailbreak_772_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_772_0_26, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::Run' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR(void) {
   /* vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_774_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo), G__defined_typename("vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_774_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo), G__defined_typename("vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_774_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_774_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_774_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_774_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_774_0_7, 107, -1, G__defined_typename("vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_774_0_8, 107, -1, G__defined_typename("vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_774_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_774_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type' 0 - sz u 'RAT::DS::PMTInfo' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_774_0_11, 107, -1, G__defined_typename("vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_774_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_774_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo), G__defined_typename("vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_774_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo), G__defined_typename("vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >",4442,G__RAT_Dict_jailbreak_774_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >",4442,G__RAT_Dict_jailbreak_774_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type' 0 - n u 'RAT::DS::PMTInfo' - 11 'RAT::DS::PMTInfo()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >",4442,G__RAT_Dict_jailbreak_774_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >",4442,G__RAT_Dict_jailbreak_774_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator' 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_iterator' 10 - first u 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator' 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_774_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_774_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_774_0_21, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_774_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_774_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RAT::DS::PMTInfo' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_774_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_774_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator' - 0 - position u 'RAT::DS::PMTInfo' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_774_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator' - 0 - position u 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator' 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator' 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_774_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator' - 0 - position k - 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::size_type' 0 - n "
"u 'RAT::DS::PMTInfo' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_774_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_774_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_774_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator' - 0 - first u 'vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_774_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >", 4568, G__RAT_Dict_jailbreak_774_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLRunStore(void) {
   /* RAT::DS::RunStore */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRunStore));
   G__memfunc_setup("Get",288,G__RAT_Dict_jailbreak_777_0_1, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRunStore), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (RAT::DS::RunStore* (*)())(&RAT::DS::RunStore::Get) ), 0);
   G__memfunc_setup("GetRun",597,G__RAT_Dict_jailbreak_777_0_2, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun), -1, 0, 1, 3, 1, 0, "U 'RAT::DS::Root' - 0 - ds", (char*)NULL, (void*) G__func2void( (RAT::DS::Run* (*)(RAT::DS::Root*))(&RAT::DS::RunStore::GetRun) ), 0);
   G__memfunc_setup("GetRun",597,G__RAT_Dict_jailbreak_777_0_3, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun), -1, 0, 1, 3, 1, 0, "i - - 0 - runID", (char*)NULL, (void*) G__func2void( (RAT::DS::Run* (*)(int))(&RAT::DS::RunStore::GetRun) ), 0);
   G__memfunc_setup("SetReadTree",1080,G__RAT_Dict_jailbreak_777_0_4, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) G__func2void( (void (*)(TTree*))(&RAT::DS::RunStore::SetReadTree) ), 0);
   G__memfunc_setup("SetWriteTree",1223,G__RAT_Dict_jailbreak_777_0_5, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) G__func2void( (void (*)(TTree*))(&RAT::DS::RunStore::SetWriteTree) ), 0);
   G__memfunc_setup("FlushWriteTree",1437,G__RAT_Dict_jailbreak_777_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::RunStore::FlushWriteTree) ), 0);
   G__memfunc_setup("AddNewRun",872,G__RAT_Dict_jailbreak_777_0_7, 121, -1, -1, 0, 1, 3, 1, 0, "U 'RAT::DS::Run' - 0 - run", (char*)NULL, (void*) G__func2void( (void (*)(RAT::DS::Run*))(&RAT::DS::RunStore::AddNewRun) ), 0);
   G__memfunc_setup("PreloadFromTree",1515,G__RAT_Dict_jailbreak_777_0_8, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TTree' - 0 - tree g - - 0 'false' alreadyWrittenToDisk", (char*)NULL, (void*) G__func2void( (void (*)(TTree*, bool))(&RAT::DS::RunStore::PreloadFromTree) ), 0);
   G__memfunc_setup("RunStore",834,G__RAT_Dict_jailbreak_777_0_9, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRunStore), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstanceGetRun",1418,G__RAT_Dict_jailbreak_777_0_10, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun), -1, 0, 1, 1, 1, 0, "U 'RAT::DS::Root' - 0 - ds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstanceGetRun",1418,G__RAT_Dict_jailbreak_777_0_11, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun), -1, 0, 1, 1, 1, 0, "i - - 0 - runID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstanceSetReadTree",1901,G__RAT_Dict_jailbreak_777_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstanceSetWriteTree",2044,G__RAT_Dict_jailbreak_777_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstanceFlushWriteTree",2258,G__RAT_Dict_jailbreak_777_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstanceAddNewRun",1693,G__RAT_Dict_jailbreak_777_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DS::Run' - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstancePreloadFromTree",2336,G__RAT_Dict_jailbreak_777_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - tree g - - 0 'false' writtenToDisk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_777_0_17, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::RunStore::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_777_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::RunStore::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_777_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::RunStore::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_777_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::RunStore::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RAT_Dict_jailbreak_777_0_21, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RAT_Dict_jailbreak_777_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RAT_Dict_jailbreak_777_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_777_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_777_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::RunStore::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_777_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::RunStore::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_777_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::RunStore::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_777_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::RunStore::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RunStore", 834, G__RAT_Dict_jailbreak_777_0_29, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRunStore), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::RunStore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RunStore", 960, G__RAT_Dict_jailbreak_777_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_777_0_31, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRunStore), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::RunStore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDSReader(void) {
   /* RAT::DSReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSReader));
   G__memfunc_setup("DSReader",746,G__RAT_Dict_jailbreak_788_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSReader), -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__RAT_Dict_jailbreak_788_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranchStatus",1534,G__RAT_Dict_jailbreak_788_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - bname g - - 0 '1' status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__RAT_Dict_jailbreak_788_0_4, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDS",439,G__RAT_Dict_jailbreak_788_0_5, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotal",804,G__RAT_Dict_jailbreak_788_0_6, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__RAT_Dict_jailbreak_788_0_7, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot), -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextEvent",929,G__RAT_Dict_jailbreak_788_0_8, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_788_0_9, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DSReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_788_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DSReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_788_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DSReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_788_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DSReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_788_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_788_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DSReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_788_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DSReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_788_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DSReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_788_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DSReader::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~DSReader", 872, G__RAT_Dict_jailbreak_788_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDSWriter(void) {
   /* RAT::DSWriter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSWriter));
   G__memfunc_setup("DSWriter",788,G__RAT_Dict_jailbreak_818_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSWriter), -1, 0, 3, 1, 1, 0, 
"C - - 10 - filename g - - 0 'false' update "
"i - - 0 '1024' autosave", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__RAT_Dict_jailbreak_818_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DS::Root' - 0 - ds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__RAT_Dict_jailbreak_818_0_3, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunTree",997,G__RAT_Dict_jailbreak_818_0_4, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteLog",813,G__RAT_Dict_jailbreak_818_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteStatus",1167,G__RAT_Dict_jailbreak_818_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,G__RAT_Dict_jailbreak_818_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_818_0_8, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DSWriter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_818_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DSWriter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_818_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DSWriter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_818_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DSWriter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_818_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_818_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DSWriter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_818_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DSWriter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_818_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DSWriter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_818_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DSWriter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DSWriter", 788, G__RAT_Dict_jailbreak_818_0_20, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSWriter), -1, 0, 1, 1, 1, 0, "u 'RAT::DSWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DSWriter", 914, G__RAT_Dict_jailbreak_818_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_818_0_22, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDSWriter), -1, 1, 1, 1, 1, 0, "u 'RAT::DSWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLTrackNode(void) {
   /* RAT::TrackNode */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode));
   G__memfunc_setup("TrackNode",891,G__RAT_Dict_jailbreak_819_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTrackStart",1215,G__RAT_Dict_jailbreak_819_0_2, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrackStart",1327,G__RAT_Dict_jailbreak_819_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsTrackEnd",968,G__RAT_Dict_jailbreak_819_0_4, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrackID",930,G__RAT_Dict_jailbreak_819_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrackID",942,G__RAT_Dict_jailbreak_819_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _trackID", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStepID",841,G__RAT_Dict_jailbreak_819_0_7, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStepID",853,G__RAT_Dict_jailbreak_819_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _stepID", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPDGCode",886,G__RAT_Dict_jailbreak_819_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPDGCode",898,G__RAT_Dict_jailbreak_819_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _pdgcode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticleName",1493,G__RAT_Dict_jailbreak_819_0_11, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParticleName",1505,G__RAT_Dict_jailbreak_819_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _particleName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrev",701,G__RAT_Dict_jailbreak_819_0_13, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPrev",713,G__RAT_Dict_jailbreak_819_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::TrackNode' - 0 - _prev", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNext",703,G__RAT_Dict_jailbreak_819_0_15, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNext",715,G__RAT_Dict_jailbreak_819_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::TrackNode' - 0 - _next", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNext",680,G__RAT_Dict_jailbreak_819_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::TrackNode' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddChild",749,G__RAT_Dict_jailbreak_819_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::TrackNode' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_819_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCTrackStep' - 11 - rhs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_819_0_20, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::TrackNode::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_819_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::TrackNode::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_819_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::TrackNode::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_819_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::TrackNode::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_819_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_819_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::TrackNode::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_819_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::TrackNode::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_819_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::TrackNode::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_819_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::TrackNode::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TrackNode", 891, G__RAT_Dict_jailbreak_819_0_32, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "u 'RAT::TrackNode' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackNode", 1017, G__RAT_Dict_jailbreak_819_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_819_0_34, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 1, 1, 1, 1, 0, "u 'RAT::TrackNode' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR(void) {
   /* vector<RAT::TrackNode*,allocator<RAT::TrackNode*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_821_0_1, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), G__defined_typename("vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_821_0_2, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), G__defined_typename("vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_821_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_821_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_821_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_821_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_821_0_7, 107, -1, G__defined_typename("vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_821_0_8, 107, -1, G__defined_typename("vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_821_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_821_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type' 0 - sz U 'RAT::TrackNode' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_821_0_11, 107, -1, G__defined_typename("vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_821_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_821_0_13, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), G__defined_typename("vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_821_0_14, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), G__defined_typename("vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >",4500,G__RAT_Dict_jailbreak_821_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >",4500,G__RAT_Dict_jailbreak_821_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type' 0 - n U 'RAT::TrackNode' - 41 '(RAT::TrackNode*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >",4500,G__RAT_Dict_jailbreak_821_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >",4500,G__RAT_Dict_jailbreak_821_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator' 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_iterator' 10 - first u 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator' 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_821_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_821_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_821_0_21, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_821_0_22, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_821_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::TrackNode' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_821_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_821_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator' - 0 - position U 'RAT::TrackNode' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_821_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator' - 0 - position u 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator' 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_iterator' 10 - first "
"u 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator' 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_821_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator' - 0 - position k - 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::size_type' 0 - n "
"U 'RAT::TrackNode' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_821_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_821_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_821_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator' - 0 - first u 'vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_821_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >", 4626, G__RAT_Dict_jailbreak_821_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLTrackCursor(void) {
   /* RAT::TrackCursor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackCursor));
   G__memfunc_setup("TrackCursor",1139,G__RAT_Dict_jailbreak_826_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackCursor), -1, 0, 2, 1, 1, 0, 
"U 'RAT::TrackNode' - 0 - node g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVerbose",1014,G__RAT_Dict_jailbreak_826_0_2, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVerbose",1026,G__RAT_Dict_jailbreak_826_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackStart",1027,G__RAT_Dict_jailbreak_826_0_4, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Prev",413,G__RAT_Dict_jailbreak_826_0_5, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Here",388,G__RAT_Dict_jailbreak_826_0_6, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Next",415,G__RAT_Dict_jailbreak_826_0_7, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackEnd",780,G__RAT_Dict_jailbreak_826_0_8, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StepCount",933,G__RAT_Dict_jailbreak_826_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Step",412,G__RAT_Dict_jailbreak_826_0_10, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChildCount",1005,G__RAT_Dict_jailbreak_826_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Child",484,G__RAT_Dict_jailbreak_826_0_12, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackChildCount",1506,G__RAT_Dict_jailbreak_826_0_13, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackChild",985,G__RAT_Dict_jailbreak_826_0_14, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parent",618,G__RAT_Dict_jailbreak_826_0_15, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackLength",1111,G__RAT_Dict_jailbreak_826_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTrackStart",1215,G__RAT_Dict_jailbreak_826_0_17, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTrackEnd",968,G__RAT_Dict_jailbreak_826_0_18, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Go",182,G__RAT_Dict_jailbreak_826_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::TrackNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoTrackStart",1209,G__RAT_Dict_jailbreak_826_0_20, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoPrev",595,G__RAT_Dict_jailbreak_826_0_21, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoNext",597,G__RAT_Dict_jailbreak_826_0_22, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoTrackEnd",962,G__RAT_Dict_jailbreak_826_0_23, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoStep",594,G__RAT_Dict_jailbreak_826_0_24, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoChild",666,G__RAT_Dict_jailbreak_826_0_25, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoTrackChild",1167,G__RAT_Dict_jailbreak_826_0_26, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoParent",800,G__RAT_Dict_jailbreak_826_0_27, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", "Go to the step in the parent particle where", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__RAT_Dict_jailbreak_826_0_28, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintTrack",1026,G__RAT_Dict_jailbreak_826_0_29, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintTrackIDs",1282,G__RAT_Dict_jailbreak_826_0_30, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 1, 3, 1, 0, "U 'RAT::TrackNode' - 0 - node", (char*)NULL, (void*) G__func2void( (string (*)(RAT::TrackNode*))(&RAT::TrackCursor::PrintTrackIDs) ), 0);
   G__memfunc_setup("Print",525,G__RAT_Dict_jailbreak_826_0_31, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 1, 3, 1, 0, "U 'RAT::TrackNode' - 0 - node", (char*)NULL, (void*) G__func2void( (string (*)(RAT::TrackNode*))(&RAT::TrackCursor::Print) ), 0);
   G__memfunc_setup("PrintTrack",1026,G__RAT_Dict_jailbreak_826_0_32, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 1, 3, 1, 0, "U 'RAT::TrackNode' - 0 - node", (char*)NULL, (void*) G__func2void( (string (*)(RAT::TrackNode*))(&RAT::TrackCursor::PrintTrack) ), 0);
   G__memfunc_setup("FindNextTrack",1301,G__RAT_Dict_jailbreak_826_0_33, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNextTrackNoDescend",2184,G__RAT_Dict_jailbreak_826_0_34, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNextTrack",1301,G__RAT_Dict_jailbreak_826_0_35, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "U 'RAT::TrackTest' - 0 - predicate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNextParticle",1620,G__RAT_Dict_jailbreak_826_0_36, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - particleName", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TrackCursor", 1139, G__RAT_Dict_jailbreak_826_0_37, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackCursor), -1, 0, 1, 1, 1, 0, "u 'RAT::TrackCursor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackCursor", 1265, G__RAT_Dict_jailbreak_826_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_826_0_39, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackCursor), -1, 1, 1, 1, 1, 0, "u 'RAT::TrackCursor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLTrackNav(void) {
   /* RAT::TrackNav */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNav));
   G__memfunc_setup("TrackNav",794,G__RAT_Dict_jailbreak_828_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNav), -1, 0, 2, 1, 1, 0, 
"U 'RAT::DS::Root' - 0 - ds g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackNav",794,G__RAT_Dict_jailbreak_828_0_2, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNav), -1, 0, 2, 1, 1, 0, 
"U 'RAT::DS::MC' - 0 - mc g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Load",384,G__RAT_Dict_jailbreak_828_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'RAT::DS::MC' - 0 - mc g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__RAT_Dict_jailbreak_828_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Head",370,G__RAT_Dict_jailbreak_828_0_5, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cursor",638,G__RAT_Dict_jailbreak_828_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackCursor), -1, 0, 1, 1, 1, 0, "g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindID",526,G__RAT_Dict_jailbreak_828_0_7, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "i - - 0 - trackID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindParticle",1205,G__RAT_Dict_jailbreak_828_0_8, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode), -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - particleName g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TrackNav", 794, G__RAT_Dict_jailbreak_828_0_9, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNav), -1, 0, 1, 1, 1, 0, "u 'RAT::TrackNav' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackNav", 920, G__RAT_Dict_jailbreak_828_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_828_0_11, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNav), -1, 1, 1, 1, 1, 0, "u 'RAT::TrackNav' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLHTTPDownloader(void) {
   /* RAT::HTTPDownloader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLHTTPDownloader));
   G__memfunc_setup("HTTPDownloader",1359,G__RAT_Dict_jailbreak_854_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLHTTPDownloader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__RAT_Dict_jailbreak_854_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fetch",490,G__RAT_Dict_jailbreak_854_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurlOpts",1128,G__RAT_Dict_jailbreak_854_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HTTPDownloader", 1485, G__RAT_Dict_jailbreak_854_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDBFieldCallback(void) {
   /* RAT::DBFieldCallback */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBFieldCallback));
   G__memfunc_setup("FetchIArray",1074,G__RAT_Dict_jailbreak_855_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 2, 1, 1, 0, 
"u 'string' - 11 - tableID u 'string' - 11 - fieldname", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FetchDArray",1069,G__RAT_Dict_jailbreak_855_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 1, 0, 
"u 'string' - 11 - tableID u 'string' - 11 - fieldname", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~DBFieldCallback", 1525, G__RAT_Dict_jailbreak_855_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_855_0_4, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBFieldCallback), -1, 1, 1, 1, 1, 0, "u 'RAT::DBFieldCallback' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDBTable(void) {
   /* RAT::DBTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable));
   G__memfunc_setup("DBTable",622,G__RAT_Dict_jailbreak_883_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DBTable",622,G__RAT_Dict_jailbreak_883_0_2, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), -1, 0, 1, 1, 1, 0, "u 'json::Value' - 1 - jsonDoc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DBTable",622,G__RAT_Dict_jailbreak_883_0_3, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - tblname u 'string' - 0 '\"\"' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,G__RAT_Dict_jailbreak_883_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__RAT_Dict_jailbreak_883_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - _tblname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,G__RAT_Dict_jailbreak_883_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIndex",804,G__RAT_Dict_jailbreak_883_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - _index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunBegin",1082,G__RAT_Dict_jailbreak_883_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunEnd",876,G__RAT_Dict_jailbreak_883_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUser",603,G__RAT_Dict_jailbreak_883_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDefault",897,G__RAT_Dict_jailbreak_883_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValidRun",993,G__RAT_Dict_jailbreak_883_0_12, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunRange",1102,G__RAT_Dict_jailbreak_883_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - _run_begin i - - 0 - _run_end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUser",715,G__RAT_Dict_jailbreak_883_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDefault",1009,G__RAT_Dict_jailbreak_883_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFieldType",1190,G__RAT_Dict_jailbreak_883_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType), -1, 0, 1, 1, 1, 8, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFieldList",1184,G__RAT_Dict_jailbreak_883_0_17, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetI",361,G__RAT_Dict_jailbreak_883_0_18, 105, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetD",356,G__RAT_Dict_jailbreak_883_0_19, 100, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetS",371,G__RAT_Dict_jailbreak_883_0_20, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__RAT_Dict_jailbreak_883_0_21, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIArray",872,G__RAT_Dict_jailbreak_883_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDArray",867,G__RAT_Dict_jailbreak_883_0_23, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSArray",882,G__RAT_Dict_jailbreak_883_0_24, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZArray",889,G__RAT_Dict_jailbreak_883_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<bool>"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJSON",602,G__RAT_Dict_jailbreak_883_0_26, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIArrayDeferred",1685,G__RAT_Dict_jailbreak_883_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name U 'RAT::DBFieldCallback' - 0 - callback", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDArrayDeferred",1680,G__RAT_Dict_jailbreak_883_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name U 'RAT::DBFieldCallback' - 0 - callback", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get<int>",741,G__RAT_Dict_jailbreak_883_0_29, 105, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get<double>",1045,G__RAT_Dict_jailbreak_883_0_30, 100, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get<bool>",838,G__RAT_Dict_jailbreak_883_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DBTable", 622, G__RAT_Dict_jailbreak_883_0_32, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), -1, 0, 1, 1, 1, 0, "u 'RAT::DBTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DBTable", 748, G__RAT_Dict_jailbreak_883_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_883_0_34, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), -1, 1, 1, 1, 1, 0, "u 'RAT::DBTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDB(void) {
   /* RAT::DB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDB));
   G__memfunc_setup("Get",288,G__RAT_Dict_jailbreak_904_0_1, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDB), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (RAT::DB* (*)())(&RAT::DB::Get) ), 0);
   G__memfunc_setup("ParseTableName",1380,G__RAT_Dict_jailbreak_904_0_2, 103, -1, -1, 0, 3, 3, 1, 0, 
"u 'string' - 0 - descriptor u 'string' - 1 - table "
"u 'string' - 1 - index", (char*)NULL, (void*) G__func2void( (bool (*)(string, string&, string&))(&RAT::DB::ParseTableName) ), 0);
   G__memfunc_setup("ReadRATDBFile",1129,G__RAT_Dict_jailbreak_904_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR), G__defined_typename("vector<RAT::DBTable*>"), 0, 1, 3, 1, 0, "u 'string' - 11 - filename", (char*)NULL, (void*) G__func2void( (vector<RAT::DBTable*> (*)(const string&))(&RAT::DB::ReadRATDBFile) ), 0);
   G__memfunc_setup("DB",134,G__RAT_Dict_jailbreak_904_0_4, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDB), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Load",384,G__RAT_Dict_jailbreak_904_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - filename g - - 0 'false' printPath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadTable",872,G__RAT_Dict_jailbreak_904_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DBTable' - 0 - table", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFile",768,G__RAT_Dict_jailbreak_904_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadAll",665,G__RAT_Dict_jailbreak_904_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - dirname u 'string' - 0 '\"*.ratdb\"' pattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadDefaults",1208,G__RAT_Dict_jailbreak_904_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__RAT_Dict_jailbreak_904_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetServer",931,G__RAT_Dict_jailbreak_904_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDefaultRun",1318,G__RAT_Dict_jailbreak_904_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDefaultRun",1306,G__RAT_Dict_jailbreak_904_0_13, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLink",686,G__RAT_Dict_jailbreak_904_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR), G__defined_typename("RAT::DBLinkPtr"), 0, 2, 1, 1, 0, 
"u 'string' - 0 - tblname u 'string' - 0 '\"\"' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLink",686,G__RAT_Dict_jailbreak_904_0_15, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR), G__defined_typename("RAT::DBLinkPtr"), 0, 3, 1, 1, 0, 
"u 'string' - 0 - tblname u 'string' - 0 - index "
"i - - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLinkGroup",1211,G__RAT_Dict_jailbreak_904_0_16, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEstringcOsimple_ptr_nocopylERATcLcLDBLinkgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOsimple_ptr_nocopylERATcLcLDBLinkgRsPgRsPgRsPgR), G__defined_typename("RAT::DBLinkGroup"), 0, 1, 1, 1, 0, "u 'string' - 0 - tblname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUserTable",1191,G__RAT_Dict_jailbreak_904_0_17, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - tblname u 'string' - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunTable",1085,G__RAT_Dict_jailbreak_904_0_18, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - tblname u 'string' - 0 - index "
"i - - 0 - runNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDefaultTable",1485,G__RAT_Dict_jailbreak_904_0_19, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - tblname u 'string' - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveLink",1020,G__RAT_Dict_jailbreak_904_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DBLink' - 0 - link", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumLinks",817,G__RAT_Dict_jailbreak_904_0_21, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FetchIArray",1074,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 2, 1, 1, 0, 
"u 'string' - 11 - tableID u 'string' - 11 - fieldname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FetchDArray",1069,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 1, 0, 
"u 'string' - 11 - tableID u 'string' - 11 - fieldname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindTable",873,G__RAT_Dict_jailbreak_904_0_24, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - tblname u 'string' - 0 - index "
"i - - 0 - runNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindOrCreateTable",1662,G__RAT_Dict_jailbreak_904_0_25, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - tblname u 'string' - 0 - index "
"i - - 0 - runNumber", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DB", 260, G__RAT_Dict_jailbreak_904_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDBLink(void) {
   /* RAT::DBLink */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink));
   G__memfunc_setup("DBLink",532,G__RAT_Dict_jailbreak_905_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink), -1, 0, 4, 1, 1, 0, 
"U 'RAT::DB' - 0 - db u 'string' - 0 - tblname "
"u 'string' - 0 - index i - - 0 '1' currentRun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,G__RAT_Dict_jailbreak_905_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,G__RAT_Dict_jailbreak_905_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentRun",1348,G__RAT_Dict_jailbreak_905_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - runNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetI",361,G__RAT_Dict_jailbreak_905_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetD",356,G__RAT_Dict_jailbreak_905_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetS",371,G__RAT_Dict_jailbreak_905_0_7, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__RAT_Dict_jailbreak_905_0_8, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIArray",872,G__RAT_Dict_jailbreak_905_0_9, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFArrayFromD",1341,G__RAT_Dict_jailbreak_905_0_10, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DArrayToFArray",1355,G__RAT_Dict_jailbreak_905_0_11, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDArray",867,G__RAT_Dict_jailbreak_905_0_12, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSArray",882,G__RAT_Dict_jailbreak_905_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZArray",889,G__RAT_Dict_jailbreak_905_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<bool>"), 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJSON",602,G__RAT_Dict_jailbreak_905_0_15, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_jsoncLcLValue), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unlink",625,G__RAT_Dict_jailbreak_905_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DBLink", 532, G__RAT_Dict_jailbreak_905_0_17, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink), -1, 0, 1, 1, 1, 0, "u 'RAT::DBLink' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DBLink", 658, G__RAT_Dict_jailbreak_905_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_905_0_19, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink), -1, 1, 1, 1, 1, 0, "u 'RAT::DBLink' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncsimple_ptr_nocopylERATcLcLDBLinkgR(void) {
   /* simple_ptr_nocopy<RAT::DBLink> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR));
   G__memfunc_setup("simple_ptr_nocopy<RAT::DBLink>",2847,G__RAT_Dict_jailbreak_917_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("simple_ptr_nocopy<RAT::DBLink>",2847,G__RAT_Dict_jailbreak_917_0_2, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR), -1, 0, 1, 1, 1, 0, "u 'simple_ptr_nocopy<RAT::DBLink>' - 11 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_917_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR), -1, 1, 1, 1, 1, 0, "u 'simple_ptr_nocopy<RAT::DBLink>' - 11 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("simple_ptr_nocopy<RAT::DBLink>",2847,G__RAT_Dict_jailbreak_917_0_4, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR), -1, 0, 1, 5, 1, 0, "U 'RAT::DBLink' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_917_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR), -1, 1, 1, 1, 1, 0, "U 'RAT::DBLink' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator bool",1336,G__RAT_Dict_jailbreak_917_0_6, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!",909,G__RAT_Dict_jailbreak_917_0_7, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("present",769,G__RAT_Dict_jailbreak_917_0_8, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("null",443,G__RAT_Dict_jailbreak_917_0_9, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__RAT_Dict_jailbreak_917_0_10, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink), -1, 1, 0, 1, 1, 32, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__RAT_Dict_jailbreak_917_0_11, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink), -1, 1, 0, 1, 1, 41, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__RAT_Dict_jailbreak_917_0_12, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink), -1, 0, 0, 1, 1, 32, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__RAT_Dict_jailbreak_917_0_13, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink), -1, 0, 0, 1, 1, 41, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("value",541,G__RAT_Dict_jailbreak_917_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink), -1, 1, 0, 1, 1, 32, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("value",541,G__RAT_Dict_jailbreak_917_0_15, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink), -1, 1, 0, 1, 1, 41, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__RAT_Dict_jailbreak_917_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DBLink' - 0 '0' data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pointer",769,G__RAT_Dict_jailbreak_917_0_17, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pointer",769,G__RAT_Dict_jailbreak_917_0_18, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("aliases",738,G__RAT_Dict_jailbreak_917_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "u 'simple_ptr_nocopy<RAT::DBLink>' - 11 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alias_count",1170,G__RAT_Dict_jailbreak_917_0_20, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_917_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~simple_ptr_nocopy<RAT::DBLink>", 2973, G__RAT_Dict_jailbreak_917_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR(void) {
   /* vector<RAT::DBTable*,allocator<RAT::DBTable*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_926_0_1, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), G__defined_typename("vector<RAT::DBTable*,allocator<RAT::DBTable*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_926_0_2, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), G__defined_typename("vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_926_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_926_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_926_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DBTable*,allocator<RAT::DBTable*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_926_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DBTable*,allocator<RAT::DBTable*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_926_0_7, 107, -1, G__defined_typename("vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_926_0_8, 107, -1, G__defined_typename("vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_926_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_926_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type' 0 - sz U 'RAT::DBTable' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_926_0_11, 107, -1, G__defined_typename("vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_926_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_926_0_13, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), G__defined_typename("vector<RAT::DBTable*,allocator<RAT::DBTable*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_926_0_14, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), G__defined_typename("vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DBTable*,allocator<RAT::DBTable*> >",3962,G__RAT_Dict_jailbreak_926_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DBTable*,allocator<RAT::DBTable*> >",3962,G__RAT_Dict_jailbreak_926_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type' 0 - n U 'RAT::DBTable' - 41 '(RAT::DBTable*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DBTable*,allocator<RAT::DBTable*> >",3962,G__RAT_Dict_jailbreak_926_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DBTable*,allocator<RAT::DBTable*> >",3962,G__RAT_Dict_jailbreak_926_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator' 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_iterator' 10 - first u 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator' 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_926_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_926_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_926_0_21, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_926_0_22, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_926_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DBTable' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_926_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_926_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator' - 0 - position U 'RAT::DBTable' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_926_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator' - 0 - position u 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator' 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_iterator' 10 - first "
"u 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator' 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_926_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator' - 0 - position k - 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::size_type' 0 - n "
"U 'RAT::DBTable' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_926_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_926_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_926_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator' - 0 - first u 'vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_926_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DBTable*,allocator<RAT::DBTable*> >", 4088, G__RAT_Dict_jailbreak_926_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDBTextLoader(void) {
   /* RAT::DBTextLoader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTextLoader));
   G__memfunc_setup("parse",539,G__RAT_Dict_jailbreak_969_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR), G__defined_typename("vector<RAT::DBTable*>"), 0, 1, 3, 1, 0, "u 'string' - 0 - filename", (char*)NULL, (void*) G__func2void( (vector<RAT::DBTable*> (*)(string))(&RAT::DBTextLoader::parse) ), 0);
   // automatic default constructor
   G__memfunc_setup("DBTextLoader", 1154, G__RAT_Dict_jailbreak_969_0_2, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTextLoader), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DBTextLoader", 1154, G__RAT_Dict_jailbreak_969_0_3, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTextLoader), -1, 0, 1, 1, 1, 0, "u 'RAT::DBTextLoader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DBTextLoader", 1280, G__RAT_Dict_jailbreak_969_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_969_0_5, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTextLoader), -1, 1, 1, 1, 1, 0, "u 'RAT::DBTextLoader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDBJsonLoader(void) {
   /* RAT::DBJsonLoader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBJsonLoader));
   G__memfunc_setup("parse",539,G__RAT_Dict_jailbreak_970_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR), G__defined_typename("vector<RAT::DBTable*>"), 0, 1, 3, 1, 0, "u 'string' - 11 - filename", (char*)NULL, (void*) G__func2void( (vector<RAT::DBTable*> (*)(const string&))(&RAT::DBJsonLoader::parse) ), 0);
   G__memfunc_setup("parseString",1170,G__RAT_Dict_jailbreak_970_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR), G__defined_typename("vector<RAT::DBTable*>"), 0, 1, 3, 1, 0, "u 'string' - 11 - data", (char*)NULL, (void*) G__func2void( (vector<RAT::DBTable*> (*)(const string&))(&RAT::DBJsonLoader::parseString) ), 0);
   G__memfunc_setup("convertTable",1257,G__RAT_Dict_jailbreak_970_0_3, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable), -1, 0, 1, 3, 1, 0, "u 'json::Value' - 1 - jsonDoc", (char*)NULL, (void*) G__func2void( (RAT::DBTable* (*)(json::Value&))(&RAT::DBJsonLoader::convertTable) ), 0);
   // automatic default constructor
   G__memfunc_setup("DBJsonLoader", 1143, G__RAT_Dict_jailbreak_970_0_4, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBJsonLoader), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DBJsonLoader", 1143, G__RAT_Dict_jailbreak_970_0_5, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBJsonLoader), -1, 0, 1, 1, 1, 0, "u 'RAT::DBJsonLoader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DBJsonLoader", 1269, G__RAT_Dict_jailbreak_970_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RAT_Dict_jailbreak_970_0_7, (int) ('u'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDBJsonLoader), -1, 1, 1, 1, 1, 0, "u 'RAT::DBJsonLoader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLObjInt(void) {
   /* RAT::ObjInt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjInt));
   G__memfunc_setup("ObjInt",582,G__RAT_Dict_jailbreak_971_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjInt), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ObjInt",582,G__RAT_Dict_jailbreak_971_0_2, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjInt), -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ObjInt",582,G__RAT_Dict_jailbreak_971_0_3, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjInt), -1, 0, 1, 1, 1, 0, "u 'RAT::ObjInt' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_971_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjInt), -1, 1, 1, 1, 1, 0, "u 'RAT::ObjInt' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInt",587,G__RAT_Dict_jailbreak_971_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInt",599,G__RAT_Dict_jailbreak_971_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_971_0_7, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjInt), -1, 1, 1, 1, 1, 0, "i - - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator int",1239,G__RAT_Dict_jailbreak_971_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_971_0_9, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::ObjInt::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_971_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::ObjInt::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_971_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::ObjInt::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_971_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::ObjInt::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_971_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_971_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::ObjInt::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_971_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::ObjInt::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_971_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::ObjInt::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_971_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::ObjInt::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ObjInt", 708, G__RAT_Dict_jailbreak_971_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLObjDbl(void) {
   /* RAT::ObjDbl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjDbl));
   G__memfunc_setup("ObjDbl",557,G__RAT_Dict_jailbreak_972_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjDbl), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ObjDbl",557,G__RAT_Dict_jailbreak_972_0_2, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjDbl), -1, 0, 1, 1, 1, 0, "d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ObjDbl",557,G__RAT_Dict_jailbreak_972_0_3, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjDbl), -1, 0, 1, 1, 1, 0, "u 'RAT::ObjDbl' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_972_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjDbl), -1, 1, 1, 1, 1, 0, "u 'RAT::ObjDbl' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDbl",562,G__RAT_Dict_jailbreak_972_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDbl",574,G__RAT_Dict_jailbreak_972_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_972_0_7, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLObjDbl), -1, 1, 1, 1, 1, 0, "d - - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator double",1543,G__RAT_Dict_jailbreak_972_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RAT_Dict_jailbreak_972_0_9, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::ObjDbl::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RAT_Dict_jailbreak_972_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::ObjDbl::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RAT_Dict_jailbreak_972_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::ObjDbl::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RAT_Dict_jailbreak_972_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::ObjDbl::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RAT_Dict_jailbreak_972_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RAT_Dict_jailbreak_972_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::ObjDbl::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RAT_Dict_jailbreak_972_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::ObjDbl::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RAT_Dict_jailbreak_972_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::ObjDbl::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RAT_Dict_jailbreak_972_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::ObjDbl::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ObjDbl", 683, G__RAT_Dict_jailbreak_972_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEstringcOstringgR(void) {
   /* pair<string,string> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOstringgR));
   G__memfunc_setup("pair<string,string>",1920,G__RAT_Dict_jailbreak_973_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOstringgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<string,string>",1920,G__RAT_Dict_jailbreak_973_0_2, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOstringgR), -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - a u 'string' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOstringgR), -1, 1, 1, 1, 4, 0, "u 'pair<string,string>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<string,string>", 1920, G__RAT_Dict_jailbreak_973_0_4, (int) ('i'), G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEstringcOstringgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,string>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<string,string>", 2046, G__RAT_Dict_jailbreak_973_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR(void) {
   /* map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__memfunc_setup("map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >",9686,G__RAT_Dict_jailbreak_976_0_1, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >",9686,G__RAT_Dict_jailbreak_976_0_2, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator' - 0 - first u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >",9686,G__RAT_Dict_jailbreak_976_0_3, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator' - 0 - first u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >",9686,G__RAT_Dict_jailbreak_976_0_4, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_976_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_976_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_976_0_7, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_976_0_8, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_976_0_9, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_976_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_976_0_11, 107, -1, G__defined_typename("map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_976_0_12, 107, -1, G__defined_typename("map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_976_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR), -1, 1, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_976_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_pairlEmaplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<int,vector<int,allocator<int> > >' 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_976_0_15, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator' - 0 - position u 'pair<int,vector<int,allocator<int> > >' 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_976_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator' - 0 - first u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_976_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator' - 0 - first u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_976_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_976_0_19, 107, -1, G__defined_typename("map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::size_type"), 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_976_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator' - 0 - first u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_976_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_976_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__RAT_Dict_jailbreak_976_0_23, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__RAT_Dict_jailbreak_976_0_24, 107, -1, G__defined_typename("map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::size_type"), 0, 1, 1, 1, 8, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__RAT_Dict_jailbreak_976_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__RAT_Dict_jailbreak_976_0_26, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >", 9812, G__RAT_Dict_jailbreak_976_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR(void) {
   /* vector<RAT::DS::Root,allocator<RAT::DS::Root> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_982_0_1, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot), G__defined_typename("vector<RAT::DS::Root,allocator<RAT::DS::Root> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_982_0_2, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot), G__defined_typename("vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_982_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_982_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_982_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::Root,allocator<RAT::DS::Root> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_982_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::Root,allocator<RAT::DS::Root> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_982_0_7, 107, -1, G__defined_typename("vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_982_0_8, 107, -1, G__defined_typename("vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_982_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_982_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type' 0 - sz u 'RAT::DS::Root' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_982_0_11, 107, -1, G__defined_typename("vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_982_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_982_0_13, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot), G__defined_typename("vector<RAT::DS::Root,allocator<RAT::DS::Root> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_982_0_14, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot), G__defined_typename("vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::Root,allocator<RAT::DS::Root> >",4008,G__RAT_Dict_jailbreak_982_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::Root,allocator<RAT::DS::Root> >",4008,G__RAT_Dict_jailbreak_982_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type' 0 - n u 'RAT::DS::Root' - 11 'RAT::DS::Root()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::Root,allocator<RAT::DS::Root> >",4008,G__RAT_Dict_jailbreak_982_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::Root,allocator<RAT::DS::Root> >",4008,G__RAT_Dict_jailbreak_982_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator' 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_iterator' 10 - first u 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator' 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_982_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_982_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_982_0_21, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_982_0_22, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_982_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RAT::DS::Root' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_982_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_982_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator' - 0 - position u 'RAT::DS::Root' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_982_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator' - 0 - position u 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator' 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator' 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_982_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator' - 0 - position k - 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::size_type' 0 - n "
"u 'RAT::DS::Root' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_982_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_982_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_982_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator' - 0 - first u 'vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_982_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::Root,allocator<RAT::DS::Root> >", 4134, G__RAT_Dict_jailbreak_982_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR(void) {
   /* vector<RAT::DS::EV*,allocator<RAT::DS::EV*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_986_0_1, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), G__defined_typename("vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_986_0_2, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), G__defined_typename("vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_986_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_986_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_986_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_986_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_986_0_7, 107, -1, G__defined_typename("vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_986_0_8, 107, -1, G__defined_typename("vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_986_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_986_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type' 0 - sz U 'RAT::DS::EV' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_986_0_11, 107, -1, G__defined_typename("vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_986_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_986_0_13, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), G__defined_typename("vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_986_0_14, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), G__defined_typename("vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >",3562,G__RAT_Dict_jailbreak_986_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >",3562,G__RAT_Dict_jailbreak_986_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type' 0 - n U 'RAT::DS::EV' - 41 '(RAT::DS::EV*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >",3562,G__RAT_Dict_jailbreak_986_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >",3562,G__RAT_Dict_jailbreak_986_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator' 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_iterator' 10 - first u 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator' 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_986_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_986_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_986_0_21, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_986_0_22, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_986_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DS::EV' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_986_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_986_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator' - 0 - position U 'RAT::DS::EV' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_986_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator' - 0 - position u 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator' 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator' 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_986_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator' - 0 - position k - 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::size_type' 0 - n "
"U 'RAT::DS::EV' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_986_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_986_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_986_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator' - 0 - first u 'vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_986_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >", 3688, G__RAT_Dict_jailbreak_986_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR(void) {
   /* vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_990_0_1, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), G__defined_typename("vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_990_0_2, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), G__defined_typename("vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_990_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_990_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_990_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_990_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_990_0_7, 107, -1, G__defined_typename("vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_990_0_8, 107, -1, G__defined_typename("vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_990_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_990_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type' 0 - sz U 'RAT::DS::PMT' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_990_0_11, 107, -1, G__defined_typename("vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_990_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_990_0_13, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), G__defined_typename("vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_990_0_14, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), G__defined_typename("vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >",3734,G__RAT_Dict_jailbreak_990_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >",3734,G__RAT_Dict_jailbreak_990_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type' 0 - n U 'RAT::DS::PMT' - 41 '(RAT::DS::PMT*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >",3734,G__RAT_Dict_jailbreak_990_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >",3734,G__RAT_Dict_jailbreak_990_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator' 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_iterator' 10 - first u 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator' 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_990_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_990_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_990_0_21, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_990_0_22, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_990_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DS::PMT' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_990_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_990_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator' - 0 - position U 'RAT::DS::PMT' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_990_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator' - 0 - position u 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator' 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator' 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_990_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator' - 0 - position k - 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::size_type' 0 - n "
"U 'RAT::DS::PMT' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_990_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_990_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_990_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator' - 0 - first u 'vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_990_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >", 3860, G__RAT_Dict_jailbreak_990_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR(void) {
   /* vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_994_0_1, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), G__defined_typename("vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_994_0_2, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), G__defined_typename("vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_994_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_994_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_994_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_994_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_994_0_7, 107, -1, G__defined_typename("vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_994_0_8, 107, -1, G__defined_typename("vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_994_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_994_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type' 0 - sz U 'RAT::DS::MCParticle' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_994_0_11, 107, -1, G__defined_typename("vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_994_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_994_0_13, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), G__defined_typename("vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_994_0_14, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), G__defined_typename("vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >",5180,G__RAT_Dict_jailbreak_994_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >",5180,G__RAT_Dict_jailbreak_994_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type' 0 - n U 'RAT::DS::MCParticle' - 41 '(RAT::DS::MCParticle*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >",5180,G__RAT_Dict_jailbreak_994_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >",5180,G__RAT_Dict_jailbreak_994_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator' 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_iterator' 10 - first u 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator' 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_994_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_994_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_994_0_21, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_994_0_22, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_994_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DS::MCParticle' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_994_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_994_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator' - 0 - position U 'RAT::DS::MCParticle' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_994_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator' - 0 - position u 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator' 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator' 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_994_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator' - 0 - position k - 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::size_type' 0 - n "
"U 'RAT::DS::MCParticle' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_994_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_994_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_994_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator' - 0 - first u 'vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_994_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >", 5306, G__RAT_Dict_jailbreak_994_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR(void) {
   /* vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_998_0_1, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), G__defined_typename("vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_998_0_2, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), G__defined_typename("vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_998_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_998_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_998_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_998_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_998_0_7, 107, -1, G__defined_typename("vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_998_0_8, 107, -1, G__defined_typename("vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_998_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_998_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type' 0 - sz U 'RAT::DS::MCTrack' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_998_0_11, 107, -1, G__defined_typename("vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_998_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_998_0_13, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), G__defined_typename("vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_998_0_14, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), G__defined_typename("vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >",4542,G__RAT_Dict_jailbreak_998_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >",4542,G__RAT_Dict_jailbreak_998_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type' 0 - n U 'RAT::DS::MCTrack' - 41 '(RAT::DS::MCTrack*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >",4542,G__RAT_Dict_jailbreak_998_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >",4542,G__RAT_Dict_jailbreak_998_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator' 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_iterator' 10 - first u 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator' 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_998_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_998_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_998_0_21, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_998_0_22, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_998_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DS::MCTrack' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_998_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_998_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator' - 0 - position U 'RAT::DS::MCTrack' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_998_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator' - 0 - position u 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator' 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator' 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_998_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator' - 0 - position k - 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::size_type' 0 - n "
"U 'RAT::DS::MCTrack' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_998_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_998_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_998_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator' - 0 - first u 'vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_998_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >", 4668, G__RAT_Dict_jailbreak_998_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR(void) {
   /* vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_1002_0_1, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), G__defined_typename("vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_1002_0_2, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), G__defined_typename("vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_1002_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_1002_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_1002_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_1002_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_1002_0_7, 107, -1, G__defined_typename("vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_1002_0_8, 107, -1, G__defined_typename("vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_1002_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_1002_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type' 0 - sz U 'RAT::DS::MCPMT' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_1002_0_11, 107, -1, G__defined_typename("vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_1002_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_1002_0_13, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), G__defined_typename("vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_1002_0_14, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), G__defined_typename("vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >",4022,G__RAT_Dict_jailbreak_1002_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >",4022,G__RAT_Dict_jailbreak_1002_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type' 0 - n U 'RAT::DS::MCPMT' - 41 '(RAT::DS::MCPMT*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >",4022,G__RAT_Dict_jailbreak_1002_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >",4022,G__RAT_Dict_jailbreak_1002_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator' 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_iterator' 10 - first u 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator' 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_1002_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_1002_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_1002_0_21, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_1002_0_22, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_1002_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DS::MCPMT' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_1002_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_1002_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator' - 0 - position U 'RAT::DS::MCPMT' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_1002_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator' - 0 - position u 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator' 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator' 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_1002_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator' - 0 - position k - 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::size_type' 0 - n "
"U 'RAT::DS::MCPMT' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_1002_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_1002_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_1002_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator' - 0 - first u 'vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_1002_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >", 4148, G__RAT_Dict_jailbreak_1002_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR(void) {
   /* vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_1006_0_1, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), G__defined_typename("vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_1006_0_2, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), G__defined_typename("vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_1006_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_1006_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_1006_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_1006_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_1006_0_7, 107, -1, G__defined_typename("vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_1006_0_8, 107, -1, G__defined_typename("vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_1006_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_1006_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type' 0 - sz U 'RAT::DS::MCPhoton' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_1006_0_11, 107, -1, G__defined_typename("vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_1006_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_1006_0_13, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), G__defined_typename("vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_1006_0_14, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), G__defined_typename("vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >",4804,G__RAT_Dict_jailbreak_1006_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >",4804,G__RAT_Dict_jailbreak_1006_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type' 0 - n U 'RAT::DS::MCPhoton' - 41 '(RAT::DS::MCPhoton*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >",4804,G__RAT_Dict_jailbreak_1006_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >",4804,G__RAT_Dict_jailbreak_1006_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator' 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_iterator' 10 - first u 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator' 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_1006_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_1006_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_1006_0_21, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_1006_0_22, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_1006_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DS::MCPhoton' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_1006_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_1006_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator' - 0 - position U 'RAT::DS::MCPhoton' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_1006_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator' - 0 - position u 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator' 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator' 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_1006_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator' - 0 - position k - 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::size_type' 0 - n "
"U 'RAT::DS::MCPhoton' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_1006_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_1006_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_1006_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator' - 0 - first u 'vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_1006_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >", 4930, G__RAT_Dict_jailbreak_1006_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR(void) {
   /* vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR));
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_1010_0_1, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), G__defined_typename("vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RAT_Dict_jailbreak_1010_0_2, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), G__defined_typename("vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RAT_Dict_jailbreak_1010_0_3, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RAT_Dict_jailbreak_1010_0_4, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RAT_Dict_jailbreak_1010_0_5, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RAT_Dict_jailbreak_1010_0_6, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RAT_Dict_jailbreak_1010_0_7, 107, -1, G__defined_typename("vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RAT_Dict_jailbreak_1010_0_8, 107, -1, G__defined_typename("vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_1010_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RAT_Dict_jailbreak_1010_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type' 0 - sz U 'RAT::DS::MCTrackStep' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RAT_Dict_jailbreak_1010_0_11, 107, -1, G__defined_typename("vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RAT_Dict_jailbreak_1010_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_1010_0_13, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), G__defined_typename("vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RAT_Dict_jailbreak_1010_0_14, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), G__defined_typename("vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >",5366,G__RAT_Dict_jailbreak_1010_0_15, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >",5366,G__RAT_Dict_jailbreak_1010_0_16, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type' 0 - n U 'RAT::DS::MCTrackStep' - 41 '(RAT::DS::MCTrackStep*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >",5366,G__RAT_Dict_jailbreak_1010_0_17, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >",5366,G__RAT_Dict_jailbreak_1010_0_18, 105, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator' 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_iterator' 10 - first u 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator' 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RAT_Dict_jailbreak_1010_0_19, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RAT_Dict_jailbreak_1010_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RAT_Dict_jailbreak_1010_0_21, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RAT_Dict_jailbreak_1010_0_22, 85, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RAT_Dict_jailbreak_1010_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DS::MCTrackStep' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RAT_Dict_jailbreak_1010_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_1010_0_25, 117, G__get_linked_tagnum(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator' - 0 - position U 'RAT::DS::MCTrackStep' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_1010_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator' - 0 - position u 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator' 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_iterator' 10 - first "
"u 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator' 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RAT_Dict_jailbreak_1010_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator' - 0 - position k - 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::size_type' 0 - n "
"U 'RAT::DS::MCTrackStep' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RAT_Dict_jailbreak_1010_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_1010_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RAT_Dict_jailbreak_1010_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator' - 0 - first u 'vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RAT_Dict_jailbreak_1010_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >", 5492, G__RAT_Dict_jailbreak_1010_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRAT_Dict_jailbreak() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRAT_Dict_jailbreak() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {
}

static void G__cpp_setup_func40() {
}

static void G__cpp_setup_func41() {
}

static void G__cpp_setup_func42() {
}

static void G__cpp_setup_func43() {
}

static void G__cpp_setup_func44() {
}

static void G__cpp_setup_func45() {
}

static void G__cpp_setup_func46() {
}

static void G__cpp_setup_func47() {
}

static void G__cpp_setup_func48() {
}

static void G__cpp_setup_func49() {
}

static void G__cpp_setup_func50() {
}

static void G__cpp_setup_func51() {
}

static void G__cpp_setup_func52() {
}

static void G__cpp_setup_func53() {
}

static void G__cpp_setup_func54() {
}

static void G__cpp_setup_func55() {
}

static void G__cpp_setup_func56() {
}

static void G__cpp_setup_func57() {
}

static void G__cpp_setup_func58() {
}

static void G__cpp_setup_func59() {
}

static void G__cpp_setup_func60() {
}

static void G__cpp_setup_func61() {
}

static void G__cpp_setup_func62() {
}

static void G__cpp_setup_func63() {
}

static void G__cpp_setup_func64() {
}

static void G__cpp_setup_func65() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRAT_Dict_jailbreak() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
  G__cpp_setup_func40();
  G__cpp_setup_func41();
  G__cpp_setup_func42();
  G__cpp_setup_func43();
  G__cpp_setup_func44();
  G__cpp_setup_func45();
  G__cpp_setup_func46();
  G__cpp_setup_func47();
  G__cpp_setup_func48();
  G__cpp_setup_func49();
  G__cpp_setup_func50();
  G__cpp_setup_func51();
  G__cpp_setup_func52();
  G__cpp_setup_func53();
  G__cpp_setup_func54();
  G__cpp_setup_func55();
  G__cpp_setup_func56();
  G__cpp_setup_func57();
  G__cpp_setup_func58();
  G__cpp_setup_func59();
  G__cpp_setup_func60();
  G__cpp_setup_func61();
  G__cpp_setup_func62();
  G__cpp_setup_func63();
  G__cpp_setup_func64();
  G__cpp_setup_func65();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RAT_Dict_jailbreakLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR = { "basic_ostringstream<char,char_traits<char>,allocator<char> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TTimeStamp = { "TTimeStamp" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RAT = { "RAT" , 110 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDS = { "RAT::DS" , 110 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle = { "RAT::DS::MCParticle" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep = { "RAT::DS::MCTrackStep" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack = { "RAT::DS::MCTrack" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR = { "vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiterator = { "vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_pairlEstringcOintgR = { "pair<string,int>" , 115 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR = { "map<string,double,less<string>,allocator<pair<const string,double> > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_lesslEintgR = { "less<int>" , 115 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_allocatorlEpairlEconstsPintcOintgRsPgR = { "allocator<pair<const int,int> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_pairlEintcOintgR = { "pair<int,int>" , 115 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcLcLiterator = { "map<int,int,less<int>,allocator<pair<const int,int> > >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcLcLreverse_iterator = { "map<int,int,less<int>,allocator<pair<const int,int> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCSummary = { "RAT::DS::MCSummary" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton = { "RAT::DS::MCPhoton" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_oftext = { "oftext" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_ostext = { "ostext" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_omtext = { "omtext" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlEotextcOallocatorlEotextgRsPgR = { "vector<otext,allocator<otext> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEotextcOallocatorlEotextgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<otext,allocator<otext> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlEitextcOallocatorlEitextgRsPgR = { "vector<itext,allocator<itext> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEitextcOallocatorlEitextgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<itext,allocator<itext> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR = { "set<string,less<string>,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TMap = { "TMap" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_json = { "json" , 110 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_jsoncLcLValue = { "json::Value" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_maplEstringcOjsoncLcLValuecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOjsoncLcLValuegRsPgRsPgR = { "map<string,json::Value,less<string>,allocator<pair<const string,json::Value> > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlEjsoncLcLValuecOallocatorlEjsoncLcLValuegRsPgR = { "vector<json::Value,allocator<json::Value> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEjsoncLcLValuecOallocatorlEjsoncLcLValuegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<json::Value,allocator<json::Value> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_jsoncLcLTData = { "json::TData" , 117 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_jsoncLcLType = { "json::Type" , 101 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLLog = { "RAT::Log" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLLogcLcLLevel = { "RAT::Log::Level" , 101 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_pairlEstringcOTObjectmUgR = { "pair<string,TObject*>" , 115 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgR = { "vector<pair<string,TObject*>,allocator<pair<string,TObject*> > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<string,TObject*>,allocator<pair<string,TObject*> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT = { "RAT::DS::MCPMT" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR = { "vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiterator = { "vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC = { "RAT::DS::MC" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR = { "vector<RAT::DS::MCSummary,allocator<RAT::DS::MCSummary> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCSummary,allocator<RAT::DS::MCSummary> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR = { "vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiterator = { "vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR = { "vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiterator = { "vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR = { "vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiterator = { "vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT = { "RAT::DS::PMT" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPosFit = { "RAT::DS::PosFit" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid = { "RAT::DS::Centroid" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit = { "RAT::DS::PathFit" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV = { "RAT::DS::EV" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR = { "vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiterator = { "vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR = { "vector<RAT::DS::Centroid,allocator<RAT::DS::Centroid> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::Centroid,allocator<RAT::DS::Centroid> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR = { "vector<RAT::DS::PathFit,allocator<RAT::DS::PathFit> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::PathFit,allocator<RAT::DS::PathFit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib = { "RAT::DS::Calib" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot = { "RAT::DS::Root" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR = { "vector<pair<string,int>,allocator<pair<string,int> > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiterator = { "vector<pair<string,int>,allocator<pair<string,int> > >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<string,int>,allocator<pair<string,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR = { "vector<RAT::DS::MC,allocator<RAT::DS::MC> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiterator = { "vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR = { "vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiterator = { "vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR = { "vector<RAT::DS::EV,allocator<RAT::DS::EV> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiterator = { "vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo = { "RAT::DS::PMTInfo" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR = { "vector<TVector3,allocator<TVector3> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator = { "vector<TVector3,allocator<TVector3> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVector3,allocator<TVector3> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun = { "RAT::DS::Run" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR = { "vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiterator = { "vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRunStore = { "RAT::DS::RunStore" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR = { "map<int,RAT::DS::RunRecord*,less<int>,allocator<pair<const int,RAT::DS::RunRecord*> > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDSReader = { "RAT::DSReader" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDSWriter = { "RAT::DSWriter" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLTrackNode = { "RAT::TrackNode" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR = { "vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiterator = { "vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLTrackTest = { "RAT::TrackTest" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_unary_functionlERATcLcLTrackNodemUcOboolgR = { "unary_function<RAT::TrackNode*,bool>" , 115 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLTrackCursor = { "RAT::TrackCursor" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLTrackNav = { "RAT::TrackNav" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR = { "map<int,RAT::TrackNode*,less<int>,allocator<pair<const int,RAT::TrackNode*> > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLHTTPDownloader = { "RAT::HTTPDownloader" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDBFieldCallback = { "RAT::DBFieldCallback" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_pairlEboolcOunsignedsPintgR = { "pair<bool,unsigned int>" , 115 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_stlplus = { "stlplus" , 110 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDBTable = { "RAT::DBTable" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType = { "RAT::DBTable::FieldType" , 101 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBTablecLcLFieldTypecORATcLcLpyhashcOequal_tolEstringgRsPgR = { "stlplus::hash<string,RAT::DBTable::FieldType,RAT::pyhash,equal_to<string> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_pairlEstlpluscLcLhash_iteratorlEstringcORATcLcLDBTablecLcLFieldTypecORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBTablecLcLFieldTypegRsPgRcOboolgR = { "pair<stlplus::hash_iterator<string,RAT::DBTable::FieldType,RAT::pyhash,equal_to<string>,pair<const string,RAT::DBTable::FieldType> >,bool>" , 115 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR = { "stlplus::hash<string,RAT::DBFieldCallback*,RAT::pyhash,equal_to<string> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_stlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgR = { "stlplus::hash_iterator<string,RAT::DBFieldCallback*,RAT::pyhash,equal_to<string>,pair<const string,RAT::DBFieldCallback*> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_stlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOconstsPpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgR = { "stlplus::hash_iterator<string,RAT::DBFieldCallback*,RAT::pyhash,equal_to<string>,const pair<const string,RAT::DBFieldCallback*> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_pairlEstlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgRcOboolgR = { "pair<stlplus::hash_iterator<string,RAT::DBFieldCallback*,RAT::pyhash,equal_to<string>,pair<const string,RAT::DBFieldCallback*> >,bool>" , 115 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDB = { "RAT::DB" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDBLink = { "RAT::DBLink" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBTablegR = { "simple_ptr_nocopy<RAT::DBTable>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRcOlesslERATcLcLDBTableKeygRcOallocatorlEpairlEconstsPRATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgRsPgRsPgR = { "map<RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable>,less<RAT::DBTableKey>,allocator<pair<const RAT::DBTableKey,simple_ptr_nocopy<RAT::DBTable> > > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR = { "simple_ptr_nocopy<RAT::DBLink>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_maplEstringcOsimple_ptr_nocopylERATcLcLDBLinkgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOsimple_ptr_nocopylERATcLcLDBLinkgRsPgRsPgRsPgR = { "map<string,simple_ptr_nocopy<RAT::DBLink>,less<string>,allocator<pair<const string,simple_ptr_nocopy<RAT::DBLink> > > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR = { "vector<RAT::DBTable*,allocator<RAT::DBTable*> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiterator = { "vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DBTable*,allocator<RAT::DBTable*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_listlERATcLcLDBLinkmUcOallocatorlERATcLcLDBLinkmUgRsPgR = { "list<RAT::DBLink*,allocator<RAT::DBLink*> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_setlERATcLcLDBTableKeycOlesslERATcLcLDBTableKeygRcOallocatorlERATcLcLDBTableKeygRsPgR = { "set<RAT::DBTableKey,less<RAT::DBTableKey>,allocator<RAT::DBTableKey> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_dequelEpairlERATcLcLDBTableKeycOboolgRcOallocatorlEpairlERATcLcLDBTableKeycOboolgRsPgRsPgR = { "deque<pair<RAT::DBTableKey,bool>,allocator<pair<RAT::DBTableKey,bool> > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_dequelERATcLcLTokenizercOallocatorlERATcLcLTokenizergRsPgR = { "deque<RAT::Tokenizer,allocator<RAT::Tokenizer> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_stacklERATcLcLTokenizercOdequelERATcLcLTokenizercOallocatorlERATcLcLTokenizergRsPgRsPgR = { "stack<RAT::Tokenizer,deque<RAT::Tokenizer,allocator<RAT::Tokenizer> > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDBTextLoader = { "RAT::DBTextLoader" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLDBJsonLoader = { "RAT::DBJsonLoader" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLObjInt = { "RAT::ObjInt" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_RATcLcLObjDbl = { "RAT::ObjDbl" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_pairlEstringcOstringgR = { "pair<string,string>" , 115 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_allocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "allocator<pair<const int,vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR = { "map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_pairlEintcOvectorlEintcOallocatorlEintgRsPgRsPgR = { "pair<int,vector<int,allocator<int> > >" , 115 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator = { "map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLreverse_iterator = { "map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_pairlEmaplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR = { "vector<RAT::DS::Root,allocator<RAT::DS::Root> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiterator = { "vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::Root,allocator<RAT::DS::Root> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR = { "vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiterator = { "vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR = { "vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiterator = { "vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR = { "vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiterator = { "vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR = { "vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiterator = { "vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR = { "vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiterator = { "vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR = { "vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiterator = { "vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR = { "vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiterator = { "vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator" , 99 , -1 };
G__linked_taginfo G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRAT_Dict_jailbreak() {
  G__RAT_Dict_jailbreakLN_TClass.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TBuffer.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMemberInspector.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TObject.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_string.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TTimeStamp.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TVector3.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RAT.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDS.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_pairlEstringcOintgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_lesslEintgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_allocatorlEpairlEconstsPintcOintgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_pairlEintcOintgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCSummary.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_oftext.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_ostext.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_omtext.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlEotextcOallocatorlEotextgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEotextcOallocatorlEotextgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlEitextcOallocatorlEitextgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEitextcOallocatorlEitextgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TMap.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_json.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_jsoncLcLValue.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_maplEstringcOjsoncLcLValuecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOjsoncLcLValuegRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlEjsoncLcLValuecOallocatorlEjsoncLcLValuegRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEjsoncLcLValuecOallocatorlEjsoncLcLValuegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_jsoncLcLTData.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_jsoncLcLType.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLLog.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLLogcLcLLevel.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_pairlEstringcOTObjectmUgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPosFit.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TTree.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TFile.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRunStore.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_TChain.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDSReader.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDSWriter.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLTrackNode.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLTrackTest.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_unary_functionlERATcLcLTrackNodemUcOboolgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLTrackCursor.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLTrackNav.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLHTTPDownloader.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDBFieldCallback.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_pairlEboolcOunsignedsPintgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_stlplus.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDBTable.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBTablecLcLFieldTypecORATcLcLpyhashcOequal_tolEstringgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_pairlEstlpluscLcLhash_iteratorlEstringcORATcLcLDBTablecLcLFieldTypecORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBTablecLcLFieldTypegRsPgRcOboolgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_stlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_stlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOconstsPpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_pairlEstlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgRcOboolgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDB.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDBLink.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBTablegR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRcOlesslERATcLcLDBTableKeygRcOallocatorlEpairlEconstsPRATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_maplEstringcOsimple_ptr_nocopylERATcLcLDBLinkgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOsimple_ptr_nocopylERATcLcLDBLinkgRsPgRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_listlERATcLcLDBLinkmUcOallocatorlERATcLcLDBLinkmUgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_setlERATcLcLDBTableKeycOlesslERATcLcLDBTableKeygRcOallocatorlERATcLcLDBTableKeygRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_dequelEpairlERATcLcLDBTableKeycOboolgRcOallocatorlEpairlERATcLcLDBTableKeycOboolgRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_dequelERATcLcLTokenizercOallocatorlERATcLcLTokenizergRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_stacklERATcLcLTokenizercOdequelERATcLcLTokenizercOallocatorlERATcLcLTokenizergRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDBTextLoader.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLDBJsonLoader.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLObjInt.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_RATcLcLObjDbl.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_pairlEstringcOstringgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_allocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_pairlEintcOvectorlEintcOallocatorlEintgRsPgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_pairlEmaplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRAT_Dict_jailbreak() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TClass);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TObject);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_string);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TTimeStamp);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TVector3);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RAT);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCParticle),sizeof(RAT::DS::MCParticle),-1,292096,(char*)NULL,G__setup_memvarRATcLcLDScLcLMCParticle,G__setup_memfuncRATcLcLDScLcLMCParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrackStep),sizeof(RAT::DS::MCTrackStep),-1,292096,(char*)NULL,G__setup_memvarRATcLcLDScLcLMCTrackStep,G__setup_memfuncRATcLcLDScLcLMCTrackStep);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCTrack),sizeof(RAT::DS::MCTrack),-1,292096,(char*)NULL,G__setup_memvarRATcLcLDScLcLMCTrack,G__setup_memfuncRATcLcLDScLcLMCTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR),sizeof(vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_pairlEstringcOintgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_lesslEintgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_allocatorlEpairlEconstsPintcOintgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_pairlEintcOintgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcLcLreverse_iterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCSummary),sizeof(RAT::DS::MCSummary),-1,292096,(char*)NULL,G__setup_memvarRATcLcLDScLcLMCSummary,G__setup_memfuncRATcLcLDScLcLMCSummary);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPhoton),sizeof(RAT::DS::MCPhoton),-1,292096,(char*)NULL,G__setup_memvarRATcLcLDScLcLMCPhoton,G__setup_memfuncRATcLcLDScLcLMCPhoton);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_oftext);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_ostext);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_omtext);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlEotextcOallocatorlEotextgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEotextcOallocatorlEotextgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlEitextcOallocatorlEitextgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEitextcOallocatorlEitextgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TMap);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_json);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_jsoncLcLValue),sizeof(json::Value),-1,298752,(char*)NULL,G__setup_memvarjsoncLcLValue,G__setup_memfuncjsoncLcLValue);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_maplEstringcOjsoncLcLValuecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOjsoncLcLValuegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlEjsoncLcLValuecOallocatorlEjsoncLcLValuegRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEjsoncLcLValuecOallocatorlEjsoncLcLValuegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_jsoncLcLTData);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_jsoncLcLType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLLog),sizeof(RAT::Log),-1,262400,(char*)NULL,G__setup_memvarRATcLcLLog,G__setup_memfuncRATcLcLLog);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLLogcLcLLevel);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_pairlEstringcOTObjectmUgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOTObjectmUgRcOallocatorlEpairlEstringcOTObjectmUgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMCPMT),sizeof(RAT::DS::MCPMT),-1,292096,(char*)NULL,G__setup_memvarRATcLcLDScLcLMCPMT,G__setup_memfuncRATcLcLDScLcLMCPMT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR),sizeof(vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLMC),sizeof(RAT::DS::MC),-1,292096,(char*)NULL,G__setup_memvarRATcLcLDScLcLMC,G__setup_memfuncRATcLcLDScLcLMC);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR),sizeof(vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR),sizeof(vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR),sizeof(vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMT),sizeof(RAT::DS::PMT),-1,292096,(char*)NULL,G__setup_memvarRATcLcLDScLcLPMT,G__setup_memfuncRATcLcLDScLcLPMT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPosFit),sizeof(RAT::DS::PosFit),-1,295936,(char*)NULL,G__setup_memvarRATcLcLDScLcLPosFit,G__setup_memfuncRATcLcLDScLcLPosFit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCentroid),sizeof(RAT::DS::Centroid),-1,324864,(char*)NULL,G__setup_memvarRATcLcLDScLcLCentroid,G__setup_memfuncRATcLcLDScLcLCentroid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPathFit),sizeof(RAT::DS::PathFit),-1,324864,(char*)NULL,G__setup_memvarRATcLcLDScLcLPathFit,G__setup_memfuncRATcLcLDScLcLPathFit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLEV),sizeof(RAT::DS::EV),-1,292096,(char*)NULL,G__setup_memvarRATcLcLDScLcLEV,G__setup_memfuncRATcLcLDScLcLEV);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR),sizeof(vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLCalib),sizeof(RAT::DS::Calib),-1,292096,(char*)NULL,G__setup_memvarRATcLcLDScLcLCalib,G__setup_memfuncRATcLcLDScLcLCalib);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRoot),sizeof(RAT::DS::Root),-1,292096,(char*)NULL,G__setup_memvarRATcLcLDScLcLRoot,G__setup_memfuncRATcLcLDScLcLRoot);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),sizeof(vector<pair<string,int>,allocator<pair<string,int> > >),-1,36608,(char*)NULL,G__setup_memvarvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR,G__setup_memfuncvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR),sizeof(vector<RAT::DS::MC,allocator<RAT::DS::MC> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR),sizeof(vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR),sizeof(vector<RAT::DS::EV,allocator<RAT::DS::EV> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TTree);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TFile);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLPMTInfo),sizeof(RAT::DS::PMTInfo),-1,292096,(char*)NULL,G__setup_memvarRATcLcLDScLcLPMTInfo,G__setup_memfuncRATcLcLDScLcLPMTInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgR),sizeof(vector<TVector3,allocator<TVector3> >),-1,36608,(char*)NULL,G__setup_memvarvectorlETVector3cOallocatorlETVector3gRsPgR,G__setup_memfuncvectorlETVector3cOallocatorlETVector3gRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRun),sizeof(RAT::DS::Run),-1,292096,(char*)NULL,G__setup_memvarRATcLcLDScLcLRun,G__setup_memfuncRATcLcLDScLcLRun);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR),sizeof(vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDScLcLRunStore),sizeof(RAT::DS::RunStore),-1,263424,(char*)NULL,G__setup_memvarRATcLcLDScLcLRunStore,G__setup_memfuncRATcLcLDScLcLRunStore);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDSReader),sizeof(RAT::DSReader),-1,62464,(char*)NULL,G__setup_memvarRATcLcLDSReader,G__setup_memfuncRATcLcLDSReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDSWriter),sizeof(RAT::DSWriter),-1,62464,(char*)NULL,G__setup_memvarRATcLcLDSWriter,G__setup_memfuncRATcLcLDSWriter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNode),sizeof(RAT::TrackNode),-1,32000,(char*)NULL,G__setup_memvarRATcLcLTrackNode,G__setup_memfuncRATcLcLTrackNode);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR),sizeof(vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR,G__setup_memfuncvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLTrackTest);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_unary_functionlERATcLcLTrackNodemUcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLTrackCursor),sizeof(RAT::TrackCursor),-1,32768,(char*)NULL,G__setup_memvarRATcLcLTrackCursor,G__setup_memfuncRATcLcLTrackCursor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLTrackNav),sizeof(RAT::TrackNav),-1,32768,(char*)NULL,G__setup_memvarRATcLcLTrackNav,G__setup_memfuncRATcLcLTrackNav);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLHTTPDownloader),sizeof(RAT::HTTPDownloader),-1,263424,(char*)NULL,G__setup_memvarRATcLcLHTTPDownloader,G__setup_memfuncRATcLcLHTTPDownloader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDBFieldCallback),sizeof(RAT::DBFieldCallback),-1,263170,(char*)NULL,G__setup_memvarRATcLcLDBFieldCallback,G__setup_memfuncRATcLcLDBFieldCallback);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_pairlEboolcOunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_stlplus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDBTable),sizeof(RAT::DBTable),-1,296192,(char*)NULL,G__setup_memvarRATcLcLDBTable,G__setup_memfuncRATcLcLDBTable);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDBTablecLcLFieldType);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBTablecLcLFieldTypecORATcLcLpyhashcOequal_tolEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_pairlEstlpluscLcLhash_iteratorlEstringcORATcLcLDBTablecLcLFieldTypecORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBTablecLcLFieldTypegRsPgRcOboolgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_stlpluscLcLhashlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_stlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_stlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOconstsPpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_pairlEstlpluscLcLhash_iteratorlEstringcORATcLcLDBFieldCallbackmUcORATcLcLpyhashcOequal_tolEstringgRcOpairlEconstsPstringcORATcLcLDBFieldCallbackmUgRsPgRcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDB),sizeof(RAT::DB),-1,263424,(char*)NULL,G__setup_memvarRATcLcLDB,G__setup_memfuncRATcLcLDB);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDBLink),sizeof(RAT::DBLink),-1,295936,(char*)NULL,G__setup_memvarRATcLcLDBLink,G__setup_memfuncRATcLcLDBLink);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBTablegR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_maplERATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRcOlesslERATcLcLDBTableKeygRcOallocatorlEpairlEconstsPRATcLcLDBTableKeycOsimple_ptr_nocopylERATcLcLDBTablegRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_simple_ptr_nocopylERATcLcLDBLinkgR),sizeof(simple_ptr_nocopy<RAT::DBLink>),-1,298752,(char*)NULL,G__setup_memvarsimple_ptr_nocopylERATcLcLDBLinkgR,G__setup_memfuncsimple_ptr_nocopylERATcLcLDBLinkgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_maplEstringcOsimple_ptr_nocopylERATcLcLDBLinkgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOsimple_ptr_nocopylERATcLcLDBLinkgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR),sizeof(vector<RAT::DBTable*,allocator<RAT::DBTable*> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR,G__setup_memfuncvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDBTablemUcOallocatorlERATcLcLDBTablemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_listlERATcLcLDBLinkmUcOallocatorlERATcLcLDBLinkmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_setlERATcLcLDBTableKeycOlesslERATcLcLDBTableKeygRcOallocatorlERATcLcLDBTableKeygRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_dequelEpairlERATcLcLDBTableKeycOboolgRcOallocatorlEpairlERATcLcLDBTableKeycOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_dequelERATcLcLTokenizercOallocatorlERATcLcLTokenizergRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_stacklERATcLcLTokenizercOdequelERATcLcLTokenizercOallocatorlERATcLcLTokenizergRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDBTextLoader),sizeof(RAT::DBTextLoader),-1,262144,(char*)NULL,G__setup_memvarRATcLcLDBTextLoader,G__setup_memfuncRATcLcLDBTextLoader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLDBJsonLoader),sizeof(RAT::DBJsonLoader),-1,262144,(char*)NULL,G__setup_memvarRATcLcLDBJsonLoader,G__setup_memfuncRATcLcLDBJsonLoader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLObjInt),sizeof(RAT::ObjInt),-1,326400,(char*)NULL,G__setup_memvarRATcLcLObjInt,G__setup_memfuncRATcLcLObjInt);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_RATcLcLObjDbl),sizeof(RAT::ObjDbl),-1,326400,(char*)NULL,G__setup_memvarRATcLcLObjDbl,G__setup_memfuncRATcLcLObjDbl);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_pairlEstringcOstringgR),sizeof(pair<string,string>),-1,297216,(char*)NULL,G__setup_memvarpairlEstringcOstringgR,G__setup_memfuncpairlEstringcOstringgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_allocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),sizeof(map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >),-1,298752,(char*)NULL,G__setup_memvarmaplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR,G__setup_memfuncmaplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_pairlEintcOvectorlEintcOallocatorlEintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_pairlEmaplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR),sizeof(vector<RAT::DS::Root,allocator<RAT::DS::Root> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLRootcOallocatorlERATcLcLDScLcLRootgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR),sizeof(vector<RAT::DS::EV*,allocator<RAT::DS::EV*> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVmUcOallocatorlERATcLcLDScLcLEVmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR),sizeof(vector<RAT::DS::PMT*,allocator<RAT::DS::PMT*> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTmUcOallocatorlERATcLcLDScLcLPMTmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR),sizeof(vector<RAT::DS::MCParticle*,allocator<RAT::DS::MCParticle*> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlemUcOallocatorlERATcLcLDScLcLMCParticlemUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR),sizeof(vector<RAT::DS::MCTrack*,allocator<RAT::DS::MCTrack*> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackmUcOallocatorlERATcLcLDScLcLMCTrackmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR),sizeof(vector<RAT::DS::MCPMT*,allocator<RAT::DS::MCPMT*> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTmUcOallocatorlERATcLcLDScLcLMCPMTmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR),sizeof(vector<RAT::DS::MCPhoton*,allocator<RAT::DS::MCPhoton*> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotonmUcOallocatorlERATcLcLDScLcLMCPhotonmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR),sizeof(vector<RAT::DS::MCTrackStep*,allocator<RAT::DS::MCTrackStep*> >),-1,36608,(char*)NULL,G__setup_memvarvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR,G__setup_memfuncvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_vectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RAT_Dict_jailbreakLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepmUcOallocatorlERATcLcLDScLcLMCTrackStepmUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupRAT_Dict_jailbreak(void) {
  G__check_setup_version(30051515,"G__cpp_setupRAT_Dict_jailbreak()");
  G__set_cpp_environmentRAT_Dict_jailbreak();
  G__cpp_setup_tagtableRAT_Dict_jailbreak();

  G__cpp_setup_inheritanceRAT_Dict_jailbreak();

  G__cpp_setup_typetableRAT_Dict_jailbreak();

  G__cpp_setup_memvarRAT_Dict_jailbreak();

  G__cpp_setup_memfuncRAT_Dict_jailbreak();
  G__cpp_setup_globalRAT_Dict_jailbreak();
  G__cpp_setup_funcRAT_Dict_jailbreak();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRAT_Dict_jailbreak();
  return;
}
class G__cpp_setup_initRAT_Dict_jailbreak {
  public:
    G__cpp_setup_initRAT_Dict_jailbreak() { G__add_setup_func("RAT_Dict_jailbreak",(G__incsetup)(&G__cpp_setupRAT_Dict_jailbreak)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRAT_Dict_jailbreak() { G__remove_setup_func("RAT_Dict_jailbreak"); }
};
G__cpp_setup_initRAT_Dict_jailbreak G__cpp_setup_initializerRAT_Dict_jailbreak;

